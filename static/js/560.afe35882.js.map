{"version":3,"file":"static/js/560.afe35882.js","mappings":"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","sources":["webpack://vue-mange/./config/index.js","webpack://vue-mange/./api/axios.js","webpack://vue-mange/./api/data.js","webpack://vue-mange/./node_modules/less/dist/less.js"],"sourcesContent":["export default {\r\n  baseUrl: {\r\n    dev:'/api/',\r\n    pro:''\r\n  }, \r\n}","import axios from 'axios'\r\nimport { options } from 'less'\r\nimport config from '../config'\r\n\r\nconst baseUrl = process.env.NODE_ENV === 'development' ? config.baseUrl.dev : config.baseUrl.pro\r\n\r\nclass HttpRequest {\r\n  constructor (baseUrl) {\r\n    this.baseUrl = baseUrl\r\n  }\r\n\r\n  getInsideConfig() {\r\n    const config = {\r\n      baseUrl: this.baseUrl,\r\n      header: {}\r\n    }\r\n    return config\r\n  }\r\n  interceptors (instance) {\r\n    // 添加请求拦截器\r\n      instance.interceptors.request.use(function (config) {\r\n        // 在发送请求之前做些什么\r\n        return config;\r\n      }, function (error) {\r\n        // 对请求错误做些什么\r\n        return Promise.reject(error);\r\n      });\r\n\r\n      // 添加响应拦截器\r\n      instance.interceptors.response.use(function (response) {\r\n        // 对响应数据做点什么\r\n        return response;\r\n      }, function (error) {\r\n        // 对响应错误做点什么\r\n        return Promise.reject(error);\r\n      });\r\n        }\r\n        request(options) {\r\n          const instance = axios.create() \r\n          options = {...this.getInsideConfig(), ...options}\r\n          this.interceptors(instance)\r\n          return instance(options)\r\n        }\r\n}\r\n\r\nexport default new HttpRequest(baseUrl)\r\n","import axios from './axios'\r\n\r\nexport const getMenu = (param) => {\r\n  return axios.request({\r\n    url:'/permission/getMenu',\r\n    method:'post',\r\n    data: param\r\n  })\r\n}\r\n\r\nexport const getData = () => {\r\n  return axios.request({\r\n    url:'/home/getData'\r\n  })\r\n}\r\n\r\nexport const getUser = (params) => {\r\n  return axios.request({\r\n    url:'/user/getUser',\r\n    method:'get',\r\n    params\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","/**\n * Less - Leaner CSS v4.1.3\n * http://lesscss.org\n * \n * Copyright (c) 2009-2022, Alexis Sellier <self@cloudhead.net>\n * Licensed under the Apache-2.0 License.\n *\n * @license Apache-2.0\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.less = factory());\n}(this, (function () { 'use strict';\n\n    // Export a new default each time\r\n    function defaultOptions () {\r\n        return {\r\n            /* Inline Javascript - @plugin still allowed */\r\n            javascriptEnabled: false,\r\n            /* Outputs a makefile import dependency list to stdout. */\r\n            depends: false,\r\n            /* (DEPRECATED) Compress using less built-in compression.\r\n             * This does an okay job but does not utilise all the tricks of\r\n             * dedicated css compression. */\r\n            compress: false,\r\n            /* Runs the less parser and just reports errors without any output. */\r\n            lint: false,\r\n            /* Sets available include paths.\r\n             * If the file in an @import rule does not exist at that exact location,\r\n             * less will look for it at the location(s) passed to this option.\r\n             * You might use this for instance to specify a path to a library which\r\n             * you want to be referenced simply and relatively in the less files. */\r\n            paths: [],\r\n            /* color output in the terminal */\r\n            color: true,\r\n            /* The strictImports controls whether the compiler will allow an @import inside of either\r\n             * @media blocks or (a later addition) other selector blocks.\r\n             * See: https://github.com/less/less.js/issues/656 */\r\n            strictImports: false,\r\n            /* Allow Imports from Insecure HTTPS Hosts */\r\n            insecure: false,\r\n            /* Allows you to add a path to every generated import and url in your css.\r\n             * This does not affect less import statements that are processed, just ones\r\n             * that are left in the output css. */\r\n            rootpath: '',\r\n            /* By default URLs are kept as-is, so if you import a file in a sub-directory\r\n             * that references an image, exactly the same URL will be output in the css.\r\n             * This option allows you to re-write URL's in imported files so that the\r\n             * URL is always relative to the base imported file */\r\n            rewriteUrls: false,\r\n            /* How to process math\r\n             *   0 always           - eagerly try to solve all operations\r\n             *   1 parens-division  - require parens for division \"/\"\r\n             *   2 parens | strict  - require parens for all operations\r\n             *   3 strict-legacy    - legacy strict behavior (super-strict)\r\n             */\r\n            math: 1,\r\n            /* Without this option, less attempts to guess at the output unit when it does maths. */\r\n            strictUnits: false,\r\n            /* Effectively the declaration is put at the top of your base Less file,\r\n             * meaning it can be used but it also can be overridden if this variable\r\n             * is defined in the file. */\r\n            globalVars: null,\r\n            /* As opposed to the global variable option, this puts the declaration at the\r\n             * end of your base file, meaning it will override anything defined in your Less file. */\r\n            modifyVars: null,\r\n            /* This option allows you to specify a argument to go on to every URL.  */\r\n            urlArgs: ''\r\n        };\r\n    }\n\n    function extractId(href) {\r\n        return href.replace(/^[a-z-]+:\\/+?[^\\/]+/, '') // Remove protocol & domain\r\n            .replace(/[\\?\\&]livereload=\\w+/, '') // Remove LiveReload cachebuster\r\n            .replace(/^\\//, '') // Remove root /\r\n            .replace(/\\.[a-zA-Z]+$/, '') // Remove simple extension\r\n            .replace(/[^\\.\\w-]+/g, '-') // Replace illegal characters\r\n            .replace(/\\./g, ':'); // Replace dots with colons(for valid id)\r\n    }\r\n    function addDataAttr(options, tag) {\r\n        if (!tag) {\r\n            return;\r\n        } // in case of tag is null or undefined\r\n        for (var opt in tag.dataset) {\r\n            if (tag.dataset.hasOwnProperty(opt)) {\r\n                if (opt === 'env' || opt === 'dumpLineNumbers' || opt === 'rootpath' || opt === 'errorReporting') {\r\n                    options[opt] = tag.dataset[opt];\r\n                }\r\n                else {\r\n                    try {\r\n                        options[opt] = JSON.parse(tag.dataset[opt]);\r\n                    }\r\n                    catch (_) { }\r\n                }\r\n            }\r\n        }\r\n    }\n\n    var browser = {\r\n        createCSS: function (document, styles, sheet) {\r\n            // Strip the query-string\r\n            var href = sheet.href || '';\r\n            // If there is no title set, use the filename, minus the extension\r\n            var id = \"less:\" + (sheet.title || extractId(href));\r\n            // If this has already been inserted into the DOM, we may need to replace it\r\n            var oldStyleNode = document.getElementById(id);\r\n            var keepOldStyleNode = false;\r\n            // Create a new stylesheet node for insertion or (if necessary) replacement\r\n            var styleNode = document.createElement('style');\r\n            styleNode.setAttribute('type', 'text/css');\r\n            if (sheet.media) {\r\n                styleNode.setAttribute('media', sheet.media);\r\n            }\r\n            styleNode.id = id;\r\n            if (!styleNode.styleSheet) {\r\n                styleNode.appendChild(document.createTextNode(styles));\r\n                // If new contents match contents of oldStyleNode, don't replace oldStyleNode\r\n                keepOldStyleNode = (oldStyleNode !== null && oldStyleNode.childNodes.length > 0 && styleNode.childNodes.length > 0 &&\r\n                    oldStyleNode.firstChild.nodeValue === styleNode.firstChild.nodeValue);\r\n            }\r\n            var head = document.getElementsByTagName('head')[0];\r\n            // If there is no oldStyleNode, just append; otherwise, only append if we need\r\n            // to replace oldStyleNode with an updated stylesheet\r\n            if (oldStyleNode === null || keepOldStyleNode === false) {\r\n                var nextEl = sheet && sheet.nextSibling || null;\r\n                if (nextEl) {\r\n                    nextEl.parentNode.insertBefore(styleNode, nextEl);\r\n                }\r\n                else {\r\n                    head.appendChild(styleNode);\r\n                }\r\n            }\r\n            if (oldStyleNode && keepOldStyleNode === false) {\r\n                oldStyleNode.parentNode.removeChild(oldStyleNode);\r\n            }\r\n            // For IE.\r\n            // This needs to happen *after* the style element is added to the DOM, otherwise IE 7 and 8 may crash.\r\n            // See http://social.msdn.microsoft.com/Forums/en-US/7e081b65-878a-4c22-8e68-c10d39c2ed32/internet-explorer-crashes-appending-style-element-to-head\r\n            if (styleNode.styleSheet) {\r\n                try {\r\n                    styleNode.styleSheet.cssText = styles;\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Couldn\\'t reassign styleSheet.cssText.');\r\n                }\r\n            }\r\n        },\r\n        currentScript: function (window) {\r\n            var document = window.document;\r\n            return document.currentScript || (function () {\r\n                var scripts = document.getElementsByTagName('script');\r\n                return scripts[scripts.length - 1];\r\n            })();\r\n        }\r\n    };\n\n    var addDefaultOptions = (function (window, options) {\r\n        // use options from the current script tag data attribues\r\n        addDataAttr(options, browser.currentScript(window));\r\n        if (options.isFileProtocol === undefined) {\r\n            options.isFileProtocol = /^(file|(chrome|safari)(-extension)?|resource|qrc|app):/.test(window.location.protocol);\r\n        }\r\n        // Load styles asynchronously (default: false)\r\n        //\r\n        // This is set to `false` by default, so that the body\r\n        // doesn't start loading before the stylesheets are parsed.\r\n        // Setting this to `true` can result in flickering.\r\n        //\r\n        options.async = options.async || false;\r\n        options.fileAsync = options.fileAsync || false;\r\n        // Interval between watch polls\r\n        options.poll = options.poll || (options.isFileProtocol ? 1000 : 1500);\r\n        options.env = options.env || (window.location.hostname == '127.0.0.1' ||\r\n            window.location.hostname == '0.0.0.0' ||\r\n            window.location.hostname == 'localhost' ||\r\n            (window.location.port &&\r\n                window.location.port.length > 0) ||\r\n            options.isFileProtocol ? 'development'\r\n            : 'production');\r\n        var dumpLineNumbers = /!dumpLineNumbers:(comments|mediaquery|all)/.exec(window.location.hash);\r\n        if (dumpLineNumbers) {\r\n            options.dumpLineNumbers = dumpLineNumbers[1];\r\n        }\r\n        if (options.useFileCache === undefined) {\r\n            options.useFileCache = true;\r\n        }\r\n        if (options.onReady === undefined) {\r\n            options.onReady = true;\r\n        }\r\n        if (options.relativeUrls) {\r\n            options.rewriteUrls = 'all';\r\n        }\r\n    });\n\n    var logger$1 = {\r\n        error: function (msg) {\r\n            this._fireEvent('error', msg);\r\n        },\r\n        warn: function (msg) {\r\n            this._fireEvent('warn', msg);\r\n        },\r\n        info: function (msg) {\r\n            this._fireEvent('info', msg);\r\n        },\r\n        debug: function (msg) {\r\n            this._fireEvent('debug', msg);\r\n        },\r\n        addListener: function (listener) {\r\n            this._listeners.push(listener);\r\n        },\r\n        removeListener: function (listener) {\r\n            for (var i = 0; i < this._listeners.length; i++) {\r\n                if (this._listeners[i] === listener) {\r\n                    this._listeners.splice(i, 1);\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n        _fireEvent: function (type, msg) {\r\n            for (var i = 0; i < this._listeners.length; i++) {\r\n                var logFunction = this._listeners[i][type];\r\n                if (logFunction) {\r\n                    logFunction(msg);\r\n                }\r\n            }\r\n        },\r\n        _listeners: []\r\n    };\n\n    /**\r\n     * @todo Document why this abstraction exists, and the relationship between\r\n     *       environment, file managers, and plugin manager\r\n     */\r\n    var Environment = /** @class */ (function () {\r\n        function Environment(externalEnvironment, fileManagers) {\r\n            this.fileManagers = fileManagers || [];\r\n            externalEnvironment = externalEnvironment || {};\r\n            var optionalFunctions = ['encodeBase64', 'mimeLookup', 'charsetLookup', 'getSourceMapGenerator'];\r\n            var requiredFunctions = [];\r\n            var functions = requiredFunctions.concat(optionalFunctions);\r\n            for (var i = 0; i < functions.length; i++) {\r\n                var propName = functions[i];\r\n                var environmentFunc = externalEnvironment[propName];\r\n                if (environmentFunc) {\r\n                    this[propName] = environmentFunc.bind(externalEnvironment);\r\n                }\r\n                else if (i < requiredFunctions.length) {\r\n                    this.warn(\"missing required function in environment - \" + propName);\r\n                }\r\n            }\r\n        }\r\n        Environment.prototype.getFileManager = function (filename, currentDirectory, options, environment, isSync) {\r\n            if (!filename) {\r\n                logger$1.warn('getFileManager called with no filename.. Please report this issue. continuing.');\r\n            }\r\n            if (currentDirectory == null) {\r\n                logger$1.warn('getFileManager called with null directory.. Please report this issue. continuing.');\r\n            }\r\n            var fileManagers = this.fileManagers;\r\n            if (options.pluginManager) {\r\n                fileManagers = [].concat(fileManagers).concat(options.pluginManager.getFileManagers());\r\n            }\r\n            for (var i = fileManagers.length - 1; i >= 0; i--) {\r\n                var fileManager = fileManagers[i];\r\n                if (fileManager[isSync ? 'supportsSync' : 'supports'](filename, currentDirectory, options, environment)) {\r\n                    return fileManager;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        Environment.prototype.addFileManager = function (fileManager) {\r\n            this.fileManagers.push(fileManager);\r\n        };\r\n        Environment.prototype.clearFileManagers = function () {\r\n            this.fileManagers = [];\r\n        };\r\n        return Environment;\r\n    }());\n\n    var colors = {\r\n        'aliceblue': '#f0f8ff',\r\n        'antiquewhite': '#faebd7',\r\n        'aqua': '#00ffff',\r\n        'aquamarine': '#7fffd4',\r\n        'azure': '#f0ffff',\r\n        'beige': '#f5f5dc',\r\n        'bisque': '#ffe4c4',\r\n        'black': '#000000',\r\n        'blanchedalmond': '#ffebcd',\r\n        'blue': '#0000ff',\r\n        'blueviolet': '#8a2be2',\r\n        'brown': '#a52a2a',\r\n        'burlywood': '#deb887',\r\n        'cadetblue': '#5f9ea0',\r\n        'chartreuse': '#7fff00',\r\n        'chocolate': '#d2691e',\r\n        'coral': '#ff7f50',\r\n        'cornflowerblue': '#6495ed',\r\n        'cornsilk': '#fff8dc',\r\n        'crimson': '#dc143c',\r\n        'cyan': '#00ffff',\r\n        'darkblue': '#00008b',\r\n        'darkcyan': '#008b8b',\r\n        'darkgoldenrod': '#b8860b',\r\n        'darkgray': '#a9a9a9',\r\n        'darkgrey': '#a9a9a9',\r\n        'darkgreen': '#006400',\r\n        'darkkhaki': '#bdb76b',\r\n        'darkmagenta': '#8b008b',\r\n        'darkolivegreen': '#556b2f',\r\n        'darkorange': '#ff8c00',\r\n        'darkorchid': '#9932cc',\r\n        'darkred': '#8b0000',\r\n        'darksalmon': '#e9967a',\r\n        'darkseagreen': '#8fbc8f',\r\n        'darkslateblue': '#483d8b',\r\n        'darkslategray': '#2f4f4f',\r\n        'darkslategrey': '#2f4f4f',\r\n        'darkturquoise': '#00ced1',\r\n        'darkviolet': '#9400d3',\r\n        'deeppink': '#ff1493',\r\n        'deepskyblue': '#00bfff',\r\n        'dimgray': '#696969',\r\n        'dimgrey': '#696969',\r\n        'dodgerblue': '#1e90ff',\r\n        'firebrick': '#b22222',\r\n        'floralwhite': '#fffaf0',\r\n        'forestgreen': '#228b22',\r\n        'fuchsia': '#ff00ff',\r\n        'gainsboro': '#dcdcdc',\r\n        'ghostwhite': '#f8f8ff',\r\n        'gold': '#ffd700',\r\n        'goldenrod': '#daa520',\r\n        'gray': '#808080',\r\n        'grey': '#808080',\r\n        'green': '#008000',\r\n        'greenyellow': '#adff2f',\r\n        'honeydew': '#f0fff0',\r\n        'hotpink': '#ff69b4',\r\n        'indianred': '#cd5c5c',\r\n        'indigo': '#4b0082',\r\n        'ivory': '#fffff0',\r\n        'khaki': '#f0e68c',\r\n        'lavender': '#e6e6fa',\r\n        'lavenderblush': '#fff0f5',\r\n        'lawngreen': '#7cfc00',\r\n        'lemonchiffon': '#fffacd',\r\n        'lightblue': '#add8e6',\r\n        'lightcoral': '#f08080',\r\n        'lightcyan': '#e0ffff',\r\n        'lightgoldenrodyellow': '#fafad2',\r\n        'lightgray': '#d3d3d3',\r\n        'lightgrey': '#d3d3d3',\r\n        'lightgreen': '#90ee90',\r\n        'lightpink': '#ffb6c1',\r\n        'lightsalmon': '#ffa07a',\r\n        'lightseagreen': '#20b2aa',\r\n        'lightskyblue': '#87cefa',\r\n        'lightslategray': '#778899',\r\n        'lightslategrey': '#778899',\r\n        'lightsteelblue': '#b0c4de',\r\n        'lightyellow': '#ffffe0',\r\n        'lime': '#00ff00',\r\n        'limegreen': '#32cd32',\r\n        'linen': '#faf0e6',\r\n        'magenta': '#ff00ff',\r\n        'maroon': '#800000',\r\n        'mediumaquamarine': '#66cdaa',\r\n        'mediumblue': '#0000cd',\r\n        'mediumorchid': '#ba55d3',\r\n        'mediumpurple': '#9370d8',\r\n        'mediumseagreen': '#3cb371',\r\n        'mediumslateblue': '#7b68ee',\r\n        'mediumspringgreen': '#00fa9a',\r\n        'mediumturquoise': '#48d1cc',\r\n        'mediumvioletred': '#c71585',\r\n        'midnightblue': '#191970',\r\n        'mintcream': '#f5fffa',\r\n        'mistyrose': '#ffe4e1',\r\n        'moccasin': '#ffe4b5',\r\n        'navajowhite': '#ffdead',\r\n        'navy': '#000080',\r\n        'oldlace': '#fdf5e6',\r\n        'olive': '#808000',\r\n        'olivedrab': '#6b8e23',\r\n        'orange': '#ffa500',\r\n        'orangered': '#ff4500',\r\n        'orchid': '#da70d6',\r\n        'palegoldenrod': '#eee8aa',\r\n        'palegreen': '#98fb98',\r\n        'paleturquoise': '#afeeee',\r\n        'palevioletred': '#d87093',\r\n        'papayawhip': '#ffefd5',\r\n        'peachpuff': '#ffdab9',\r\n        'peru': '#cd853f',\r\n        'pink': '#ffc0cb',\r\n        'plum': '#dda0dd',\r\n        'powderblue': '#b0e0e6',\r\n        'purple': '#800080',\r\n        'rebeccapurple': '#663399',\r\n        'red': '#ff0000',\r\n        'rosybrown': '#bc8f8f',\r\n        'royalblue': '#4169e1',\r\n        'saddlebrown': '#8b4513',\r\n        'salmon': '#fa8072',\r\n        'sandybrown': '#f4a460',\r\n        'seagreen': '#2e8b57',\r\n        'seashell': '#fff5ee',\r\n        'sienna': '#a0522d',\r\n        'silver': '#c0c0c0',\r\n        'skyblue': '#87ceeb',\r\n        'slateblue': '#6a5acd',\r\n        'slategray': '#708090',\r\n        'slategrey': '#708090',\r\n        'snow': '#fffafa',\r\n        'springgreen': '#00ff7f',\r\n        'steelblue': '#4682b4',\r\n        'tan': '#d2b48c',\r\n        'teal': '#008080',\r\n        'thistle': '#d8bfd8',\r\n        'tomato': '#ff6347',\r\n        'turquoise': '#40e0d0',\r\n        'violet': '#ee82ee',\r\n        'wheat': '#f5deb3',\r\n        'white': '#ffffff',\r\n        'whitesmoke': '#f5f5f5',\r\n        'yellow': '#ffff00',\r\n        'yellowgreen': '#9acd32'\r\n    };\n\n    var unitConversions = {\r\n        length: {\r\n            'm': 1,\r\n            'cm': 0.01,\r\n            'mm': 0.001,\r\n            'in': 0.0254,\r\n            'px': 0.0254 / 96,\r\n            'pt': 0.0254 / 72,\r\n            'pc': 0.0254 / 72 * 12\r\n        },\r\n        duration: {\r\n            's': 1,\r\n            'ms': 0.001\r\n        },\r\n        angle: {\r\n            'rad': 1 / (2 * Math.PI),\r\n            'deg': 1 / 360,\r\n            'grad': 1 / 400,\r\n            'turn': 1\r\n        }\r\n    };\n\n    var data = { colors: colors, unitConversions: unitConversions };\n\n    /**\r\n     * The reason why Node is a class and other nodes simply do not extend\r\n     * from Node (since we're transpiling) is due to this issue:\r\n     *\r\n     * https://github.com/less/less.js/issues/3434\r\n     */\r\n    var Node = /** @class */ (function () {\r\n        function Node() {\r\n            this.parent = null;\r\n            this.visibilityBlocks = undefined;\r\n            this.nodeVisible = undefined;\r\n            this.rootNode = null;\r\n            this.parsed = null;\r\n        }\r\n        Object.defineProperty(Node.prototype, \"currentFileInfo\", {\r\n            get: function () {\r\n                return this.fileInfo();\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Node.prototype, \"index\", {\r\n            get: function () {\r\n                return this.getIndex();\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Node.prototype.setParent = function (nodes, parent) {\r\n            function set(node) {\r\n                if (node && node instanceof Node) {\r\n                    node.parent = parent;\r\n                }\r\n            }\r\n            if (Array.isArray(nodes)) {\r\n                nodes.forEach(set);\r\n            }\r\n            else {\r\n                set(nodes);\r\n            }\r\n        };\r\n        Node.prototype.getIndex = function () {\r\n            return this._index || (this.parent && this.parent.getIndex()) || 0;\r\n        };\r\n        Node.prototype.fileInfo = function () {\r\n            return this._fileInfo || (this.parent && this.parent.fileInfo()) || {};\r\n        };\r\n        Node.prototype.isRulesetLike = function () { return false; };\r\n        Node.prototype.toCSS = function (context) {\r\n            var strs = [];\r\n            this.genCSS(context, {\r\n                add: function (chunk, fileInfo, index) {\r\n                    strs.push(chunk);\r\n                },\r\n                isEmpty: function () {\r\n                    return strs.length === 0;\r\n                }\r\n            });\r\n            return strs.join('');\r\n        };\r\n        Node.prototype.genCSS = function (context, output) {\r\n            output.add(this.value);\r\n        };\r\n        Node.prototype.accept = function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        };\r\n        Node.prototype.eval = function () { return this; };\r\n        Node.prototype._operate = function (context, op, a, b) {\r\n            switch (op) {\r\n                case '+': return a + b;\r\n                case '-': return a - b;\r\n                case '*': return a * b;\r\n                case '/': return a / b;\r\n            }\r\n        };\r\n        Node.prototype.fround = function (context, value) {\r\n            var precision = context && context.numPrecision;\r\n            // add \"epsilon\" to ensure numbers like 1.000000005 (represented as 1.000000004999...) are properly rounded:\r\n            return (precision) ? Number((value + 2e-16).toFixed(precision)) : value;\r\n        };\r\n        Node.compare = function (a, b) {\r\n            /* returns:\r\n             -1: a < b\r\n             0: a = b\r\n             1: a > b\r\n             and *any* other value for a != b (e.g. undefined, NaN, -2 etc.) */\r\n            if ((a.compare) &&\r\n                // for \"symmetric results\" force toCSS-based comparison\r\n                // of Quoted or Anonymous if either value is one of those\r\n                !(b.type === 'Quoted' || b.type === 'Anonymous')) {\r\n                return a.compare(b);\r\n            }\r\n            else if (b.compare) {\r\n                return -b.compare(a);\r\n            }\r\n            else if (a.type !== b.type) {\r\n                return undefined;\r\n            }\r\n            a = a.value;\r\n            b = b.value;\r\n            if (!Array.isArray(a)) {\r\n                return a === b ? 0 : undefined;\r\n            }\r\n            if (a.length !== b.length) {\r\n                return undefined;\r\n            }\r\n            for (var i = 0; i < a.length; i++) {\r\n                if (Node.compare(a[i], b[i]) !== 0) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            return 0;\r\n        };\r\n        Node.numericCompare = function (a, b) {\r\n            return a < b ? -1\r\n                : a === b ? 0\r\n                    : a > b ? 1 : undefined;\r\n        };\r\n        // Returns true if this node represents root of ast imported by reference\r\n        Node.prototype.blocksVisibility = function () {\r\n            if (this.visibilityBlocks == null) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            return this.visibilityBlocks !== 0;\r\n        };\r\n        Node.prototype.addVisibilityBlock = function () {\r\n            if (this.visibilityBlocks == null) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            this.visibilityBlocks = this.visibilityBlocks + 1;\r\n        };\r\n        Node.prototype.removeVisibilityBlock = function () {\r\n            if (this.visibilityBlocks == null) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            this.visibilityBlocks = this.visibilityBlocks - 1;\r\n        };\r\n        // Turns on node visibility - if called node will be shown in output regardless\r\n        // of whether it comes from import by reference or not\r\n        Node.prototype.ensureVisibility = function () {\r\n            this.nodeVisible = true;\r\n        };\r\n        // Turns off node visibility - if called node will NOT be shown in output regardless\r\n        // of whether it comes from import by reference or not\r\n        Node.prototype.ensureInvisibility = function () {\r\n            this.nodeVisible = false;\r\n        };\r\n        // return values:\r\n        // false - the node must not be visible\r\n        // true - the node must be visible\r\n        // undefined or null - the node has the same visibility as its parent\r\n        Node.prototype.isVisible = function () {\r\n            return this.nodeVisible;\r\n        };\r\n        Node.prototype.visibilityInfo = function () {\r\n            return {\r\n                visibilityBlocks: this.visibilityBlocks,\r\n                nodeVisible: this.nodeVisible\r\n            };\r\n        };\r\n        Node.prototype.copyVisibilityInfo = function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            this.visibilityBlocks = info.visibilityBlocks;\r\n            this.nodeVisible = info.nodeVisible;\r\n        };\r\n        return Node;\r\n    }());\n\n    //\r\n    // RGB Colors - #ff0014, #eee\r\n    //\r\n    var Color = function (rgb, a, originalForm) {\r\n        var self = this;\r\n        //\r\n        // The end goal here, is to parse the arguments\r\n        // into an integer triplet, such as `128, 255, 0`\r\n        //\r\n        // This facilitates operations and conversions.\r\n        //\r\n        if (Array.isArray(rgb)) {\r\n            this.rgb = rgb;\r\n        }\r\n        else if (rgb.length >= 6) {\r\n            this.rgb = [];\r\n            rgb.match(/.{2}/g).map(function (c, i) {\r\n                if (i < 3) {\r\n                    self.rgb.push(parseInt(c, 16));\r\n                }\r\n                else {\r\n                    self.alpha = (parseInt(c, 16)) / 255;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.rgb = [];\r\n            rgb.split('').map(function (c, i) {\r\n                if (i < 3) {\r\n                    self.rgb.push(parseInt(c + c, 16));\r\n                }\r\n                else {\r\n                    self.alpha = (parseInt(c + c, 16)) / 255;\r\n                }\r\n            });\r\n        }\r\n        this.alpha = this.alpha || (typeof a === 'number' ? a : 1);\r\n        if (typeof originalForm !== 'undefined') {\r\n            this.value = originalForm;\r\n        }\r\n    };\r\n    Color.prototype = Object.assign(new Node(), {\r\n        type: 'Color',\r\n        luma: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255;\r\n            r = (r <= 0.03928) ? r / 12.92 : Math.pow(((r + 0.055) / 1.055), 2.4);\r\n            g = (g <= 0.03928) ? g / 12.92 : Math.pow(((g + 0.055) / 1.055), 2.4);\r\n            b = (b <= 0.03928) ? b / 12.92 : Math.pow(((b + 0.055) / 1.055), 2.4);\r\n            return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context));\r\n        },\r\n        toCSS: function (context, doNotCompress) {\r\n            var compress = context && context.compress && !doNotCompress;\r\n            var color;\r\n            var alpha;\r\n            var colorFunction;\r\n            var args = [];\r\n            // `value` is set if this color was originally\r\n            // converted from a named color string so we need\r\n            // to respect this and try to output named color too.\r\n            alpha = this.fround(context, this.alpha);\r\n            if (this.value) {\r\n                if (this.value.indexOf('rgb') === 0) {\r\n                    if (alpha < 1) {\r\n                        colorFunction = 'rgba';\r\n                    }\r\n                }\r\n                else if (this.value.indexOf('hsl') === 0) {\r\n                    if (alpha < 1) {\r\n                        colorFunction = 'hsla';\r\n                    }\r\n                    else {\r\n                        colorFunction = 'hsl';\r\n                    }\r\n                }\r\n                else {\r\n                    return this.value;\r\n                }\r\n            }\r\n            else {\r\n                if (alpha < 1) {\r\n                    colorFunction = 'rgba';\r\n                }\r\n            }\r\n            switch (colorFunction) {\r\n                case 'rgba':\r\n                    args = this.rgb.map(function (c) {\r\n                        return clamp$1(Math.round(c), 255);\r\n                    }).concat(clamp$1(alpha, 1));\r\n                    break;\r\n                case 'hsla':\r\n                    args.push(clamp$1(alpha, 1));\r\n                case 'hsl':\r\n                    color = this.toHSL();\r\n                    args = [\r\n                        this.fround(context, color.h),\r\n                        this.fround(context, color.s * 100) + \"%\",\r\n                        this.fround(context, color.l * 100) + \"%\"\r\n                    ].concat(args);\r\n            }\r\n            if (colorFunction) {\r\n                // Values are capped between `0` and `255`, rounded and zero-padded.\r\n                return colorFunction + \"(\" + args.join(\",\" + (compress ? '' : ' ')) + \")\";\r\n            }\r\n            color = this.toRGB();\r\n            if (compress) {\r\n                var splitcolor = color.split('');\r\n                // Convert color to short format\r\n                if (splitcolor[1] === splitcolor[2] && splitcolor[3] === splitcolor[4] && splitcolor[5] === splitcolor[6]) {\r\n                    color = \"#\" + splitcolor[1] + splitcolor[3] + splitcolor[5];\r\n                }\r\n            }\r\n            return color;\r\n        },\r\n        //\r\n        // Operations have to be done per-channel, if not,\r\n        // channels will spill onto each other. Once we have\r\n        // our result, in the form of an integer triplet,\r\n        // we create a new Color node to hold the result.\r\n        //\r\n        operate: function (context, op, other) {\r\n            var rgb = new Array(3);\r\n            var alpha = this.alpha * (1 - other.alpha) + other.alpha;\r\n            for (var c = 0; c < 3; c++) {\r\n                rgb[c] = this._operate(context, op, this.rgb[c], other.rgb[c]);\r\n            }\r\n            return new Color(rgb, alpha);\r\n        },\r\n        toRGB: function () {\r\n            return toHex(this.rgb);\r\n        },\r\n        toHSL: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\r\n            var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n            var h;\r\n            var s;\r\n            var l = (max + min) / 2;\r\n            var d = max - min;\r\n            if (max === min) {\r\n                h = s = 0;\r\n            }\r\n            else {\r\n                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n                switch (max) {\r\n                    case r:\r\n                        h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        h = (r - g) / d + 4;\r\n                        break;\r\n                }\r\n                h /= 6;\r\n            }\r\n            return { h: h * 360, s: s, l: l, a: a };\r\n        },\r\n        // Adapted from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\r\n        toHSV: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\r\n            var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n            var h;\r\n            var s;\r\n            var v = max;\r\n            var d = max - min;\r\n            if (max === 0) {\r\n                s = 0;\r\n            }\r\n            else {\r\n                s = d / max;\r\n            }\r\n            if (max === min) {\r\n                h = 0;\r\n            }\r\n            else {\r\n                switch (max) {\r\n                    case r:\r\n                        h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        h = (r - g) / d + 4;\r\n                        break;\r\n                }\r\n                h /= 6;\r\n            }\r\n            return { h: h * 360, s: s, v: v, a: a };\r\n        },\r\n        toARGB: function () {\r\n            return toHex([this.alpha * 255].concat(this.rgb));\r\n        },\r\n        compare: function (x) {\r\n            return (x.rgb &&\r\n                x.rgb[0] === this.rgb[0] &&\r\n                x.rgb[1] === this.rgb[1] &&\r\n                x.rgb[2] === this.rgb[2] &&\r\n                x.alpha === this.alpha) ? 0 : undefined;\r\n        }\r\n    });\r\n    Color.fromKeyword = function (keyword) {\r\n        var c;\r\n        var key = keyword.toLowerCase();\r\n        if (colors.hasOwnProperty(key)) {\r\n            c = new Color(colors[key].slice(1));\r\n        }\r\n        else if (key === 'transparent') {\r\n            c = new Color([0, 0, 0], 0);\r\n        }\r\n        if (c) {\r\n            c.value = keyword;\r\n            return c;\r\n        }\r\n    };\r\n    function clamp$1(v, max) {\r\n        return Math.min(Math.max(v, 0), max);\r\n    }\r\n    function toHex(v) {\r\n        return \"#\" + v.map(function (c) {\r\n            c = clamp$1(Math.round(c), 255);\r\n            return (c < 16 ? '0' : '') + c.toString(16);\r\n        }).join('');\r\n    }\n\n    var Paren = function (node) {\r\n        this.value = node;\r\n    };\r\n    Paren.prototype = Object.assign(new Node(), {\r\n        type: 'Paren',\r\n        genCSS: function (context, output) {\r\n            output.add('(');\r\n            this.value.genCSS(context, output);\r\n            output.add(')');\r\n        },\r\n        eval: function (context) {\r\n            return new Paren(this.value.eval(context));\r\n        }\r\n    });\n\n    var _noSpaceCombinators = {\r\n        '': true,\r\n        ' ': true,\r\n        '|': true\r\n    };\r\n    var Combinator = function (value) {\r\n        if (value === ' ') {\r\n            this.value = ' ';\r\n            this.emptyOrWhitespace = true;\r\n        }\r\n        else {\r\n            this.value = value ? value.trim() : '';\r\n            this.emptyOrWhitespace = this.value === '';\r\n        }\r\n    };\r\n    Combinator.prototype = Object.assign(new Node(), {\r\n        type: 'Combinator',\r\n        genCSS: function (context, output) {\r\n            var spaceOrEmpty = (context.compress || _noSpaceCombinators[this.value]) ? '' : ' ';\r\n            output.add(spaceOrEmpty + this.value + spaceOrEmpty);\r\n        }\r\n    });\n\n    var Element = function (combinator, value, isVariable, index, currentFileInfo, visibilityInfo) {\r\n        this.combinator = combinator instanceof Combinator ?\r\n            combinator : new Combinator(combinator);\r\n        if (typeof value === 'string') {\r\n            this.value = value.trim();\r\n        }\r\n        else if (value) {\r\n            this.value = value;\r\n        }\r\n        else {\r\n            this.value = '';\r\n        }\r\n        this.isVariable = isVariable;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.combinator, this);\r\n    };\r\n    Element.prototype = Object.assign(new Node(), {\r\n        type: 'Element',\r\n        accept: function (visitor) {\r\n            var value = this.value;\r\n            this.combinator = visitor.visit(this.combinator);\r\n            if (typeof value === 'object') {\r\n                this.value = visitor.visit(value);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            return new Element(this.combinator, this.value.eval ? this.value.eval(context) : this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        clone: function () {\r\n            return new Element(this.combinator, this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context), this.fileInfo(), this.getIndex());\r\n        },\r\n        toCSS: function (context) {\r\n            context = context || {};\r\n            var value = this.value;\r\n            var firstSelector = context.firstSelector;\r\n            if (value instanceof Paren) {\r\n                // selector in parens should not be affected by outer selector\r\n                // flags (breaks only interpolated selectors - see #1973)\r\n                context.firstSelector = true;\r\n            }\r\n            value = value.toCSS ? value.toCSS(context) : value;\r\n            context.firstSelector = firstSelector;\r\n            if (value === '' && this.combinator.value.charAt(0) === '&') {\r\n                return '';\r\n            }\r\n            else {\r\n                return this.combinator.toCSS(context) + value;\r\n            }\r\n        }\r\n    });\n\n    var Math$1 = {\r\n        ALWAYS: 0,\r\n        PARENS_DIVISION: 1,\r\n        PARENS: 2\r\n        // removed - STRICT_LEGACY: 3\r\n    };\r\n    var RewriteUrls = {\r\n        OFF: 0,\r\n        LOCAL: 1,\r\n        ALL: 2\r\n    };\n\n    /**\r\n     * Returns the object type of the given payload\r\n     *\r\n     * @param {*} payload\r\n     * @returns {string}\r\n     */\r\n    function getType(payload) {\r\n        return Object.prototype.toString.call(payload).slice(8, -1);\r\n    }\r\n    /**\r\n     * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n     *\r\n     * @param {*} payload\r\n     * @returns {payload is Record<string, any>}\r\n     */\r\n    function isPlainObject(payload) {\r\n        if (getType(payload) !== 'Object')\r\n            return false;\r\n        return payload.constructor === Object && Object.getPrototypeOf(payload) === Object.prototype;\r\n    }\r\n    /**\r\n     * Returns whether the payload is an array\r\n     *\r\n     * @param {any} payload\r\n     * @returns {payload is any[]}\r\n     */\r\n    function isArray(payload) {\r\n        return getType(payload) === 'Array';\r\n    }\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    }\n\n    function assignProp(carry, key, newVal, originalObject, includeNonenumerable) {\r\n        var propType = {}.propertyIsEnumerable.call(originalObject, key)\r\n            ? 'enumerable'\r\n            : 'nonenumerable';\r\n        if (propType === 'enumerable')\r\n            carry[key] = newVal;\r\n        if (includeNonenumerable && propType === 'nonenumerable') {\r\n            Object.defineProperty(carry, key, {\r\n                value: newVal,\r\n                enumerable: false,\r\n                writable: true,\r\n                configurable: true,\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Copy (clone) an object and all its props recursively to get rid of any prop referenced of the original object. Arrays are also cloned, however objects inside arrays are still linked.\r\n     *\r\n     * @export\r\n     * @template T\r\n     * @param {T} target Target can be anything\r\n     * @param {Options} [options={}] Options can be `props` or `nonenumerable`\r\n     * @returns {T} the target with replaced values\r\n     * @export\r\n     */\r\n    function copy(target, options) {\r\n        if (options === void 0) { options = {}; }\r\n        if (isArray(target))\r\n            return target.map(function (i) { return copy(i, options); });\r\n        if (!isPlainObject(target))\r\n            return target;\r\n        var props = Object.getOwnPropertyNames(target);\r\n        var symbols = Object.getOwnPropertySymbols(target);\r\n        return __spreadArrays(props, symbols).reduce(function (carry, key) {\r\n            if (isArray(options.props) && !options.props.includes(key)) {\r\n                return carry;\r\n            }\r\n            var val = target[key];\r\n            var newVal = copy(val, options);\r\n            assignProp(carry, key, newVal, target, options.nonenumerable);\r\n            return carry;\r\n        }, {});\r\n    }\n\n    /* jshint proto: true */\r\n    function getLocation(index, inputStream) {\r\n        var n = index + 1;\r\n        var line = null;\r\n        var column = -1;\r\n        while (--n >= 0 && inputStream.charAt(n) !== '\\n') {\r\n            column++;\r\n        }\r\n        if (typeof index === 'number') {\r\n            line = (inputStream.slice(0, index).match(/\\n/g) || '').length;\r\n        }\r\n        return {\r\n            line: line,\r\n            column: column\r\n        };\r\n    }\r\n    function copyArray(arr) {\r\n        var i;\r\n        var length = arr.length;\r\n        var copy = new Array(length);\r\n        for (i = 0; i < length; i++) {\r\n            copy[i] = arr[i];\r\n        }\r\n        return copy;\r\n    }\r\n    function clone(obj) {\r\n        var cloned = {};\r\n        for (var prop in obj) {\r\n            if (obj.hasOwnProperty(prop)) {\r\n                cloned[prop] = obj[prop];\r\n            }\r\n        }\r\n        return cloned;\r\n    }\r\n    function defaults(obj1, obj2) {\r\n        var newObj = obj2 || {};\r\n        if (!obj2._defaults) {\r\n            newObj = {};\r\n            var defaults_1 = copy(obj1);\r\n            newObj._defaults = defaults_1;\r\n            var cloned = obj2 ? copy(obj2) : {};\r\n            Object.assign(newObj, defaults_1, cloned);\r\n        }\r\n        return newObj;\r\n    }\r\n    function copyOptions(obj1, obj2) {\r\n        if (obj2 && obj2._defaults) {\r\n            return obj2;\r\n        }\r\n        var opts = defaults(obj1, obj2);\r\n        if (opts.strictMath) {\r\n            opts.math = Math$1.PARENS;\r\n        }\r\n        // Back compat with changed relativeUrls option\r\n        if (opts.relativeUrls) {\r\n            opts.rewriteUrls = RewriteUrls.ALL;\r\n        }\r\n        if (typeof opts.math === 'string') {\r\n            switch (opts.math.toLowerCase()) {\r\n                case 'always':\r\n                    opts.math = Math$1.ALWAYS;\r\n                    break;\r\n                case 'parens-division':\r\n                    opts.math = Math$1.PARENS_DIVISION;\r\n                    break;\r\n                case 'strict':\r\n                case 'parens':\r\n                    opts.math = Math$1.PARENS;\r\n                    break;\r\n                default:\r\n                    opts.math = Math$1.PARENS;\r\n            }\r\n        }\r\n        if (typeof opts.rewriteUrls === 'string') {\r\n            switch (opts.rewriteUrls.toLowerCase()) {\r\n                case 'off':\r\n                    opts.rewriteUrls = RewriteUrls.OFF;\r\n                    break;\r\n                case 'local':\r\n                    opts.rewriteUrls = RewriteUrls.LOCAL;\r\n                    break;\r\n                case 'all':\r\n                    opts.rewriteUrls = RewriteUrls.ALL;\r\n                    break;\r\n            }\r\n        }\r\n        return opts;\r\n    }\r\n    function merge(obj1, obj2) {\r\n        for (var prop in obj2) {\r\n            if (obj2.hasOwnProperty(prop)) {\r\n                obj1[prop] = obj2[prop];\r\n            }\r\n        }\r\n        return obj1;\r\n    }\r\n    function flattenArray(arr, result) {\r\n        if (result === void 0) { result = []; }\r\n        for (var i = 0, length_1 = arr.length; i < length_1; i++) {\r\n            var value = arr[i];\r\n            if (Array.isArray(value)) {\r\n                flattenArray(value, result);\r\n            }\r\n            else {\r\n                if (value !== undefined) {\r\n                    result.push(value);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\n\n    var utils = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getLocation: getLocation,\n        copyArray: copyArray,\n        clone: clone,\n        defaults: defaults,\n        copyOptions: copyOptions,\n        merge: merge,\n        flattenArray: flattenArray\n    });\n\n    var anonymousFunc = /(<anonymous>|Function):(\\d+):(\\d+)/;\r\n    /**\r\n     * This is a centralized class of any error that could be thrown internally (mostly by the parser).\r\n     * Besides standard .message it keeps some additional data like a path to the file where the error\r\n     * occurred along with line and column numbers.\r\n     *\r\n     * @class\r\n     * @extends Error\r\n     * @type {module.LessError}\r\n     *\r\n     * @prop {string} type\r\n     * @prop {string} filename\r\n     * @prop {number} index\r\n     * @prop {number} line\r\n     * @prop {number} column\r\n     * @prop {number} callLine\r\n     * @prop {number} callExtract\r\n     * @prop {string[]} extract\r\n     *\r\n     * @param {Object} e              - An error object to wrap around or just a descriptive object\r\n     * @param {Object} fileContentMap - An object with file contents in 'contents' property (like importManager) @todo - move to fileManager?\r\n     * @param {string} [currentFilename]\r\n     */\r\n    var LessError = function (e, fileContentMap, currentFilename) {\r\n        Error.call(this);\r\n        var filename = e.filename || currentFilename;\r\n        this.message = e.message;\r\n        this.stack = e.stack;\r\n        if (fileContentMap && filename) {\r\n            var input = fileContentMap.contents[filename];\r\n            var loc = getLocation(e.index, input);\r\n            var line = loc.line;\r\n            var col = loc.column;\r\n            var callLine = e.call && getLocation(e.call, input).line;\r\n            var lines = input ? input.split('\\n') : '';\r\n            this.type = e.type || 'Syntax';\r\n            this.filename = filename;\r\n            this.index = e.index;\r\n            this.line = typeof line === 'number' ? line + 1 : null;\r\n            this.column = col;\r\n            if (!this.line && this.stack) {\r\n                var found = this.stack.match(anonymousFunc);\r\n                /**\r\n                 * We have to figure out how this environment stringifies anonymous functions\r\n                 * so we can correctly map plugin errors.\r\n                 *\r\n                 * Note, in Node 8, the output of anonymous funcs varied based on parameters\r\n                 * being present or not, so we inject dummy params.\r\n                 */\r\n                var func = new Function('a', 'throw new Error()');\r\n                var lineAdjust = 0;\r\n                try {\r\n                    func();\r\n                }\r\n                catch (e) {\r\n                    var match = e.stack.match(anonymousFunc);\r\n                    var line = parseInt(match[2]);\r\n                    lineAdjust = 1 - line;\r\n                }\r\n                if (found) {\r\n                    if (found[2]) {\r\n                        this.line = parseInt(found[2]) + lineAdjust;\r\n                    }\r\n                    if (found[3]) {\r\n                        this.column = parseInt(found[3]);\r\n                    }\r\n                }\r\n            }\r\n            this.callLine = callLine + 1;\r\n            this.callExtract = lines[callLine];\r\n            this.extract = [\r\n                lines[this.line - 2],\r\n                lines[this.line - 1],\r\n                lines[this.line]\r\n            ];\r\n        }\r\n    };\r\n    if (typeof Object.create === 'undefined') {\r\n        var F = function () { };\r\n        F.prototype = Error.prototype;\r\n        LessError.prototype = new F();\r\n    }\r\n    else {\r\n        LessError.prototype = Object.create(Error.prototype);\r\n    }\r\n    LessError.prototype.constructor = LessError;\r\n    /**\r\n     * An overridden version of the default Object.prototype.toString\r\n     * which uses additional information to create a helpful message.\r\n     *\r\n     * @param {Object} options\r\n     * @returns {string}\r\n     */\r\n    LessError.prototype.toString = function (options) {\r\n        options = options || {};\r\n        var message = '';\r\n        var extract = this.extract || [];\r\n        var error = [];\r\n        var stylize = function (str) { return str; };\r\n        if (options.stylize) {\r\n            var type = typeof options.stylize;\r\n            if (type !== 'function') {\r\n                throw Error(\"options.stylize should be a function, got a \" + type + \"!\");\r\n            }\r\n            stylize = options.stylize;\r\n        }\r\n        if (this.line !== null) {\r\n            if (typeof extract[0] === 'string') {\r\n                error.push(stylize(this.line - 1 + \" \" + extract[0], 'grey'));\r\n            }\r\n            if (typeof extract[1] === 'string') {\r\n                var errorTxt = this.line + \" \";\r\n                if (extract[1]) {\r\n                    errorTxt += extract[1].slice(0, this.column) +\r\n                        stylize(stylize(stylize(extract[1].substr(this.column, 1), 'bold') +\r\n                            extract[1].slice(this.column + 1), 'red'), 'inverse');\r\n                }\r\n                error.push(errorTxt);\r\n            }\r\n            if (typeof extract[2] === 'string') {\r\n                error.push(stylize(this.line + 1 + \" \" + extract[2], 'grey'));\r\n            }\r\n            error = error.join('\\n') + stylize('', 'reset') + \"\\n\";\r\n        }\r\n        message += stylize(this.type + \"Error: \" + this.message, 'red');\r\n        if (this.filename) {\r\n            message += stylize(' in ', 'red') + this.filename;\r\n        }\r\n        if (this.line) {\r\n            message += stylize(\" on line \" + this.line + \", column \" + (this.column + 1) + \":\", 'grey');\r\n        }\r\n        message += \"\\n\" + error;\r\n        if (this.callLine) {\r\n            message += stylize('from ', 'red') + (this.filename || '') + \"/n\";\r\n            message += stylize(this.callLine, 'grey') + \" \" + this.callExtract + \"/n\";\r\n        }\r\n        return message;\r\n    };\n\n    var Selector = function (elements, extendList, condition, index, currentFileInfo, visibilityInfo) {\r\n        this.extendList = extendList;\r\n        this.condition = condition;\r\n        this.evaldCondition = !condition;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.elements = this.getElements(elements);\r\n        this.mixinElements_ = undefined;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.elements, this);\r\n    };\r\n    Selector.prototype = Object.assign(new Node(), {\r\n        type: 'Selector',\r\n        accept: function (visitor) {\r\n            if (this.elements) {\r\n                this.elements = visitor.visitArray(this.elements);\r\n            }\r\n            if (this.extendList) {\r\n                this.extendList = visitor.visitArray(this.extendList);\r\n            }\r\n            if (this.condition) {\r\n                this.condition = visitor.visit(this.condition);\r\n            }\r\n        },\r\n        createDerived: function (elements, extendList, evaldCondition) {\r\n            elements = this.getElements(elements);\r\n            var newSelector = new Selector(elements, extendList || this.extendList, null, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n            newSelector.evaldCondition = (evaldCondition != null) ? evaldCondition : this.evaldCondition;\r\n            newSelector.mediaEmpty = this.mediaEmpty;\r\n            return newSelector;\r\n        },\r\n        getElements: function (els) {\r\n            if (!els) {\r\n                return [new Element('', '&', false, this._index, this._fileInfo)];\r\n            }\r\n            if (typeof els === 'string') {\r\n                this.parse.parseNode(els, ['selector'], this._index, this._fileInfo, function (err, result) {\r\n                    if (err) {\r\n                        throw new LessError({\r\n                            index: err.index,\r\n                            message: err.message\r\n                        }, this.parse.imports, this._fileInfo.filename);\r\n                    }\r\n                    els = result[0].elements;\r\n                });\r\n            }\r\n            return els;\r\n        },\r\n        createEmptySelectors: function () {\r\n            var el = new Element('', '&', false, this._index, this._fileInfo), sels = [new Selector([el], null, null, this._index, this._fileInfo)];\r\n            sels[0].mediaEmpty = true;\r\n            return sels;\r\n        },\r\n        match: function (other) {\r\n            var elements = this.elements;\r\n            var len = elements.length;\r\n            var olen;\r\n            var i;\r\n            other = other.mixinElements();\r\n            olen = other.length;\r\n            if (olen === 0 || len < olen) {\r\n                return 0;\r\n            }\r\n            else {\r\n                for (i = 0; i < olen; i++) {\r\n                    if (elements[i].value !== other[i]) {\r\n                        return 0;\r\n                    }\r\n                }\r\n            }\r\n            return olen; // return number of matched elements\r\n        },\r\n        mixinElements: function () {\r\n            if (this.mixinElements_) {\r\n                return this.mixinElements_;\r\n            }\r\n            var elements = this.elements.map(function (v) {\r\n                return v.combinator.value + (v.value.value || v.value);\r\n            }).join('').match(/[,&#\\*\\.\\w-]([\\w-]|(\\\\.))*/g);\r\n            if (elements) {\r\n                if (elements[0] === '&') {\r\n                    elements.shift();\r\n                }\r\n            }\r\n            else {\r\n                elements = [];\r\n            }\r\n            return (this.mixinElements_ = elements);\r\n        },\r\n        isJustParentSelector: function () {\r\n            return !this.mediaEmpty &&\r\n                this.elements.length === 1 &&\r\n                this.elements[0].value === '&' &&\r\n                (this.elements[0].combinator.value === ' ' || this.elements[0].combinator.value === '');\r\n        },\r\n        eval: function (context) {\r\n            var evaldCondition = this.condition && this.condition.eval(context);\r\n            var elements = this.elements;\r\n            var extendList = this.extendList;\r\n            elements = elements && elements.map(function (e) { return e.eval(context); });\r\n            extendList = extendList && extendList.map(function (extend) { return extend.eval(context); });\r\n            return this.createDerived(elements, extendList, evaldCondition);\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i, element;\r\n            if ((!context || !context.firstSelector) && this.elements[0].combinator.value === '') {\r\n                output.add(' ', this.fileInfo(), this.getIndex());\r\n            }\r\n            for (i = 0; i < this.elements.length; i++) {\r\n                element = this.elements[i];\r\n                element.genCSS(context, output);\r\n            }\r\n        },\r\n        getIsOutput: function () {\r\n            return this.evaldCondition;\r\n        }\r\n    });\n\n    var Value = function (value) {\r\n        if (!value) {\r\n            throw new Error('Value requires an array argument');\r\n        }\r\n        if (!Array.isArray(value)) {\r\n            this.value = [value];\r\n        }\r\n        else {\r\n            this.value = value;\r\n        }\r\n    };\r\n    Value.prototype = Object.assign(new Node(), {\r\n        type: 'Value',\r\n        accept: function (visitor) {\r\n            if (this.value) {\r\n                this.value = visitor.visitArray(this.value);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            if (this.value.length === 1) {\r\n                return this.value[0].eval(context);\r\n            }\r\n            else {\r\n                return new Value(this.value.map(function (v) {\r\n                    return v.eval(context);\r\n                }));\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i;\r\n            for (i = 0; i < this.value.length; i++) {\r\n                this.value[i].genCSS(context, output);\r\n                if (i + 1 < this.value.length) {\r\n                    output.add((context && context.compress) ? ',' : ', ');\r\n                }\r\n            }\r\n        }\r\n    });\n\n    var Keyword = function (value) {\r\n        this.value = value;\r\n    };\r\n    Keyword.prototype = Object.assign(new Node(), {\r\n        type: 'Keyword',\r\n        genCSS: function (context, output) {\r\n            if (this.value === '%') {\r\n                throw { type: 'Syntax', message: 'Invalid % without number' };\r\n            }\r\n            output.add(this.value);\r\n        }\r\n    });\r\n    Keyword.True = new Keyword('true');\r\n    Keyword.False = new Keyword('false');\n\n    var Anonymous = function (value, index, currentFileInfo, mapLines, rulesetLike, visibilityInfo) {\r\n        this.value = value;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.mapLines = mapLines;\r\n        this.rulesetLike = (typeof rulesetLike === 'undefined') ? false : rulesetLike;\r\n        this.allowRoot = true;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n    };\r\n    Anonymous.prototype = Object.assign(new Node(), {\r\n        type: 'Anonymous',\r\n        eval: function () {\r\n            return new Anonymous(this.value, this._index, this._fileInfo, this.mapLines, this.rulesetLike, this.visibilityInfo());\r\n        },\r\n        compare: function (other) {\r\n            return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\r\n        },\r\n        isRulesetLike: function () {\r\n            return this.rulesetLike;\r\n        },\r\n        genCSS: function (context, output) {\r\n            this.nodeVisible = Boolean(this.value);\r\n            if (this.nodeVisible) {\r\n                output.add(this.value, this._fileInfo, this._index, this.mapLines);\r\n            }\r\n        }\r\n    });\n\n    var MATH$1 = Math$1;\r\n    function evalName(context, name) {\r\n        var value = '';\r\n        var i;\r\n        var n = name.length;\r\n        var output = { add: function (s) { value += s; } };\r\n        for (i = 0; i < n; i++) {\r\n            name[i].eval(context).genCSS(context, output);\r\n        }\r\n        return value;\r\n    }\r\n    var Declaration = function (name, value, important, merge, index, currentFileInfo, inline, variable) {\r\n        this.name = name;\r\n        this.value = (value instanceof Node) ? value : new Value([value ? new Anonymous(value) : null]);\r\n        this.important = important ? \" \" + important.trim() : '';\r\n        this.merge = merge;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.inline = inline || false;\r\n        this.variable = (variable !== undefined) ? variable\r\n            : (name.charAt && (name.charAt(0) === '@'));\r\n        this.allowRoot = true;\r\n        this.setParent(this.value, this);\r\n    };\r\n    Declaration.prototype = Object.assign(new Node(), {\r\n        type: 'Declaration',\r\n        genCSS: function (context, output) {\r\n            output.add(this.name + (context.compress ? ':' : ': '), this.fileInfo(), this.getIndex());\r\n            try {\r\n                this.value.genCSS(context, output);\r\n            }\r\n            catch (e) {\r\n                e.index = this._index;\r\n                e.filename = this._fileInfo.filename;\r\n                throw e;\r\n            }\r\n            output.add(this.important + ((this.inline || (context.lastRule && context.compress)) ? '' : ';'), this._fileInfo, this._index);\r\n        },\r\n        eval: function (context) {\r\n            var mathBypass = false, prevMath, name = this.name, evaldValue, variable = this.variable;\r\n            if (typeof name !== 'string') {\r\n                // expand 'primitive' name directly to get\r\n                // things faster (~10% for benchmark.less):\r\n                name = (name.length === 1) && (name[0] instanceof Keyword) ?\r\n                    name[0].value : evalName(context, name);\r\n                variable = false; // never treat expanded interpolation as new variable name\r\n            }\r\n            // @todo remove when parens-division is default\r\n            if (name === 'font' && context.math === MATH$1.ALWAYS) {\r\n                mathBypass = true;\r\n                prevMath = context.math;\r\n                context.math = MATH$1.PARENS_DIVISION;\r\n            }\r\n            try {\r\n                context.importantScope.push({});\r\n                evaldValue = this.value.eval(context);\r\n                if (!this.variable && evaldValue.type === 'DetachedRuleset') {\r\n                    throw { message: 'Rulesets cannot be evaluated on a property.',\r\n                        index: this.getIndex(), filename: this.fileInfo().filename };\r\n                }\r\n                var important = this.important;\r\n                var importantResult = context.importantScope.pop();\r\n                if (!important && importantResult.important) {\r\n                    important = importantResult.important;\r\n                }\r\n                return new Declaration(name, evaldValue, important, this.merge, this.getIndex(), this.fileInfo(), this.inline, variable);\r\n            }\r\n            catch (e) {\r\n                if (typeof e.index !== 'number') {\r\n                    e.index = this.getIndex();\r\n                    e.filename = this.fileInfo().filename;\r\n                }\r\n                throw e;\r\n            }\r\n            finally {\r\n                if (mathBypass) {\r\n                    context.math = prevMath;\r\n                }\r\n            }\r\n        },\r\n        makeImportant: function () {\r\n            return new Declaration(this.name, this.value, '!important', this.merge, this.getIndex(), this.fileInfo(), this.inline);\r\n        }\r\n    });\n\n    function asComment(ctx) {\r\n        return \"/* line \" + ctx.debugInfo.lineNumber + \", \" + ctx.debugInfo.fileName + \" */\\n\";\r\n    }\r\n    function asMediaQuery(ctx) {\r\n        var filenameWithProtocol = ctx.debugInfo.fileName;\r\n        if (!/^[a-z]+:\\/\\//i.test(filenameWithProtocol)) {\r\n            filenameWithProtocol = \"file://\" + filenameWithProtocol;\r\n        }\r\n        return \"@media -sass-debug-info{filename{font-family:\" + filenameWithProtocol.replace(/([.:\\/\\\\])/g, function (a) {\r\n            if (a == '\\\\') {\r\n                a = '\\/';\r\n            }\r\n            return \"\\\\\" + a;\r\n        }) + \"}line{font-family:\\\\00003\" + ctx.debugInfo.lineNumber + \"}}\\n\";\r\n    }\r\n    function debugInfo(context, ctx, lineSeparator) {\r\n        var result = '';\r\n        if (context.dumpLineNumbers && !context.compress) {\r\n            switch (context.dumpLineNumbers) {\r\n                case 'comments':\r\n                    result = asComment(ctx);\r\n                    break;\r\n                case 'mediaquery':\r\n                    result = asMediaQuery(ctx);\r\n                    break;\r\n                case 'all':\r\n                    result = asComment(ctx) + (lineSeparator || '') + asMediaQuery(ctx);\r\n                    break;\r\n            }\r\n        }\r\n        return result;\r\n    }\n\n    var Comment = function (value, isLineComment, index, currentFileInfo) {\r\n        this.value = value;\r\n        this.isLineComment = isLineComment;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.allowRoot = true;\r\n    };\r\n    Comment.prototype = Object.assign(new Node(), {\r\n        type: 'Comment',\r\n        genCSS: function (context, output) {\r\n            if (this.debugInfo) {\r\n                output.add(debugInfo(context, this), this.fileInfo(), this.getIndex());\r\n            }\r\n            output.add(this.value);\r\n        },\r\n        isSilent: function (context) {\r\n            var isCompressed = context.compress && this.value[2] !== '!';\r\n            return this.isLineComment || isCompressed;\r\n        }\r\n    });\n\n    var contexts = {};\r\n    var copyFromOriginal = function copyFromOriginal(original, destination, propertiesToCopy) {\r\n        if (!original) {\r\n            return;\r\n        }\r\n        for (var i = 0; i < propertiesToCopy.length; i++) {\r\n            if (original.hasOwnProperty(propertiesToCopy[i])) {\r\n                destination[propertiesToCopy[i]] = original[propertiesToCopy[i]];\r\n            }\r\n        }\r\n    };\r\n    /*\r\n     parse is used whilst parsing\r\n     */\r\n    var parseCopyProperties = [\r\n        // options\r\n        'paths',\r\n        'rewriteUrls',\r\n        'rootpath',\r\n        'strictImports',\r\n        'insecure',\r\n        'dumpLineNumbers',\r\n        'compress',\r\n        'syncImport',\r\n        'chunkInput',\r\n        'mime',\r\n        'useFileCache',\r\n        // context\r\n        'processImports',\r\n        // Used by the import manager to stop multiple import visitors being created.\r\n        'pluginManager' // Used as the plugin manager for the session\r\n    ];\r\n    contexts.Parse = function (options) {\r\n        copyFromOriginal(options, this, parseCopyProperties);\r\n        if (typeof this.paths === 'string') {\r\n            this.paths = [this.paths];\r\n        }\r\n    };\r\n    var evalCopyProperties = [\r\n        'paths',\r\n        'compress',\r\n        'math',\r\n        'strictUnits',\r\n        'sourceMap',\r\n        'importMultiple',\r\n        'urlArgs',\r\n        'javascriptEnabled',\r\n        'pluginManager',\r\n        'importantScope',\r\n        'rewriteUrls' // option - whether to adjust URL's to be relative\r\n    ];\r\n    contexts.Eval = function (options, frames) {\r\n        copyFromOriginal(options, this, evalCopyProperties);\r\n        if (typeof this.paths === 'string') {\r\n            this.paths = [this.paths];\r\n        }\r\n        this.frames = frames || [];\r\n        this.importantScope = this.importantScope || [];\r\n    };\r\n    contexts.Eval.prototype.enterCalc = function () {\r\n        if (!this.calcStack) {\r\n            this.calcStack = [];\r\n        }\r\n        this.calcStack.push(true);\r\n        this.inCalc = true;\r\n    };\r\n    contexts.Eval.prototype.exitCalc = function () {\r\n        this.calcStack.pop();\r\n        if (!this.calcStack.length) {\r\n            this.inCalc = false;\r\n        }\r\n    };\r\n    contexts.Eval.prototype.inParenthesis = function () {\r\n        if (!this.parensStack) {\r\n            this.parensStack = [];\r\n        }\r\n        this.parensStack.push(true);\r\n    };\r\n    contexts.Eval.prototype.outOfParenthesis = function () {\r\n        this.parensStack.pop();\r\n    };\r\n    contexts.Eval.prototype.inCalc = false;\r\n    contexts.Eval.prototype.mathOn = true;\r\n    contexts.Eval.prototype.isMathOn = function (op) {\r\n        if (!this.mathOn) {\r\n            return false;\r\n        }\r\n        if (op === '/' && this.math !== Math$1.ALWAYS && (!this.parensStack || !this.parensStack.length)) {\r\n            return false;\r\n        }\r\n        if (this.math > Math$1.PARENS_DIVISION) {\r\n            return this.parensStack && this.parensStack.length;\r\n        }\r\n        return true;\r\n    };\r\n    contexts.Eval.prototype.pathRequiresRewrite = function (path) {\r\n        var isRelative = this.rewriteUrls === RewriteUrls.LOCAL ? isPathLocalRelative : isPathRelative;\r\n        return isRelative(path);\r\n    };\r\n    contexts.Eval.prototype.rewritePath = function (path, rootpath) {\r\n        var newPath;\r\n        rootpath = rootpath || '';\r\n        newPath = this.normalizePath(rootpath + path);\r\n        // If a path was explicit relative and the rootpath was not an absolute path\r\n        // we must ensure that the new path is also explicit relative.\r\n        if (isPathLocalRelative(path) &&\r\n            isPathRelative(rootpath) &&\r\n            isPathLocalRelative(newPath) === false) {\r\n            newPath = \"./\" + newPath;\r\n        }\r\n        return newPath;\r\n    };\r\n    contexts.Eval.prototype.normalizePath = function (path) {\r\n        var segments = path.split('/').reverse();\r\n        var segment;\r\n        path = [];\r\n        while (segments.length !== 0) {\r\n            segment = segments.pop();\r\n            switch (segment) {\r\n                case '.':\r\n                    break;\r\n                case '..':\r\n                    if ((path.length === 0) || (path[path.length - 1] === '..')) {\r\n                        path.push(segment);\r\n                    }\r\n                    else {\r\n                        path.pop();\r\n                    }\r\n                    break;\r\n                default:\r\n                    path.push(segment);\r\n                    break;\r\n            }\r\n        }\r\n        return path.join('/');\r\n    };\r\n    function isPathRelative(path) {\r\n        return !/^(?:[a-z-]+:|\\/|#)/i.test(path);\r\n    }\r\n    function isPathLocalRelative(path) {\r\n        return path.charAt(0) === '.';\r\n    }\r\n    // todo - do the same for the toCSS ?\n\n    function makeRegistry(base) {\r\n        return {\r\n            _data: {},\r\n            add: function (name, func) {\r\n                // precautionary case conversion, as later querying of\r\n                // the registry by function-caller uses lower case as well.\r\n                name = name.toLowerCase();\r\n                if (this._data.hasOwnProperty(name)) ;\r\n                this._data[name] = func;\r\n            },\r\n            addMultiple: function (functions) {\r\n                var _this = this;\r\n                Object.keys(functions).forEach(function (name) {\r\n                    _this.add(name, functions[name]);\r\n                });\r\n            },\r\n            get: function (name) {\r\n                return this._data[name] || (base && base.get(name));\r\n            },\r\n            getLocalFunctions: function () {\r\n                return this._data;\r\n            },\r\n            inherit: function () {\r\n                return makeRegistry(this);\r\n            },\r\n            create: function (base) {\r\n                return makeRegistry(base);\r\n            }\r\n        };\r\n    }\r\n    var functionRegistry = makeRegistry(null);\n\n    var defaultFunc = {\r\n        eval: function () {\r\n            var v = this.value_;\r\n            var e = this.error_;\r\n            if (e) {\r\n                throw e;\r\n            }\r\n            if (v != null) {\r\n                return v ? Keyword.True : Keyword.False;\r\n            }\r\n        },\r\n        value: function (v) {\r\n            this.value_ = v;\r\n        },\r\n        error: function (e) {\r\n            this.error_ = e;\r\n        },\r\n        reset: function () {\r\n            this.value_ = this.error_ = null;\r\n        }\r\n    };\n\n    var Ruleset = function (selectors, rules, strictImports, visibilityInfo) {\r\n        this.selectors = selectors;\r\n        this.rules = rules;\r\n        this._lookups = {};\r\n        this._variables = null;\r\n        this._properties = null;\r\n        this.strictImports = strictImports;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        this.setParent(this.selectors, this);\r\n        this.setParent(this.rules, this);\r\n    };\r\n    Ruleset.prototype = Object.assign(new Node(), {\r\n        type: 'Ruleset',\r\n        isRuleset: true,\r\n        isRulesetLike: function () { return true; },\r\n        accept: function (visitor) {\r\n            if (this.paths) {\r\n                this.paths = visitor.visitArray(this.paths, true);\r\n            }\r\n            else if (this.selectors) {\r\n                this.selectors = visitor.visitArray(this.selectors);\r\n            }\r\n            if (this.rules && this.rules.length) {\r\n                this.rules = visitor.visitArray(this.rules);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var selectors;\r\n            var selCnt;\r\n            var selector;\r\n            var i;\r\n            var hasVariable;\r\n            var hasOnePassingSelector = false;\r\n            if (this.selectors && (selCnt = this.selectors.length)) {\r\n                selectors = new Array(selCnt);\r\n                defaultFunc.error({\r\n                    type: 'Syntax',\r\n                    message: 'it is currently only allowed in parametric mixin guards,'\r\n                });\r\n                for (i = 0; i < selCnt; i++) {\r\n                    selector = this.selectors[i].eval(context);\r\n                    for (var j = 0; j < selector.elements.length; j++) {\r\n                        if (selector.elements[j].isVariable) {\r\n                            hasVariable = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    selectors[i] = selector;\r\n                    if (selector.evaldCondition) {\r\n                        hasOnePassingSelector = true;\r\n                    }\r\n                }\r\n                if (hasVariable) {\r\n                    var toParseSelectors = new Array(selCnt);\r\n                    for (i = 0; i < selCnt; i++) {\r\n                        selector = selectors[i];\r\n                        toParseSelectors[i] = selector.toCSS(context);\r\n                    }\r\n                    this.parse.parseNode(toParseSelectors.join(','), [\"selectors\"], selectors[0].getIndex(), selectors[0].fileInfo(), function (err, result) {\r\n                        if (result) {\r\n                            selectors = flattenArray(result);\r\n                        }\r\n                    });\r\n                }\r\n                defaultFunc.reset();\r\n            }\r\n            else {\r\n                hasOnePassingSelector = true;\r\n            }\r\n            var rules = this.rules ? copyArray(this.rules) : null;\r\n            var ruleset = new Ruleset(selectors, rules, this.strictImports, this.visibilityInfo());\r\n            var rule;\r\n            var subRule;\r\n            ruleset.originalRuleset = this;\r\n            ruleset.root = this.root;\r\n            ruleset.firstRoot = this.firstRoot;\r\n            ruleset.allowImports = this.allowImports;\r\n            if (this.debugInfo) {\r\n                ruleset.debugInfo = this.debugInfo;\r\n            }\r\n            if (!hasOnePassingSelector) {\r\n                rules.length = 0;\r\n            }\r\n            // inherit a function registry from the frames stack when possible;\r\n            // otherwise from the global registry\r\n            ruleset.functionRegistry = (function (frames) {\r\n                var i = 0;\r\n                var n = frames.length;\r\n                var found;\r\n                for (; i !== n; ++i) {\r\n                    found = frames[i].functionRegistry;\r\n                    if (found) {\r\n                        return found;\r\n                    }\r\n                }\r\n                return functionRegistry;\r\n            }(context.frames)).inherit();\r\n            // push the current ruleset to the frames stack\r\n            var ctxFrames = context.frames;\r\n            ctxFrames.unshift(ruleset);\r\n            // currrent selectors\r\n            var ctxSelectors = context.selectors;\r\n            if (!ctxSelectors) {\r\n                context.selectors = ctxSelectors = [];\r\n            }\r\n            ctxSelectors.unshift(this.selectors);\r\n            // Evaluate imports\r\n            if (ruleset.root || ruleset.allowImports || !ruleset.strictImports) {\r\n                ruleset.evalImports(context);\r\n            }\r\n            // Store the frames around mixin definitions,\r\n            // so they can be evaluated like closures when the time comes.\r\n            var rsRules = ruleset.rules;\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (rule.evalFirst) {\r\n                    rsRules[i] = rule.eval(context);\r\n                }\r\n            }\r\n            var mediaBlockCount = (context.mediaBlocks && context.mediaBlocks.length) || 0;\r\n            // Evaluate mixin calls.\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (rule.type === 'MixinCall') {\r\n                    /* jshint loopfunc:true */\r\n                    rules = rule.eval(context).filter(function (r) {\r\n                        if ((r instanceof Declaration) && r.variable) {\r\n                            // do not pollute the scope if the variable is\r\n                            // already there. consider returning false here\r\n                            // but we need a way to \"return\" variable from mixins\r\n                            return !(ruleset.variable(r.name));\r\n                        }\r\n                        return true;\r\n                    });\r\n                    rsRules.splice.apply(rsRules, [i, 1].concat(rules));\r\n                    i += rules.length - 1;\r\n                    ruleset.resetCache();\r\n                }\r\n                else if (rule.type === 'VariableCall') {\r\n                    /* jshint loopfunc:true */\r\n                    rules = rule.eval(context).rules.filter(function (r) {\r\n                        if ((r instanceof Declaration) && r.variable) {\r\n                            // do not pollute the scope at all\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                    rsRules.splice.apply(rsRules, [i, 1].concat(rules));\r\n                    i += rules.length - 1;\r\n                    ruleset.resetCache();\r\n                }\r\n            }\r\n            // Evaluate everything else\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (!rule.evalFirst) {\r\n                    rsRules[i] = rule = rule.eval ? rule.eval(context) : rule;\r\n                }\r\n            }\r\n            // Evaluate everything else\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                // for rulesets, check if it is a css guard and can be removed\r\n                if (rule instanceof Ruleset && rule.selectors && rule.selectors.length === 1) {\r\n                    // check if it can be folded in (e.g. & where)\r\n                    if (rule.selectors[0] && rule.selectors[0].isJustParentSelector()) {\r\n                        rsRules.splice(i--, 1);\r\n                        for (var j = 0; (subRule = rule.rules[j]); j++) {\r\n                            if (subRule instanceof Node) {\r\n                                subRule.copyVisibilityInfo(rule.visibilityInfo());\r\n                                if (!(subRule instanceof Declaration) || !subRule.variable) {\r\n                                    rsRules.splice(++i, 0, subRule);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Pop the stack\r\n            ctxFrames.shift();\r\n            ctxSelectors.shift();\r\n            if (context.mediaBlocks) {\r\n                for (i = mediaBlockCount; i < context.mediaBlocks.length; i++) {\r\n                    context.mediaBlocks[i].bubbleSelectors(selectors);\r\n                }\r\n            }\r\n            return ruleset;\r\n        },\r\n        evalImports: function (context) {\r\n            var rules = this.rules;\r\n            var i;\r\n            var importRules;\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            for (i = 0; i < rules.length; i++) {\r\n                if (rules[i].type === 'Import') {\r\n                    importRules = rules[i].eval(context);\r\n                    if (importRules && (importRules.length || importRules.length === 0)) {\r\n                        rules.splice.apply(rules, [i, 1].concat(importRules));\r\n                        i += importRules.length - 1;\r\n                    }\r\n                    else {\r\n                        rules.splice(i, 1, importRules);\r\n                    }\r\n                    this.resetCache();\r\n                }\r\n            }\r\n        },\r\n        makeImportant: function () {\r\n            var result = new Ruleset(this.selectors, this.rules.map(function (r) {\r\n                if (r.makeImportant) {\r\n                    return r.makeImportant();\r\n                }\r\n                else {\r\n                    return r;\r\n                }\r\n            }), this.strictImports, this.visibilityInfo());\r\n            return result;\r\n        },\r\n        matchArgs: function (args) {\r\n            return !args || args.length === 0;\r\n        },\r\n        // lets you call a css selector with a guard\r\n        matchCondition: function (args, context) {\r\n            var lastSelector = this.selectors[this.selectors.length - 1];\r\n            if (!lastSelector.evaldCondition) {\r\n                return false;\r\n            }\r\n            if (lastSelector.condition &&\r\n                !lastSelector.condition.eval(new contexts.Eval(context, context.frames))) {\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        resetCache: function () {\r\n            this._rulesets = null;\r\n            this._variables = null;\r\n            this._properties = null;\r\n            this._lookups = {};\r\n        },\r\n        variables: function () {\r\n            if (!this._variables) {\r\n                this._variables = !this.rules ? {} : this.rules.reduce(function (hash, r) {\r\n                    if (r instanceof Declaration && r.variable === true) {\r\n                        hash[r.name] = r;\r\n                    }\r\n                    // when evaluating variables in an import statement, imports have not been eval'd\r\n                    // so we need to go inside import statements.\r\n                    // guard against root being a string (in the case of inlined less)\r\n                    if (r.type === 'Import' && r.root && r.root.variables) {\r\n                        var vars = r.root.variables();\r\n                        for (var name_1 in vars) {\r\n                            if (vars.hasOwnProperty(name_1)) {\r\n                                hash[name_1] = r.root.variable(name_1);\r\n                            }\r\n                        }\r\n                    }\r\n                    return hash;\r\n                }, {});\r\n            }\r\n            return this._variables;\r\n        },\r\n        properties: function () {\r\n            if (!this._properties) {\r\n                this._properties = !this.rules ? {} : this.rules.reduce(function (hash, r) {\r\n                    if (r instanceof Declaration && r.variable !== true) {\r\n                        var name_2 = (r.name.length === 1) && (r.name[0] instanceof Keyword) ?\r\n                            r.name[0].value : r.name;\r\n                        // Properties don't overwrite as they can merge\r\n                        if (!hash[\"$\" + name_2]) {\r\n                            hash[\"$\" + name_2] = [r];\r\n                        }\r\n                        else {\r\n                            hash[\"$\" + name_2].push(r);\r\n                        }\r\n                    }\r\n                    return hash;\r\n                }, {});\r\n            }\r\n            return this._properties;\r\n        },\r\n        variable: function (name) {\r\n            var decl = this.variables()[name];\r\n            if (decl) {\r\n                return this.parseValue(decl);\r\n            }\r\n        },\r\n        property: function (name) {\r\n            var decl = this.properties()[name];\r\n            if (decl) {\r\n                return this.parseValue(decl);\r\n            }\r\n        },\r\n        lastDeclaration: function () {\r\n            for (var i = this.rules.length; i > 0; i--) {\r\n                var decl = this.rules[i - 1];\r\n                if (decl instanceof Declaration) {\r\n                    return this.parseValue(decl);\r\n                }\r\n            }\r\n        },\r\n        parseValue: function (toParse) {\r\n            var self = this;\r\n            function transformDeclaration(decl) {\r\n                if (decl.value instanceof Anonymous && !decl.parsed) {\r\n                    if (typeof decl.value.value === 'string') {\r\n                        this.parse.parseNode(decl.value.value, ['value', 'important'], decl.value.getIndex(), decl.fileInfo(), function (err, result) {\r\n                            if (err) {\r\n                                decl.parsed = true;\r\n                            }\r\n                            if (result) {\r\n                                decl.value = result[0];\r\n                                decl.important = result[1] || '';\r\n                                decl.parsed = true;\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        decl.parsed = true;\r\n                    }\r\n                    return decl;\r\n                }\r\n                else {\r\n                    return decl;\r\n                }\r\n            }\r\n            if (!Array.isArray(toParse)) {\r\n                return transformDeclaration.call(self, toParse);\r\n            }\r\n            else {\r\n                var nodes_1 = [];\r\n                toParse.forEach(function (n) {\r\n                    nodes_1.push(transformDeclaration.call(self, n));\r\n                });\r\n                return nodes_1;\r\n            }\r\n        },\r\n        rulesets: function () {\r\n            if (!this.rules) {\r\n                return [];\r\n            }\r\n            var filtRules = [];\r\n            var rules = this.rules;\r\n            var i;\r\n            var rule;\r\n            for (i = 0; (rule = rules[i]); i++) {\r\n                if (rule.isRuleset) {\r\n                    filtRules.push(rule);\r\n                }\r\n            }\r\n            return filtRules;\r\n        },\r\n        prependRule: function (rule) {\r\n            var rules = this.rules;\r\n            if (rules) {\r\n                rules.unshift(rule);\r\n            }\r\n            else {\r\n                this.rules = [rule];\r\n            }\r\n            this.setParent(rule, this);\r\n        },\r\n        find: function (selector, self, filter) {\r\n            self = self || this;\r\n            var rules = [];\r\n            var match;\r\n            var foundMixins;\r\n            var key = selector.toCSS();\r\n            if (key in this._lookups) {\r\n                return this._lookups[key];\r\n            }\r\n            this.rulesets().forEach(function (rule) {\r\n                if (rule !== self) {\r\n                    for (var j = 0; j < rule.selectors.length; j++) {\r\n                        match = selector.match(rule.selectors[j]);\r\n                        if (match) {\r\n                            if (selector.elements.length > match) {\r\n                                if (!filter || filter(rule)) {\r\n                                    foundMixins = rule.find(new Selector(selector.elements.slice(match)), self, filter);\r\n                                    for (var i = 0; i < foundMixins.length; ++i) {\r\n                                        foundMixins[i].path.push(rule);\r\n                                    }\r\n                                    Array.prototype.push.apply(rules, foundMixins);\r\n                                }\r\n                            }\r\n                            else {\r\n                                rules.push({ rule: rule, path: [] });\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this._lookups[key] = rules;\r\n            return rules;\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i;\r\n            var j;\r\n            var charsetRuleNodes = [];\r\n            var ruleNodes = [];\r\n            var // Line number debugging\r\n            debugInfo$1;\r\n            var rule;\r\n            var path;\r\n            context.tabLevel = (context.tabLevel || 0);\r\n            if (!this.root) {\r\n                context.tabLevel++;\r\n            }\r\n            var tabRuleStr = context.compress ? '' : Array(context.tabLevel + 1).join('  ');\r\n            var tabSetStr = context.compress ? '' : Array(context.tabLevel).join('  ');\r\n            var sep;\r\n            var charsetNodeIndex = 0;\r\n            var importNodeIndex = 0;\r\n            for (i = 0; (rule = this.rules[i]); i++) {\r\n                if (rule instanceof Comment) {\r\n                    if (importNodeIndex === i) {\r\n                        importNodeIndex++;\r\n                    }\r\n                    ruleNodes.push(rule);\r\n                }\r\n                else if (rule.isCharset && rule.isCharset()) {\r\n                    ruleNodes.splice(charsetNodeIndex, 0, rule);\r\n                    charsetNodeIndex++;\r\n                    importNodeIndex++;\r\n                }\r\n                else if (rule.type === 'Import') {\r\n                    ruleNodes.splice(importNodeIndex, 0, rule);\r\n                    importNodeIndex++;\r\n                }\r\n                else {\r\n                    ruleNodes.push(rule);\r\n                }\r\n            }\r\n            ruleNodes = charsetRuleNodes.concat(ruleNodes);\r\n            // If this is the root node, we don't render\r\n            // a selector, or {}.\r\n            if (!this.root) {\r\n                debugInfo$1 = debugInfo(context, this, tabSetStr);\r\n                if (debugInfo$1) {\r\n                    output.add(debugInfo$1);\r\n                    output.add(tabSetStr);\r\n                }\r\n                var paths = this.paths;\r\n                var pathCnt = paths.length;\r\n                var pathSubCnt = void 0;\r\n                sep = context.compress ? ',' : (\",\\n\" + tabSetStr);\r\n                for (i = 0; i < pathCnt; i++) {\r\n                    path = paths[i];\r\n                    if (!(pathSubCnt = path.length)) {\r\n                        continue;\r\n                    }\r\n                    if (i > 0) {\r\n                        output.add(sep);\r\n                    }\r\n                    context.firstSelector = true;\r\n                    path[0].genCSS(context, output);\r\n                    context.firstSelector = false;\r\n                    for (j = 1; j < pathSubCnt; j++) {\r\n                        path[j].genCSS(context, output);\r\n                    }\r\n                }\r\n                output.add((context.compress ? '{' : ' {\\n') + tabRuleStr);\r\n            }\r\n            // Compile rules and rulesets\r\n            for (i = 0; (rule = ruleNodes[i]); i++) {\r\n                if (i + 1 === ruleNodes.length) {\r\n                    context.lastRule = true;\r\n                }\r\n                var currentLastRule = context.lastRule;\r\n                if (rule.isRulesetLike(rule)) {\r\n                    context.lastRule = false;\r\n                }\r\n                if (rule.genCSS) {\r\n                    rule.genCSS(context, output);\r\n                }\r\n                else if (rule.value) {\r\n                    output.add(rule.value.toString());\r\n                }\r\n                context.lastRule = currentLastRule;\r\n                if (!context.lastRule && rule.isVisible()) {\r\n                    output.add(context.compress ? '' : (\"\\n\" + tabRuleStr));\r\n                }\r\n                else {\r\n                    context.lastRule = false;\r\n                }\r\n            }\r\n            if (!this.root) {\r\n                output.add((context.compress ? '}' : \"\\n\" + tabSetStr + \"}\"));\r\n                context.tabLevel--;\r\n            }\r\n            if (!output.isEmpty() && !context.compress && this.firstRoot) {\r\n                output.add('\\n');\r\n            }\r\n        },\r\n        joinSelectors: function (paths, context, selectors) {\r\n            for (var s = 0; s < selectors.length; s++) {\r\n                this.joinSelector(paths, context, selectors[s]);\r\n            }\r\n        },\r\n        joinSelector: function (paths, context, selector) {\r\n            function createParenthesis(elementsToPak, originalElement) {\r\n                var replacementParen, j;\r\n                if (elementsToPak.length === 0) {\r\n                    replacementParen = new Paren(elementsToPak[0]);\r\n                }\r\n                else {\r\n                    var insideParent = new Array(elementsToPak.length);\r\n                    for (j = 0; j < elementsToPak.length; j++) {\r\n                        insideParent[j] = new Element(null, elementsToPak[j], originalElement.isVariable, originalElement._index, originalElement._fileInfo);\r\n                    }\r\n                    replacementParen = new Paren(new Selector(insideParent));\r\n                }\r\n                return replacementParen;\r\n            }\r\n            function createSelector(containedElement, originalElement) {\r\n                var element, selector;\r\n                element = new Element(null, containedElement, originalElement.isVariable, originalElement._index, originalElement._fileInfo);\r\n                selector = new Selector([element]);\r\n                return selector;\r\n            }\r\n            // joins selector path from `beginningPath` with selector path in `addPath`\r\n            // `replacedElement` contains element that is being replaced by `addPath`\r\n            // returns concatenated path\r\n            function addReplacementIntoPath(beginningPath, addPath, replacedElement, originalSelector) {\r\n                var newSelectorPath, lastSelector, newJoinedSelector;\r\n                // our new selector path\r\n                newSelectorPath = [];\r\n                // construct the joined selector - if & is the first thing this will be empty,\r\n                // if not newJoinedSelector will be the last set of elements in the selector\r\n                if (beginningPath.length > 0) {\r\n                    newSelectorPath = copyArray(beginningPath);\r\n                    lastSelector = newSelectorPath.pop();\r\n                    newJoinedSelector = originalSelector.createDerived(copyArray(lastSelector.elements));\r\n                }\r\n                else {\r\n                    newJoinedSelector = originalSelector.createDerived([]);\r\n                }\r\n                if (addPath.length > 0) {\r\n                    // /deep/ is a CSS4 selector - (removed, so should deprecate)\r\n                    // that is valid without anything in front of it\r\n                    // so if the & does not have a combinator that is \"\" or \" \" then\r\n                    // and there is a combinator on the parent, then grab that.\r\n                    // this also allows + a { & .b { .a & { ... though not sure why you would want to do that\r\n                    var combinator = replacedElement.combinator;\r\n                    var parentEl = addPath[0].elements[0];\r\n                    if (combinator.emptyOrWhitespace && !parentEl.combinator.emptyOrWhitespace) {\r\n                        combinator = parentEl.combinator;\r\n                    }\r\n                    // join the elements so far with the first part of the parent\r\n                    newJoinedSelector.elements.push(new Element(combinator, parentEl.value, replacedElement.isVariable, replacedElement._index, replacedElement._fileInfo));\r\n                    newJoinedSelector.elements = newJoinedSelector.elements.concat(addPath[0].elements.slice(1));\r\n                }\r\n                // now add the joined selector - but only if it is not empty\r\n                if (newJoinedSelector.elements.length !== 0) {\r\n                    newSelectorPath.push(newJoinedSelector);\r\n                }\r\n                // put together the parent selectors after the join (e.g. the rest of the parent)\r\n                if (addPath.length > 1) {\r\n                    var restOfPath = addPath.slice(1);\r\n                    restOfPath = restOfPath.map(function (selector) {\r\n                        return selector.createDerived(selector.elements, []);\r\n                    });\r\n                    newSelectorPath = newSelectorPath.concat(restOfPath);\r\n                }\r\n                return newSelectorPath;\r\n            }\r\n            // joins selector path from `beginningPath` with every selector path in `addPaths` array\r\n            // `replacedElement` contains element that is being replaced by `addPath`\r\n            // returns array with all concatenated paths\r\n            function addAllReplacementsIntoPath(beginningPath, addPaths, replacedElement, originalSelector, result) {\r\n                var j;\r\n                for (j = 0; j < beginningPath.length; j++) {\r\n                    var newSelectorPath = addReplacementIntoPath(beginningPath[j], addPaths, replacedElement, originalSelector);\r\n                    result.push(newSelectorPath);\r\n                }\r\n                return result;\r\n            }\r\n            function mergeElementsOnToSelectors(elements, selectors) {\r\n                var i, sel;\r\n                if (elements.length === 0) {\r\n                    return;\r\n                }\r\n                if (selectors.length === 0) {\r\n                    selectors.push([new Selector(elements)]);\r\n                    return;\r\n                }\r\n                for (i = 0; (sel = selectors[i]); i++) {\r\n                    // if the previous thing in sel is a parent this needs to join on to it\r\n                    if (sel.length > 0) {\r\n                        sel[sel.length - 1] = sel[sel.length - 1].createDerived(sel[sel.length - 1].elements.concat(elements));\r\n                    }\r\n                    else {\r\n                        sel.push(new Selector(elements));\r\n                    }\r\n                }\r\n            }\r\n            // replace all parent selectors inside `inSelector` by content of `context` array\r\n            // resulting selectors are returned inside `paths` array\r\n            // returns true if `inSelector` contained at least one parent selector\r\n            function replaceParentSelector(paths, context, inSelector) {\r\n                // The paths are [[Selector]]\r\n                // The first list is a list of comma separated selectors\r\n                // The inner list is a list of inheritance separated selectors\r\n                // e.g.\r\n                // .a, .b {\r\n                //   .c {\r\n                //   }\r\n                // }\r\n                // == [[.a] [.c]] [[.b] [.c]]\r\n                //\r\n                var i, j, k, currentElements, newSelectors, selectorsMultiplied, sel, el, hadParentSelector = false, length, lastSelector;\r\n                function findNestedSelector(element) {\r\n                    var maybeSelector;\r\n                    if (!(element.value instanceof Paren)) {\r\n                        return null;\r\n                    }\r\n                    maybeSelector = element.value.value;\r\n                    if (!(maybeSelector instanceof Selector)) {\r\n                        return null;\r\n                    }\r\n                    return maybeSelector;\r\n                }\r\n                // the elements from the current selector so far\r\n                currentElements = [];\r\n                // the current list of new selectors to add to the path.\r\n                // We will build it up. We initiate it with one empty selector as we \"multiply\" the new selectors\r\n                // by the parents\r\n                newSelectors = [\r\n                    []\r\n                ];\r\n                for (i = 0; (el = inSelector.elements[i]); i++) {\r\n                    // non parent reference elements just get added\r\n                    if (el.value !== '&') {\r\n                        var nestedSelector = findNestedSelector(el);\r\n                        if (nestedSelector != null) {\r\n                            // merge the current list of non parent selector elements\r\n                            // on to the current list of selectors to add\r\n                            mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                            var nestedPaths = [];\r\n                            var replaced = void 0;\r\n                            var replacedNewSelectors = [];\r\n                            replaced = replaceParentSelector(nestedPaths, context, nestedSelector);\r\n                            hadParentSelector = hadParentSelector || replaced;\r\n                            // the nestedPaths array should have only one member - replaceParentSelector does not multiply selectors\r\n                            for (k = 0; k < nestedPaths.length; k++) {\r\n                                var replacementSelector = createSelector(createParenthesis(nestedPaths[k], el), el);\r\n                                addAllReplacementsIntoPath(newSelectors, [replacementSelector], el, inSelector, replacedNewSelectors);\r\n                            }\r\n                            newSelectors = replacedNewSelectors;\r\n                            currentElements = [];\r\n                        }\r\n                        else {\r\n                            currentElements.push(el);\r\n                        }\r\n                    }\r\n                    else {\r\n                        hadParentSelector = true;\r\n                        // the new list of selectors to add\r\n                        selectorsMultiplied = [];\r\n                        // merge the current list of non parent selector elements\r\n                        // on to the current list of selectors to add\r\n                        mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                        // loop through our current selectors\r\n                        for (j = 0; j < newSelectors.length; j++) {\r\n                            sel = newSelectors[j];\r\n                            // if we don't have any parent paths, the & might be in a mixin so that it can be used\r\n                            // whether there are parents or not\r\n                            if (context.length === 0) {\r\n                                // the combinator used on el should now be applied to the next element instead so that\r\n                                // it is not lost\r\n                                if (sel.length > 0) {\r\n                                    sel[0].elements.push(new Element(el.combinator, '', el.isVariable, el._index, el._fileInfo));\r\n                                }\r\n                                selectorsMultiplied.push(sel);\r\n                            }\r\n                            else {\r\n                                // and the parent selectors\r\n                                for (k = 0; k < context.length; k++) {\r\n                                    // We need to put the current selectors\r\n                                    // then join the last selector's elements on to the parents selectors\r\n                                    var newSelectorPath = addReplacementIntoPath(sel, context[k], el, inSelector);\r\n                                    // add that to our new set of selectors\r\n                                    selectorsMultiplied.push(newSelectorPath);\r\n                                }\r\n                            }\r\n                        }\r\n                        // our new selectors has been multiplied, so reset the state\r\n                        newSelectors = selectorsMultiplied;\r\n                        currentElements = [];\r\n                    }\r\n                }\r\n                // if we have any elements left over (e.g. .a& .b == .b)\r\n                // add them on to all the current selectors\r\n                mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                for (i = 0; i < newSelectors.length; i++) {\r\n                    length = newSelectors[i].length;\r\n                    if (length > 0) {\r\n                        paths.push(newSelectors[i]);\r\n                        lastSelector = newSelectors[i][length - 1];\r\n                        newSelectors[i][length - 1] = lastSelector.createDerived(lastSelector.elements, inSelector.extendList);\r\n                    }\r\n                }\r\n                return hadParentSelector;\r\n            }\r\n            function deriveSelector(visibilityInfo, deriveFrom) {\r\n                var newSelector = deriveFrom.createDerived(deriveFrom.elements, deriveFrom.extendList, deriveFrom.evaldCondition);\r\n                newSelector.copyVisibilityInfo(visibilityInfo);\r\n                return newSelector;\r\n            }\r\n            // joinSelector code follows\r\n            var i, newPaths, hadParentSelector;\r\n            newPaths = [];\r\n            hadParentSelector = replaceParentSelector(newPaths, context, selector);\r\n            if (!hadParentSelector) {\r\n                if (context.length > 0) {\r\n                    newPaths = [];\r\n                    for (i = 0; i < context.length; i++) {\r\n                        var concatenated = context[i].map(deriveSelector.bind(this, selector.visibilityInfo()));\r\n                        concatenated.push(selector);\r\n                        newPaths.push(concatenated);\r\n                    }\r\n                }\r\n                else {\r\n                    newPaths = [[selector]];\r\n                }\r\n            }\r\n            for (i = 0; i < newPaths.length; i++) {\r\n                paths.push(newPaths[i]);\r\n            }\r\n        }\r\n    });\n\n    var AtRule = function (name, value, rules, index, currentFileInfo, debugInfo, isRooted, visibilityInfo) {\r\n        var i;\r\n        this.name = name;\r\n        this.value = (value instanceof Node) ? value : (value ? new Anonymous(value) : value);\r\n        if (rules) {\r\n            if (Array.isArray(rules)) {\r\n                this.rules = rules;\r\n            }\r\n            else {\r\n                this.rules = [rules];\r\n                this.rules[0].selectors = (new Selector([], null, null, index, currentFileInfo)).createEmptySelectors();\r\n            }\r\n            for (i = 0; i < this.rules.length; i++) {\r\n                this.rules[i].allowImports = true;\r\n            }\r\n            this.setParent(this.rules, this);\r\n        }\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.debugInfo = debugInfo;\r\n        this.isRooted = isRooted || false;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n    };\r\n    AtRule.prototype = Object.assign(new Node(), {\r\n        type: 'AtRule',\r\n        accept: function (visitor) {\r\n            var value = this.value, rules = this.rules;\r\n            if (rules) {\r\n                this.rules = visitor.visitArray(rules);\r\n            }\r\n            if (value) {\r\n                this.value = visitor.visit(value);\r\n            }\r\n        },\r\n        isRulesetLike: function () {\r\n            return this.rules || !this.isCharset();\r\n        },\r\n        isCharset: function () {\r\n            return '@charset' === this.name;\r\n        },\r\n        genCSS: function (context, output) {\r\n            var value = this.value, rules = this.rules;\r\n            output.add(this.name, this.fileInfo(), this.getIndex());\r\n            if (value) {\r\n                output.add(' ');\r\n                value.genCSS(context, output);\r\n            }\r\n            if (rules) {\r\n                this.outputRuleset(context, output, rules);\r\n            }\r\n            else {\r\n                output.add(';');\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var mediaPathBackup, mediaBlocksBackup, value = this.value, rules = this.rules;\r\n            // media stored inside other atrule should not bubble over it\r\n            // backpup media bubbling information\r\n            mediaPathBackup = context.mediaPath;\r\n            mediaBlocksBackup = context.mediaBlocks;\r\n            // deleted media bubbling information\r\n            context.mediaPath = [];\r\n            context.mediaBlocks = [];\r\n            if (value) {\r\n                value = value.eval(context);\r\n            }\r\n            if (rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                rules = [rules[0].eval(context)];\r\n                rules[0].root = true;\r\n            }\r\n            // restore media bubbling information\r\n            context.mediaPath = mediaPathBackup;\r\n            context.mediaBlocks = mediaBlocksBackup;\r\n            return new AtRule(this.name, value, rules, this.getIndex(), this.fileInfo(), this.debugInfo, this.isRooted, this.visibilityInfo());\r\n        },\r\n        variable: function (name) {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.variable.call(this.rules[0], name);\r\n            }\r\n        },\r\n        find: function () {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.find.apply(this.rules[0], arguments);\r\n            }\r\n        },\r\n        rulesets: function () {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.rulesets.apply(this.rules[0]);\r\n            }\r\n        },\r\n        outputRuleset: function (context, output, rules) {\r\n            var ruleCnt = rules.length;\r\n            var i;\r\n            context.tabLevel = (context.tabLevel | 0) + 1;\r\n            // Compressed\r\n            if (context.compress) {\r\n                output.add('{');\r\n                for (i = 0; i < ruleCnt; i++) {\r\n                    rules[i].genCSS(context, output);\r\n                }\r\n                output.add('}');\r\n                context.tabLevel--;\r\n                return;\r\n            }\r\n            // Non-compressed\r\n            var tabSetStr = \"\\n\" + Array(context.tabLevel).join('  '), tabRuleStr = tabSetStr + \"  \";\r\n            if (!ruleCnt) {\r\n                output.add(\" {\" + tabSetStr + \"}\");\r\n            }\r\n            else {\r\n                output.add(\" {\" + tabRuleStr);\r\n                rules[0].genCSS(context, output);\r\n                for (i = 1; i < ruleCnt; i++) {\r\n                    output.add(tabRuleStr);\r\n                    rules[i].genCSS(context, output);\r\n                }\r\n                output.add(tabSetStr + \"}\");\r\n            }\r\n            context.tabLevel--;\r\n        }\r\n    });\n\n    var DetachedRuleset = function (ruleset, frames) {\r\n        this.ruleset = ruleset;\r\n        this.frames = frames;\r\n        this.setParent(this.ruleset, this);\r\n    };\r\n    DetachedRuleset.prototype = Object.assign(new Node(), {\r\n        type: 'DetachedRuleset',\r\n        evalFirst: true,\r\n        accept: function (visitor) {\r\n            this.ruleset = visitor.visit(this.ruleset);\r\n        },\r\n        eval: function (context) {\r\n            var frames = this.frames || copyArray(context.frames);\r\n            return new DetachedRuleset(this.ruleset, frames);\r\n        },\r\n        callEval: function (context) {\r\n            return this.ruleset.eval(this.frames ? new contexts.Eval(context, this.frames.concat(context.frames)) : context);\r\n        }\r\n    });\n\n    var Unit = function (numerator, denominator, backupUnit) {\r\n        this.numerator = numerator ? copyArray(numerator).sort() : [];\r\n        this.denominator = denominator ? copyArray(denominator).sort() : [];\r\n        if (backupUnit) {\r\n            this.backupUnit = backupUnit;\r\n        }\r\n        else if (numerator && numerator.length) {\r\n            this.backupUnit = numerator[0];\r\n        }\r\n    };\r\n    Unit.prototype = Object.assign(new Node(), {\r\n        type: 'Unit',\r\n        clone: function () {\r\n            return new Unit(copyArray(this.numerator), copyArray(this.denominator), this.backupUnit);\r\n        },\r\n        genCSS: function (context, output) {\r\n            // Dimension checks the unit is singular and throws an error if in strict math mode.\r\n            var strictUnits = context && context.strictUnits;\r\n            if (this.numerator.length === 1) {\r\n                output.add(this.numerator[0]); // the ideal situation\r\n            }\r\n            else if (!strictUnits && this.backupUnit) {\r\n                output.add(this.backupUnit);\r\n            }\r\n            else if (!strictUnits && this.denominator.length) {\r\n                output.add(this.denominator[0]);\r\n            }\r\n        },\r\n        toString: function () {\r\n            var i, returnStr = this.numerator.join('*');\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                returnStr += \"/\" + this.denominator[i];\r\n            }\r\n            return returnStr;\r\n        },\r\n        compare: function (other) {\r\n            return this.is(other.toString()) ? 0 : undefined;\r\n        },\r\n        is: function (unitString) {\r\n            return this.toString().toUpperCase() === unitString.toUpperCase();\r\n        },\r\n        isLength: function () {\r\n            return RegExp('^(px|em|ex|ch|rem|in|cm|mm|pc|pt|ex|vw|vh|vmin|vmax)$', 'gi').test(this.toCSS());\r\n        },\r\n        isEmpty: function () {\r\n            return this.numerator.length === 0 && this.denominator.length === 0;\r\n        },\r\n        isSingular: function () {\r\n            return this.numerator.length <= 1 && this.denominator.length === 0;\r\n        },\r\n        map: function (callback) {\r\n            var i;\r\n            for (i = 0; i < this.numerator.length; i++) {\r\n                this.numerator[i] = callback(this.numerator[i], false);\r\n            }\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                this.denominator[i] = callback(this.denominator[i], true);\r\n            }\r\n        },\r\n        usedUnits: function () {\r\n            var group;\r\n            var result = {};\r\n            var mapUnit;\r\n            var groupName;\r\n            mapUnit = function (atomicUnit) {\r\n                /* jshint loopfunc:true */\r\n                if (group.hasOwnProperty(atomicUnit) && !result[groupName]) {\r\n                    result[groupName] = atomicUnit;\r\n                }\r\n                return atomicUnit;\r\n            };\r\n            for (groupName in unitConversions) {\r\n                if (unitConversions.hasOwnProperty(groupName)) {\r\n                    group = unitConversions[groupName];\r\n                    this.map(mapUnit);\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        cancel: function () {\r\n            var counter = {};\r\n            var atomicUnit;\r\n            var i;\r\n            for (i = 0; i < this.numerator.length; i++) {\r\n                atomicUnit = this.numerator[i];\r\n                counter[atomicUnit] = (counter[atomicUnit] || 0) + 1;\r\n            }\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                atomicUnit = this.denominator[i];\r\n                counter[atomicUnit] = (counter[atomicUnit] || 0) - 1;\r\n            }\r\n            this.numerator = [];\r\n            this.denominator = [];\r\n            for (atomicUnit in counter) {\r\n                if (counter.hasOwnProperty(atomicUnit)) {\r\n                    var count = counter[atomicUnit];\r\n                    if (count > 0) {\r\n                        for (i = 0; i < count; i++) {\r\n                            this.numerator.push(atomicUnit);\r\n                        }\r\n                    }\r\n                    else if (count < 0) {\r\n                        for (i = 0; i < -count; i++) {\r\n                            this.denominator.push(atomicUnit);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.numerator.sort();\r\n            this.denominator.sort();\r\n        }\r\n    });\n\n    //\r\n    // A number with a unit\r\n    //\r\n    var Dimension = function (value, unit) {\r\n        this.value = parseFloat(value);\r\n        if (isNaN(this.value)) {\r\n            throw new Error('Dimension is not a number.');\r\n        }\r\n        this.unit = (unit && unit instanceof Unit) ? unit :\r\n            new Unit(unit ? [unit] : undefined);\r\n        this.setParent(this.unit, this);\r\n    };\r\n    Dimension.prototype = Object.assign(new Node(), {\r\n        type: 'Dimension',\r\n        accept: function (visitor) {\r\n            this.unit = visitor.visit(this.unit);\r\n        },\r\n        eval: function (context) {\r\n            return this;\r\n        },\r\n        toColor: function () {\r\n            return new Color([this.value, this.value, this.value]);\r\n        },\r\n        genCSS: function (context, output) {\r\n            if ((context && context.strictUnits) && !this.unit.isSingular()) {\r\n                throw new Error(\"Multiple units in dimension. Correct the units or use the unit function. Bad unit: \" + this.unit.toString());\r\n            }\r\n            var value = this.fround(context, this.value);\r\n            var strValue = String(value);\r\n            if (value !== 0 && value < 0.000001 && value > -0.000001) {\r\n                // would be output 1e-6 etc.\r\n                strValue = value.toFixed(20).replace(/0+$/, '');\r\n            }\r\n            if (context && context.compress) {\r\n                // Zero values doesn't need a unit\r\n                if (value === 0 && this.unit.isLength()) {\r\n                    output.add(strValue);\r\n                    return;\r\n                }\r\n                // Float values doesn't need a leading zero\r\n                if (value > 0 && value < 1) {\r\n                    strValue = (strValue).substr(1);\r\n                }\r\n            }\r\n            output.add(strValue);\r\n            this.unit.genCSS(context, output);\r\n        },\r\n        // In an operation between two Dimensions,\r\n        // we default to the first Dimension's unit,\r\n        // so `1px + 2` will yield `3px`.\r\n        operate: function (context, op, other) {\r\n            /* jshint noempty:false */\r\n            var value = this._operate(context, op, this.value, other.value);\r\n            var unit = this.unit.clone();\r\n            if (op === '+' || op === '-') {\r\n                if (unit.numerator.length === 0 && unit.denominator.length === 0) {\r\n                    unit = other.unit.clone();\r\n                    if (this.unit.backupUnit) {\r\n                        unit.backupUnit = this.unit.backupUnit;\r\n                    }\r\n                }\r\n                else if (other.unit.numerator.length === 0 && unit.denominator.length === 0) ;\r\n                else {\r\n                    other = other.convertTo(this.unit.usedUnits());\r\n                    if (context.strictUnits && other.unit.toString() !== unit.toString()) {\r\n                        throw new Error(\"Incompatible units. Change the units or use the unit function. \"\r\n                            + (\"Bad units: '\" + unit.toString() + \"' and '\" + other.unit.toString() + \"'.\"));\r\n                    }\r\n                    value = this._operate(context, op, this.value, other.value);\r\n                }\r\n            }\r\n            else if (op === '*') {\r\n                unit.numerator = unit.numerator.concat(other.unit.numerator).sort();\r\n                unit.denominator = unit.denominator.concat(other.unit.denominator).sort();\r\n                unit.cancel();\r\n            }\r\n            else if (op === '/') {\r\n                unit.numerator = unit.numerator.concat(other.unit.denominator).sort();\r\n                unit.denominator = unit.denominator.concat(other.unit.numerator).sort();\r\n                unit.cancel();\r\n            }\r\n            return new Dimension(value, unit);\r\n        },\r\n        compare: function (other) {\r\n            var a, b;\r\n            if (!(other instanceof Dimension)) {\r\n                return undefined;\r\n            }\r\n            if (this.unit.isEmpty() || other.unit.isEmpty()) {\r\n                a = this;\r\n                b = other;\r\n            }\r\n            else {\r\n                a = this.unify();\r\n                b = other.unify();\r\n                if (a.unit.compare(b.unit) !== 0) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            return Node.numericCompare(a.value, b.value);\r\n        },\r\n        unify: function () {\r\n            return this.convertTo({ length: 'px', duration: 's', angle: 'rad' });\r\n        },\r\n        convertTo: function (conversions) {\r\n            var value = this.value;\r\n            var unit = this.unit.clone();\r\n            var i;\r\n            var groupName;\r\n            var group;\r\n            var targetUnit;\r\n            var derivedConversions = {};\r\n            var applyUnit;\r\n            if (typeof conversions === 'string') {\r\n                for (i in unitConversions) {\r\n                    if (unitConversions[i].hasOwnProperty(conversions)) {\r\n                        derivedConversions = {};\r\n                        derivedConversions[i] = conversions;\r\n                    }\r\n                }\r\n                conversions = derivedConversions;\r\n            }\r\n            applyUnit = function (atomicUnit, denominator) {\r\n                /* jshint loopfunc:true */\r\n                if (group.hasOwnProperty(atomicUnit)) {\r\n                    if (denominator) {\r\n                        value = value / (group[atomicUnit] / group[targetUnit]);\r\n                    }\r\n                    else {\r\n                        value = value * (group[atomicUnit] / group[targetUnit]);\r\n                    }\r\n                    return targetUnit;\r\n                }\r\n                return atomicUnit;\r\n            };\r\n            for (groupName in conversions) {\r\n                if (conversions.hasOwnProperty(groupName)) {\r\n                    targetUnit = conversions[groupName];\r\n                    group = unitConversions[groupName];\r\n                    unit.map(applyUnit);\r\n                }\r\n            }\r\n            unit.cancel();\r\n            return new Dimension(value, unit);\r\n        }\r\n    });\n\n    var MATH = Math$1;\r\n    var Operation = function (op, operands, isSpaced) {\r\n        this.op = op.trim();\r\n        this.operands = operands;\r\n        this.isSpaced = isSpaced;\r\n    };\r\n    Operation.prototype = Object.assign(new Node(), {\r\n        type: 'Operation',\r\n        accept: function (visitor) {\r\n            this.operands = visitor.visitArray(this.operands);\r\n        },\r\n        eval: function (context) {\r\n            var a = this.operands[0].eval(context), b = this.operands[1].eval(context), op;\r\n            if (context.isMathOn(this.op)) {\r\n                op = this.op === './' ? '/' : this.op;\r\n                if (a instanceof Dimension && b instanceof Color) {\r\n                    a = a.toColor();\r\n                }\r\n                if (b instanceof Dimension && a instanceof Color) {\r\n                    b = b.toColor();\r\n                }\r\n                if (!a.operate || !b.operate) {\r\n                    if ((a instanceof Operation || b instanceof Operation)\r\n                        && a.op === '/' && context.math === MATH.PARENS_DIVISION) {\r\n                        return new Operation(this.op, [a, b], this.isSpaced);\r\n                    }\r\n                    throw { type: 'Operation',\r\n                        message: 'Operation on an invalid type' };\r\n                }\r\n                return a.operate(context, op, b);\r\n            }\r\n            else {\r\n                return new Operation(this.op, [a, b], this.isSpaced);\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            this.operands[0].genCSS(context, output);\r\n            if (this.isSpaced) {\r\n                output.add(' ');\r\n            }\r\n            output.add(this.op);\r\n            if (this.isSpaced) {\r\n                output.add(' ');\r\n            }\r\n            this.operands[1].genCSS(context, output);\r\n        }\r\n    });\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    function __spreadArray(to, from, pack) {\r\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n            if (ar || !(i in from)) {\r\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n                ar[i] = from[i];\r\n            }\r\n        }\r\n        return to.concat(ar || from);\r\n    }\n\n    var Expression = function (value, noSpacing) {\r\n        this.value = value;\r\n        this.noSpacing = noSpacing;\r\n        if (!value) {\r\n            throw new Error('Expression requires an array parameter');\r\n        }\r\n    };\r\n    Expression.prototype = Object.assign(new Node(), {\r\n        type: 'Expression',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visitArray(this.value);\r\n        },\r\n        eval: function (context) {\r\n            var returnValue;\r\n            var mathOn = context.isMathOn();\r\n            var inParenthesis = this.parens;\r\n            var doubleParen = false;\r\n            if (inParenthesis) {\r\n                context.inParenthesis();\r\n            }\r\n            if (this.value.length > 1) {\r\n                returnValue = new Expression(this.value.map(function (e) {\r\n                    if (!e.eval) {\r\n                        return e;\r\n                    }\r\n                    return e.eval(context);\r\n                }), this.noSpacing);\r\n            }\r\n            else if (this.value.length === 1) {\r\n                if (this.value[0].parens && !this.value[0].parensInOp && !context.inCalc) {\r\n                    doubleParen = true;\r\n                }\r\n                returnValue = this.value[0].eval(context);\r\n            }\r\n            else {\r\n                returnValue = this;\r\n            }\r\n            if (inParenthesis) {\r\n                context.outOfParenthesis();\r\n            }\r\n            if (this.parens && this.parensInOp && !mathOn && !doubleParen\r\n                && (!(returnValue instanceof Dimension))) {\r\n                returnValue = new Paren(returnValue);\r\n            }\r\n            return returnValue;\r\n        },\r\n        genCSS: function (context, output) {\r\n            for (var i = 0; i < this.value.length; i++) {\r\n                this.value[i].genCSS(context, output);\r\n                if (!this.noSpacing && i + 1 < this.value.length) {\r\n                    output.add(' ');\r\n                }\r\n            }\r\n        },\r\n        throwAwayComments: function () {\r\n            this.value = this.value.filter(function (v) {\r\n                return !(v instanceof Comment);\r\n            });\r\n        }\r\n    });\n\n    var functionCaller = /** @class */ (function () {\r\n        function functionCaller(name, context, index, currentFileInfo) {\r\n            this.name = name.toLowerCase();\r\n            this.index = index;\r\n            this.context = context;\r\n            this.currentFileInfo = currentFileInfo;\r\n            this.func = context.frames[0].functionRegistry.get(this.name);\r\n        }\r\n        functionCaller.prototype.isValid = function () {\r\n            return Boolean(this.func);\r\n        };\r\n        functionCaller.prototype.call = function (args) {\r\n            var _this = this;\r\n            if (!(Array.isArray(args))) {\r\n                args = [args];\r\n            }\r\n            var evalArgs = this.func.evalArgs;\r\n            if (evalArgs !== false) {\r\n                args = args.map(function (a) { return a.eval(_this.context); });\r\n            }\r\n            var commentFilter = function (item) { return !(item.type === 'Comment'); };\r\n            // This code is terrible and should be replaced as per this issue...\r\n            // https://github.com/less/less.js/issues/2477\r\n            args = args\r\n                .filter(commentFilter)\r\n                .map(function (item) {\r\n                if (item.type === 'Expression') {\r\n                    var subNodes = item.value.filter(commentFilter);\r\n                    if (subNodes.length === 1) {\r\n                        // https://github.com/less/less.js/issues/3616\r\n                        if (item.parens && subNodes[0].op === '/') {\r\n                            return item;\r\n                        }\r\n                        return subNodes[0];\r\n                    }\r\n                    else {\r\n                        return new Expression(subNodes);\r\n                    }\r\n                }\r\n                return item;\r\n            });\r\n            if (evalArgs === false) {\r\n                return this.func.apply(this, __spreadArray([this.context], args));\r\n            }\r\n            return this.func.apply(this, args);\r\n        };\r\n        return functionCaller;\r\n    }());\n\n    //\r\n    // A function call node.\r\n    //\r\n    var Call = function (name, args, index, currentFileInfo) {\r\n        this.name = name;\r\n        this.args = args;\r\n        this.calc = name === 'calc';\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Call.prototype = Object.assign(new Node(), {\r\n        type: 'Call',\r\n        accept: function (visitor) {\r\n            if (this.args) {\r\n                this.args = visitor.visitArray(this.args);\r\n            }\r\n        },\r\n        //\r\n        // When evaluating a function call,\r\n        // we either find the function in the functionRegistry,\r\n        // in which case we call it, passing the  evaluated arguments,\r\n        // if this returns null or we cannot find the function, we\r\n        // simply print it out as it appeared originally [2].\r\n        //\r\n        // The reason why we evaluate the arguments, is in the case where\r\n        // we try to pass a variable to a function, like: `saturate(@color)`.\r\n        // The function should receive the value, not the variable.\r\n        //\r\n        eval: function (context) {\r\n            var _this = this;\r\n            /**\r\n             * Turn off math for calc(), and switch back on for evaluating nested functions\r\n             */\r\n            var currentMathContext = context.mathOn;\r\n            context.mathOn = !this.calc;\r\n            if (this.calc || context.inCalc) {\r\n                context.enterCalc();\r\n            }\r\n            var exitCalc = function () {\r\n                if (_this.calc || context.inCalc) {\r\n                    context.exitCalc();\r\n                }\r\n                context.mathOn = currentMathContext;\r\n            };\r\n            var result;\r\n            var funcCaller = new functionCaller(this.name, context, this.getIndex(), this.fileInfo());\r\n            if (funcCaller.isValid()) {\r\n                try {\r\n                    result = funcCaller.call(this.args);\r\n                    exitCalc();\r\n                }\r\n                catch (e) {\r\n                    if (e.hasOwnProperty('line') && e.hasOwnProperty('column')) {\r\n                        throw e;\r\n                    }\r\n                    throw {\r\n                        type: e.type || 'Runtime',\r\n                        message: \"Error evaluating function `\" + this.name + \"`\" + (e.message ? \": \" + e.message : ''),\r\n                        index: this.getIndex(),\r\n                        filename: this.fileInfo().filename,\r\n                        line: e.lineNumber,\r\n                        column: e.columnNumber\r\n                    };\r\n                }\r\n            }\r\n            if (result !== null && result !== undefined) {\r\n                // Results that that are not nodes are cast as Anonymous nodes\r\n                // Falsy values or booleans are returned as empty nodes\r\n                if (!(result instanceof Node)) {\r\n                    if (!result || result === true) {\r\n                        result = new Anonymous(null);\r\n                    }\r\n                    else {\r\n                        result = new Anonymous(result.toString());\r\n                    }\r\n                }\r\n                result._index = this._index;\r\n                result._fileInfo = this._fileInfo;\r\n                return result;\r\n            }\r\n            var args = this.args.map(function (a) { return a.eval(context); });\r\n            exitCalc();\r\n            return new Call(this.name, args, this.getIndex(), this.fileInfo());\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.name + \"(\", this.fileInfo(), this.getIndex());\r\n            for (var i = 0; i < this.args.length; i++) {\r\n                this.args[i].genCSS(context, output);\r\n                if (i + 1 < this.args.length) {\r\n                    output.add(', ');\r\n                }\r\n            }\r\n            output.add(')');\r\n        }\r\n    });\n\n    var Variable = function (name, index, currentFileInfo) {\r\n        this.name = name;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Variable.prototype = Object.assign(new Node(), {\r\n        type: 'Variable',\r\n        eval: function (context) {\r\n            var variable, name = this.name;\r\n            if (name.indexOf('@@') === 0) {\r\n                name = \"@\" + new Variable(name.slice(1), this.getIndex(), this.fileInfo()).eval(context).value;\r\n            }\r\n            if (this.evaluating) {\r\n                throw { type: 'Name',\r\n                    message: \"Recursive variable definition for \" + name,\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            this.evaluating = true;\r\n            variable = this.find(context.frames, function (frame) {\r\n                var v = frame.variable(name);\r\n                if (v) {\r\n                    if (v.important) {\r\n                        var importantScope = context.importantScope[context.importantScope.length - 1];\r\n                        importantScope.important = v.important;\r\n                    }\r\n                    // If in calc, wrap vars in a function call to cascade evaluate args first\r\n                    if (context.inCalc) {\r\n                        return (new Call('_SELF', [v.value])).eval(context);\r\n                    }\r\n                    else {\r\n                        return v.value.eval(context);\r\n                    }\r\n                }\r\n            });\r\n            if (variable) {\r\n                this.evaluating = false;\r\n                return variable;\r\n            }\r\n            else {\r\n                throw { type: 'Name',\r\n                    message: \"variable \" + name + \" is undefined\",\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n        },\r\n        find: function (obj, fun) {\r\n            for (var i = 0, r = void 0; i < obj.length; i++) {\r\n                r = fun.call(obj, obj[i]);\r\n                if (r) {\r\n                    return r;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    });\n\n    var Property = function (name, index, currentFileInfo) {\r\n        this.name = name;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Property.prototype = Object.assign(new Node(), {\r\n        type: 'Property',\r\n        eval: function (context) {\r\n            var property;\r\n            var name = this.name;\r\n            // TODO: shorten this reference\r\n            var mergeRules = context.pluginManager.less.visitors.ToCSSVisitor.prototype._mergeRules;\r\n            if (this.evaluating) {\r\n                throw { type: 'Name',\r\n                    message: \"Recursive property reference for \" + name,\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            this.evaluating = true;\r\n            property = this.find(context.frames, function (frame) {\r\n                var v;\r\n                var vArr = frame.property(name);\r\n                if (vArr) {\r\n                    for (var i = 0; i < vArr.length; i++) {\r\n                        v = vArr[i];\r\n                        vArr[i] = new Declaration(v.name, v.value, v.important, v.merge, v.index, v.currentFileInfo, v.inline, v.variable);\r\n                    }\r\n                    mergeRules(vArr);\r\n                    v = vArr[vArr.length - 1];\r\n                    if (v.important) {\r\n                        var importantScope = context.importantScope[context.importantScope.length - 1];\r\n                        importantScope.important = v.important;\r\n                    }\r\n                    v = v.value.eval(context);\r\n                    return v;\r\n                }\r\n            });\r\n            if (property) {\r\n                this.evaluating = false;\r\n                return property;\r\n            }\r\n            else {\r\n                throw { type: 'Name',\r\n                    message: \"Property '\" + name + \"' is undefined\",\r\n                    filename: this.currentFileInfo.filename,\r\n                    index: this.index };\r\n            }\r\n        },\r\n        find: function (obj, fun) {\r\n            for (var i = 0, r = void 0; i < obj.length; i++) {\r\n                r = fun.call(obj, obj[i]);\r\n                if (r) {\r\n                    return r;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    });\n\n    var Attribute = function (key, op, value, cif) {\r\n        this.key = key;\r\n        this.op = op;\r\n        this.value = value;\r\n        this.cif = cif;\r\n    };\r\n    Attribute.prototype = Object.assign(new Node(), {\r\n        type: 'Attribute',\r\n        eval: function (context) {\r\n            return new Attribute(this.key.eval ? this.key.eval(context) : this.key, this.op, (this.value && this.value.eval) ? this.value.eval(context) : this.value, this.cif);\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context));\r\n        },\r\n        toCSS: function (context) {\r\n            var value = this.key.toCSS ? this.key.toCSS(context) : this.key;\r\n            if (this.op) {\r\n                value += this.op;\r\n                value += (this.value.toCSS ? this.value.toCSS(context) : this.value);\r\n            }\r\n            if (this.cif) {\r\n                value = value + \" \" + this.cif;\r\n            }\r\n            return \"[\" + value + \"]\";\r\n        }\r\n    });\n\n    var Quoted = function (str, content, escaped, index, currentFileInfo) {\r\n        this.escaped = (escaped == null) ? true : escaped;\r\n        this.value = content || '';\r\n        this.quote = str.charAt(0);\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.variableRegex = /@\\{([\\w-]+)\\}/g;\r\n        this.propRegex = /\\$\\{([\\w-]+)\\}/g;\r\n        this.allowRoot = escaped;\r\n    };\r\n    Quoted.prototype = Object.assign(new Node(), {\r\n        type: 'Quoted',\r\n        genCSS: function (context, output) {\r\n            if (!this.escaped) {\r\n                output.add(this.quote, this.fileInfo(), this.getIndex());\r\n            }\r\n            output.add(this.value);\r\n            if (!this.escaped) {\r\n                output.add(this.quote);\r\n            }\r\n        },\r\n        containsVariables: function () {\r\n            return this.value.match(this.variableRegex);\r\n        },\r\n        eval: function (context) {\r\n            var that = this;\r\n            var value = this.value;\r\n            var variableReplacement = function (_, name) {\r\n                var v = new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\r\n                return (v instanceof Quoted) ? v.value : v.toCSS();\r\n            };\r\n            var propertyReplacement = function (_, name) {\r\n                var v = new Property(\"$\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\r\n                return (v instanceof Quoted) ? v.value : v.toCSS();\r\n            };\r\n            function iterativeReplace(value, regexp, replacementFnc) {\r\n                var evaluatedValue = value;\r\n                do {\r\n                    value = evaluatedValue.toString();\r\n                    evaluatedValue = value.replace(regexp, replacementFnc);\r\n                } while (value !== evaluatedValue);\r\n                return evaluatedValue;\r\n            }\r\n            value = iterativeReplace(value, this.variableRegex, variableReplacement);\r\n            value = iterativeReplace(value, this.propRegex, propertyReplacement);\r\n            return new Quoted(this.quote + value + this.quote, value, this.escaped, this.getIndex(), this.fileInfo());\r\n        },\r\n        compare: function (other) {\r\n            // when comparing quoted strings allow the quote to differ\r\n            if (other.type === 'Quoted' && !this.escaped && !other.escaped) {\r\n                return Node.numericCompare(this.value, other.value);\r\n            }\r\n            else {\r\n                return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\r\n            }\r\n        }\r\n    });\n\n    function escapePath(path) {\r\n        return path.replace(/[\\(\\)'\"\\s]/g, function (match) { return \"\\\\\" + match; });\r\n    }\r\n    var URL = function (val, index, currentFileInfo, isEvald) {\r\n        this.value = val;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.isEvald = isEvald;\r\n    };\r\n    URL.prototype = Object.assign(new Node(), {\r\n        type: 'Url',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add('url(');\r\n            this.value.genCSS(context, output);\r\n            output.add(')');\r\n        },\r\n        eval: function (context) {\r\n            var val = this.value.eval(context);\r\n            var rootpath;\r\n            if (!this.isEvald) {\r\n                // Add the rootpath if the URL requires a rewrite\r\n                rootpath = this.fileInfo() && this.fileInfo().rootpath;\r\n                if (typeof rootpath === 'string' &&\r\n                    typeof val.value === 'string' &&\r\n                    context.pathRequiresRewrite(val.value)) {\r\n                    if (!val.quote) {\r\n                        rootpath = escapePath(rootpath);\r\n                    }\r\n                    val.value = context.rewritePath(val.value, rootpath);\r\n                }\r\n                else {\r\n                    val.value = context.normalizePath(val.value);\r\n                }\r\n                // Add url args if enabled\r\n                if (context.urlArgs) {\r\n                    if (!val.value.match(/^\\s*data:/)) {\r\n                        var delimiter = val.value.indexOf('?') === -1 ? '?' : '&';\r\n                        var urlArgs = delimiter + context.urlArgs;\r\n                        if (val.value.indexOf('#') !== -1) {\r\n                            val.value = val.value.replace('#', urlArgs + \"#\");\r\n                        }\r\n                        else {\r\n                            val.value += urlArgs;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return new URL(val, this.getIndex(), this.fileInfo(), true);\r\n        }\r\n    });\n\n    var Media = function (value, features, index, currentFileInfo, visibilityInfo) {\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        var selectors = (new Selector([], null, null, this._index, this._fileInfo)).createEmptySelectors();\r\n        this.features = new Value(features);\r\n        this.rules = [new Ruleset(selectors, value)];\r\n        this.rules[0].allowImports = true;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        this.setParent(selectors, this);\r\n        this.setParent(this.features, this);\r\n        this.setParent(this.rules, this);\r\n    };\r\n    Media.prototype = Object.assign(new AtRule(), {\r\n        type: 'Media',\r\n        isRulesetLike: function () {\r\n            return true;\r\n        },\r\n        accept: function (visitor) {\r\n            if (this.features) {\r\n                this.features = visitor.visit(this.features);\r\n            }\r\n            if (this.rules) {\r\n                this.rules = visitor.visitArray(this.rules);\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add('@media ', this._fileInfo, this._index);\r\n            this.features.genCSS(context, output);\r\n            this.outputRuleset(context, output, this.rules);\r\n        },\r\n        eval: function (context) {\r\n            if (!context.mediaBlocks) {\r\n                context.mediaBlocks = [];\r\n                context.mediaPath = [];\r\n            }\r\n            var media = new Media(null, [], this._index, this._fileInfo, this.visibilityInfo());\r\n            if (this.debugInfo) {\r\n                this.rules[0].debugInfo = this.debugInfo;\r\n                media.debugInfo = this.debugInfo;\r\n            }\r\n            media.features = this.features.eval(context);\r\n            context.mediaPath.push(media);\r\n            context.mediaBlocks.push(media);\r\n            this.rules[0].functionRegistry = context.frames[0].functionRegistry.inherit();\r\n            context.frames.unshift(this.rules[0]);\r\n            media.rules = [this.rules[0].eval(context)];\r\n            context.frames.shift();\r\n            context.mediaPath.pop();\r\n            return context.mediaPath.length === 0 ? media.evalTop(context) :\r\n                media.evalNested(context);\r\n        },\r\n        evalTop: function (context) {\r\n            var result = this;\r\n            // Render all dependent Media blocks.\r\n            if (context.mediaBlocks.length > 1) {\r\n                var selectors = (new Selector([], null, null, this.getIndex(), this.fileInfo())).createEmptySelectors();\r\n                result = new Ruleset(selectors, context.mediaBlocks);\r\n                result.multiMedia = true;\r\n                result.copyVisibilityInfo(this.visibilityInfo());\r\n                this.setParent(result, this);\r\n            }\r\n            delete context.mediaBlocks;\r\n            delete context.mediaPath;\r\n            return result;\r\n        },\r\n        evalNested: function (context) {\r\n            var i;\r\n            var value;\r\n            var path = context.mediaPath.concat([this]);\r\n            // Extract the media-query conditions separated with `,` (OR).\r\n            for (i = 0; i < path.length; i++) {\r\n                value = path[i].features instanceof Value ?\r\n                    path[i].features.value : path[i].features;\r\n                path[i] = Array.isArray(value) ? value : [value];\r\n            }\r\n            // Trace all permutations to generate the resulting media-query.\r\n            //\r\n            // (a, b and c) with nested (d, e) ->\r\n            //    a and d\r\n            //    a and e\r\n            //    b and c and d\r\n            //    b and c and e\r\n            this.features = new Value(this.permute(path).map(function (path) {\r\n                path = path.map(function (fragment) { return fragment.toCSS ? fragment : new Anonymous(fragment); });\r\n                for (i = path.length - 1; i > 0; i--) {\r\n                    path.splice(i, 0, new Anonymous('and'));\r\n                }\r\n                return new Expression(path);\r\n            }));\r\n            this.setParent(this.features, this);\r\n            // Fake a tree-node that doesn't output anything.\r\n            return new Ruleset([], []);\r\n        },\r\n        permute: function (arr) {\r\n            if (arr.length === 0) {\r\n                return [];\r\n            }\r\n            else if (arr.length === 1) {\r\n                return arr[0];\r\n            }\r\n            else {\r\n                var result = [];\r\n                var rest = this.permute(arr.slice(1));\r\n                for (var i = 0; i < rest.length; i++) {\r\n                    for (var j = 0; j < arr[0].length; j++) {\r\n                        result.push([arr[0][j]].concat(rest[i]));\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n        },\r\n        bubbleSelectors: function (selectors) {\r\n            if (!selectors) {\r\n                return;\r\n            }\r\n            this.rules = [new Ruleset(copyArray(selectors), [this.rules[0]])];\r\n            this.setParent(this.rules, this);\r\n        }\r\n    });\n\n    //\r\n    // CSS @import node\r\n    //\r\n    // The general strategy here is that we don't want to wait\r\n    // for the parsing to be completed, before we start importing\r\n    // the file. That's because in the context of a browser,\r\n    // most of the time will be spent waiting for the server to respond.\r\n    //\r\n    // On creation, we push the import path to our import queue, though\r\n    // `import,push`, we also pass it a callback, which it'll call once\r\n    // the file has been fetched, and parsed.\r\n    //\r\n    var Import = function (path, features, options, index, currentFileInfo, visibilityInfo) {\r\n        this.options = options;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.path = path;\r\n        this.features = features;\r\n        this.allowRoot = true;\r\n        if (this.options.less !== undefined || this.options.inline) {\r\n            this.css = !this.options.less || this.options.inline;\r\n        }\r\n        else {\r\n            var pathValue = this.getPath();\r\n            if (pathValue && /[#\\.\\&\\?]css([\\?;].*)?$/.test(pathValue)) {\r\n                this.css = true;\r\n            }\r\n        }\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.features, this);\r\n        this.setParent(this.path, this);\r\n    };\r\n    Import.prototype = Object.assign(new Node(), {\r\n        type: 'Import',\r\n        accept: function (visitor) {\r\n            if (this.features) {\r\n                this.features = visitor.visit(this.features);\r\n            }\r\n            this.path = visitor.visit(this.path);\r\n            if (!this.options.isPlugin && !this.options.inline && this.root) {\r\n                this.root = visitor.visit(this.root);\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            if (this.css && this.path._fileInfo.reference === undefined) {\r\n                output.add('@import ', this._fileInfo, this._index);\r\n                this.path.genCSS(context, output);\r\n                if (this.features) {\r\n                    output.add(' ');\r\n                    this.features.genCSS(context, output);\r\n                }\r\n                output.add(';');\r\n            }\r\n        },\r\n        getPath: function () {\r\n            return (this.path instanceof URL) ?\r\n                this.path.value.value : this.path.value;\r\n        },\r\n        isVariableImport: function () {\r\n            var path = this.path;\r\n            if (path instanceof URL) {\r\n                path = path.value;\r\n            }\r\n            if (path instanceof Quoted) {\r\n                return path.containsVariables();\r\n            }\r\n            return true;\r\n        },\r\n        evalForImport: function (context) {\r\n            var path = this.path;\r\n            if (path instanceof URL) {\r\n                path = path.value;\r\n            }\r\n            return new Import(path.eval(context), this.features, this.options, this._index, this._fileInfo, this.visibilityInfo());\r\n        },\r\n        evalPath: function (context) {\r\n            var path = this.path.eval(context);\r\n            var fileInfo = this._fileInfo;\r\n            if (!(path instanceof URL)) {\r\n                // Add the rootpath if the URL requires a rewrite\r\n                var pathValue = path.value;\r\n                if (fileInfo &&\r\n                    pathValue &&\r\n                    context.pathRequiresRewrite(pathValue)) {\r\n                    path.value = context.rewritePath(pathValue, fileInfo.rootpath);\r\n                }\r\n                else {\r\n                    path.value = context.normalizePath(path.value);\r\n                }\r\n            }\r\n            return path;\r\n        },\r\n        eval: function (context) {\r\n            var result = this.doEval(context);\r\n            if (this.options.reference || this.blocksVisibility()) {\r\n                if (result.length || result.length === 0) {\r\n                    result.forEach(function (node) {\r\n                        node.addVisibilityBlock();\r\n                    });\r\n                }\r\n                else {\r\n                    result.addVisibilityBlock();\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        doEval: function (context) {\r\n            var ruleset;\r\n            var registry;\r\n            var features = this.features && this.features.eval(context);\r\n            if (this.options.isPlugin) {\r\n                if (this.root && this.root.eval) {\r\n                    try {\r\n                        this.root.eval(context);\r\n                    }\r\n                    catch (e) {\r\n                        e.message = 'Plugin error during evaluation';\r\n                        throw new LessError(e, this.root.imports, this.root.filename);\r\n                    }\r\n                }\r\n                registry = context.frames[0] && context.frames[0].functionRegistry;\r\n                if (registry && this.root && this.root.functions) {\r\n                    registry.addMultiple(this.root.functions);\r\n                }\r\n                return [];\r\n            }\r\n            if (this.skip) {\r\n                if (typeof this.skip === 'function') {\r\n                    this.skip = this.skip();\r\n                }\r\n                if (this.skip) {\r\n                    return [];\r\n                }\r\n            }\r\n            if (this.options.inline) {\r\n                var contents = new Anonymous(this.root, 0, {\r\n                    filename: this.importedFilename,\r\n                    reference: this.path._fileInfo && this.path._fileInfo.reference\r\n                }, true, true);\r\n                return this.features ? new Media([contents], this.features.value) : [contents];\r\n            }\r\n            else if (this.css) {\r\n                var newImport = new Import(this.evalPath(context), features, this.options, this._index);\r\n                if (!newImport.css && this.error) {\r\n                    throw this.error;\r\n                }\r\n                return newImport;\r\n            }\r\n            else if (this.root) {\r\n                ruleset = new Ruleset(null, copyArray(this.root.rules));\r\n                ruleset.evalImports(context);\r\n                return this.features ? new Media(ruleset.rules, this.features.value) : ruleset.rules;\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        }\r\n    });\n\n    var JsEvalNode = function () { };\r\n    JsEvalNode.prototype = Object.assign(new Node(), {\r\n        evaluateJavaScript: function (expression, context) {\r\n            var result;\r\n            var that = this;\r\n            var evalContext = {};\r\n            if (!context.javascriptEnabled) {\r\n                throw { message: 'Inline JavaScript is not enabled. Is it set in your options?',\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            expression = expression.replace(/@\\{([\\w-]+)\\}/g, function (_, name) {\r\n                return that.jsify(new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context));\r\n            });\r\n            try {\r\n                expression = new Function(\"return (\" + expression + \")\");\r\n            }\r\n            catch (e) {\r\n                throw { message: \"JavaScript evaluation error: \" + e.message + \" from `\" + expression + \"`\",\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            var variables = context.frames[0].variables();\r\n            for (var k in variables) {\r\n                if (variables.hasOwnProperty(k)) {\r\n                    /* jshint loopfunc:true */\r\n                    evalContext[k.slice(1)] = {\r\n                        value: variables[k].value,\r\n                        toJS: function () {\r\n                            return this.value.eval(context).toCSS();\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n            try {\r\n                result = expression.call(evalContext);\r\n            }\r\n            catch (e) {\r\n                throw { message: \"JavaScript evaluation error: '\" + e.name + \": \" + e.message.replace(/[\"]/g, '\\'') + \"'\",\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            return result;\r\n        },\r\n        jsify: function (obj) {\r\n            if (Array.isArray(obj.value) && (obj.value.length > 1)) {\r\n                return \"[\" + obj.value.map(function (v) { return v.toCSS(); }).join(', ') + \"]\";\r\n            }\r\n            else {\r\n                return obj.toCSS();\r\n            }\r\n        }\r\n    });\n\n    var JavaScript = function (string, escaped, index, currentFileInfo) {\r\n        this.escaped = escaped;\r\n        this.expression = string;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    JavaScript.prototype = Object.assign(new JsEvalNode(), {\r\n        type: 'JavaScript',\r\n        eval: function (context) {\r\n            var result = this.evaluateJavaScript(this.expression, context);\r\n            var type = typeof result;\r\n            if (type === 'number' && !isNaN(result)) {\r\n                return new Dimension(result);\r\n            }\r\n            else if (type === 'string') {\r\n                return new Quoted(\"\\\"\" + result + \"\\\"\", result, this.escaped, this._index);\r\n            }\r\n            else if (Array.isArray(result)) {\r\n                return new Anonymous(result.join(', '));\r\n            }\r\n            else {\r\n                return new Anonymous(result);\r\n            }\r\n        }\r\n    });\n\n    var Assignment = function (key, val) {\r\n        this.key = key;\r\n        this.value = val;\r\n    };\r\n    Assignment.prototype = Object.assign(new Node(), {\r\n        type: 'Assignment',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        },\r\n        eval: function (context) {\r\n            if (this.value.eval) {\r\n                return new Assignment(this.key, this.value.eval(context));\r\n            }\r\n            return this;\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.key + \"=\");\r\n            if (this.value.genCSS) {\r\n                this.value.genCSS(context, output);\r\n            }\r\n            else {\r\n                output.add(this.value);\r\n            }\r\n        }\r\n    });\n\n    var Condition = function (op, l, r, i, negate) {\r\n        this.op = op.trim();\r\n        this.lvalue = l;\r\n        this.rvalue = r;\r\n        this._index = i;\r\n        this.negate = negate;\r\n    };\r\n    Condition.prototype = Object.assign(new Node(), {\r\n        type: 'Condition',\r\n        accept: function (visitor) {\r\n            this.lvalue = visitor.visit(this.lvalue);\r\n            this.rvalue = visitor.visit(this.rvalue);\r\n        },\r\n        eval: function (context) {\r\n            var result = (function (op, a, b) {\r\n                switch (op) {\r\n                    case 'and': return a && b;\r\n                    case 'or': return a || b;\r\n                    default:\r\n                        switch (Node.compare(a, b)) {\r\n                            case -1:\r\n                                return op === '<' || op === '=<' || op === '<=';\r\n                            case 0:\r\n                                return op === '=' || op === '>=' || op === '=<' || op === '<=';\r\n                            case 1:\r\n                                return op === '>' || op === '>=';\r\n                            default:\r\n                                return false;\r\n                        }\r\n                }\r\n            })(this.op, this.lvalue.eval(context), this.rvalue.eval(context));\r\n            return this.negate ? !result : result;\r\n        }\r\n    });\n\n    var UnicodeDescriptor = function (value) {\r\n        this.value = value;\r\n    };\r\n    UnicodeDescriptor.prototype = Object.assign(new Node(), {\r\n        type: 'UnicodeDescriptor'\r\n    });\n\n    var Negative = function (node) {\r\n        this.value = node;\r\n    };\r\n    Negative.prototype = Object.assign(new Node(), {\r\n        type: 'Negative',\r\n        genCSS: function (context, output) {\r\n            output.add('-');\r\n            this.value.genCSS(context, output);\r\n        },\r\n        eval: function (context) {\r\n            if (context.isMathOn()) {\r\n                return (new Operation('*', [new Dimension(-1), this.value])).eval(context);\r\n            }\r\n            return new Negative(this.value.eval(context));\r\n        }\r\n    });\n\n    var Extend = function (selector, option, index, currentFileInfo, visibilityInfo) {\r\n        this.selector = selector;\r\n        this.option = option;\r\n        this.object_id = Extend.next_id++;\r\n        this.parent_ids = [this.object_id];\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        switch (option) {\r\n            case 'all':\r\n                this.allowBefore = true;\r\n                this.allowAfter = true;\r\n                break;\r\n            default:\r\n                this.allowBefore = false;\r\n                this.allowAfter = false;\r\n                break;\r\n        }\r\n        this.setParent(this.selector, this);\r\n    };\r\n    Extend.prototype = Object.assign(new Node(), {\r\n        type: 'Extend',\r\n        accept: function (visitor) {\r\n            this.selector = visitor.visit(this.selector);\r\n        },\r\n        eval: function (context) {\r\n            return new Extend(this.selector.eval(context), this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        clone: function (context) {\r\n            return new Extend(this.selector, this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        // it concatenates (joins) all selectors in selector array\r\n        findSelfSelectors: function (selectors) {\r\n            var selfElements = [], i, selectorElements;\r\n            for (i = 0; i < selectors.length; i++) {\r\n                selectorElements = selectors[i].elements;\r\n                // duplicate the logic in genCSS function inside the selector node.\r\n                // future TODO - move both logics into the selector joiner visitor\r\n                if (i > 0 && selectorElements.length && selectorElements[0].combinator.value === '') {\r\n                    selectorElements[0].combinator.value = ' ';\r\n                }\r\n                selfElements = selfElements.concat(selectors[i].elements);\r\n            }\r\n            this.selfSelectors = [new Selector(selfElements)];\r\n            this.selfSelectors[0].copyVisibilityInfo(this.visibilityInfo());\r\n        }\r\n    });\r\n    Extend.next_id = 0;\n\n    var VariableCall = function (variable, index, currentFileInfo) {\r\n        this.variable = variable;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.allowRoot = true;\r\n    };\r\n    VariableCall.prototype = Object.assign(new Node(), {\r\n        type: 'VariableCall',\r\n        eval: function (context) {\r\n            var rules;\r\n            var detachedRuleset = new Variable(this.variable, this.getIndex(), this.fileInfo()).eval(context);\r\n            var error = new LessError({ message: \"Could not evaluate variable call \" + this.variable });\r\n            if (!detachedRuleset.ruleset) {\r\n                if (detachedRuleset.rules) {\r\n                    rules = detachedRuleset;\r\n                }\r\n                else if (Array.isArray(detachedRuleset)) {\r\n                    rules = new Ruleset('', detachedRuleset);\r\n                }\r\n                else if (Array.isArray(detachedRuleset.value)) {\r\n                    rules = new Ruleset('', detachedRuleset.value);\r\n                }\r\n                else {\r\n                    throw error;\r\n                }\r\n                detachedRuleset = new DetachedRuleset(rules);\r\n            }\r\n            if (detachedRuleset.ruleset) {\r\n                return detachedRuleset.callEval(context);\r\n            }\r\n            throw error;\r\n        }\r\n    });\n\n    var NamespaceValue = function (ruleCall, lookups, index, fileInfo) {\r\n        this.value = ruleCall;\r\n        this.lookups = lookups;\r\n        this._index = index;\r\n        this._fileInfo = fileInfo;\r\n    };\r\n    NamespaceValue.prototype = Object.assign(new Node(), {\r\n        type: 'NamespaceValue',\r\n        eval: function (context) {\r\n            var i, name, rules = this.value.eval(context);\r\n            for (i = 0; i < this.lookups.length; i++) {\r\n                name = this.lookups[i];\r\n                /**\r\n                 * Eval'd DRs return rulesets.\r\n                 * Eval'd mixins return rules, so let's make a ruleset if we need it.\r\n                 * We need to do this because of late parsing of values\r\n                 */\r\n                if (Array.isArray(rules)) {\r\n                    rules = new Ruleset([new Selector()], rules);\r\n                }\r\n                if (name === '') {\r\n                    rules = rules.lastDeclaration();\r\n                }\r\n                else if (name.charAt(0) === '@') {\r\n                    if (name.charAt(1) === '@') {\r\n                        name = \"@\" + new Variable(name.substr(1)).eval(context).value;\r\n                    }\r\n                    if (rules.variables) {\r\n                        rules = rules.variable(name);\r\n                    }\r\n                    if (!rules) {\r\n                        throw { type: 'Name',\r\n                            message: \"variable \" + name + \" not found\",\r\n                            filename: this.fileInfo().filename,\r\n                            index: this.getIndex() };\r\n                    }\r\n                }\r\n                else {\r\n                    if (name.substring(0, 2) === '$@') {\r\n                        name = \"$\" + new Variable(name.substr(1)).eval(context).value;\r\n                    }\r\n                    else {\r\n                        name = name.charAt(0) === '$' ? name : \"$\" + name;\r\n                    }\r\n                    if (rules.properties) {\r\n                        rules = rules.property(name);\r\n                    }\r\n                    if (!rules) {\r\n                        throw { type: 'Name',\r\n                            message: \"property \\\"\" + name.substr(1) + \"\\\" not found\",\r\n                            filename: this.fileInfo().filename,\r\n                            index: this.getIndex() };\r\n                    }\r\n                    // Properties are an array of values, since a ruleset can have multiple props.\r\n                    // We pick the last one (the \"cascaded\" value)\r\n                    rules = rules[rules.length - 1];\r\n                }\r\n                if (rules.value) {\r\n                    rules = rules.eval(context).value;\r\n                }\r\n                if (rules.ruleset) {\r\n                    rules = rules.ruleset.eval(context);\r\n                }\r\n            }\r\n            return rules;\r\n        }\r\n    });\n\n    var Definition = function (name, params, rules, condition, variadic, frames, visibilityInfo) {\r\n        this.name = name || 'anonymous mixin';\r\n        this.selectors = [new Selector([new Element(null, name, false, this._index, this._fileInfo)])];\r\n        this.params = params;\r\n        this.condition = condition;\r\n        this.variadic = variadic;\r\n        this.arity = params.length;\r\n        this.rules = rules;\r\n        this._lookups = {};\r\n        var optionalParameters = [];\r\n        this.required = params.reduce(function (count, p) {\r\n            if (!p.name || (p.name && !p.value)) {\r\n                return count + 1;\r\n            }\r\n            else {\r\n                optionalParameters.push(p.name);\r\n                return count;\r\n            }\r\n        }, 0);\r\n        this.optionalParameters = optionalParameters;\r\n        this.frames = frames;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n    };\r\n    Definition.prototype = Object.assign(new Ruleset(), {\r\n        type: 'MixinDefinition',\r\n        evalFirst: true,\r\n        accept: function (visitor) {\r\n            if (this.params && this.params.length) {\r\n                this.params = visitor.visitArray(this.params);\r\n            }\r\n            this.rules = visitor.visitArray(this.rules);\r\n            if (this.condition) {\r\n                this.condition = visitor.visit(this.condition);\r\n            }\r\n        },\r\n        evalParams: function (context, mixinEnv, args, evaldArguments) {\r\n            /* jshint boss:true */\r\n            var frame = new Ruleset(null, null);\r\n            var varargs;\r\n            var arg;\r\n            var params = copyArray(this.params);\r\n            var i;\r\n            var j;\r\n            var val;\r\n            var name;\r\n            var isNamedFound;\r\n            var argIndex;\r\n            var argsLength = 0;\r\n            if (mixinEnv.frames && mixinEnv.frames[0] && mixinEnv.frames[0].functionRegistry) {\r\n                frame.functionRegistry = mixinEnv.frames[0].functionRegistry.inherit();\r\n            }\r\n            mixinEnv = new contexts.Eval(mixinEnv, [frame].concat(mixinEnv.frames));\r\n            if (args) {\r\n                args = copyArray(args);\r\n                argsLength = args.length;\r\n                for (i = 0; i < argsLength; i++) {\r\n                    arg = args[i];\r\n                    if (name = (arg && arg.name)) {\r\n                        isNamedFound = false;\r\n                        for (j = 0; j < params.length; j++) {\r\n                            if (!evaldArguments[j] && name === params[j].name) {\r\n                                evaldArguments[j] = arg.value.eval(context);\r\n                                frame.prependRule(new Declaration(name, arg.value.eval(context)));\r\n                                isNamedFound = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (isNamedFound) {\r\n                            args.splice(i, 1);\r\n                            i--;\r\n                            continue;\r\n                        }\r\n                        else {\r\n                            throw { type: 'Runtime', message: \"Named argument for \" + this.name + \" \" + args[i].name + \" not found\" };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            argIndex = 0;\r\n            for (i = 0; i < params.length; i++) {\r\n                if (evaldArguments[i]) {\r\n                    continue;\r\n                }\r\n                arg = args && args[argIndex];\r\n                if (name = params[i].name) {\r\n                    if (params[i].variadic) {\r\n                        varargs = [];\r\n                        for (j = argIndex; j < argsLength; j++) {\r\n                            varargs.push(args[j].value.eval(context));\r\n                        }\r\n                        frame.prependRule(new Declaration(name, new Expression(varargs).eval(context)));\r\n                    }\r\n                    else {\r\n                        val = arg && arg.value;\r\n                        if (val) {\r\n                            // This was a mixin call, pass in a detached ruleset of it's eval'd rules\r\n                            if (Array.isArray(val)) {\r\n                                val = new DetachedRuleset(new Ruleset('', val));\r\n                            }\r\n                            else {\r\n                                val = val.eval(context);\r\n                            }\r\n                        }\r\n                        else if (params[i].value) {\r\n                            val = params[i].value.eval(mixinEnv);\r\n                            frame.resetCache();\r\n                        }\r\n                        else {\r\n                            throw { type: 'Runtime', message: \"wrong number of arguments for \" + this.name + \" (\" + argsLength + \" for \" + this.arity + \")\" };\r\n                        }\r\n                        frame.prependRule(new Declaration(name, val));\r\n                        evaldArguments[i] = val;\r\n                    }\r\n                }\r\n                if (params[i].variadic && args) {\r\n                    for (j = argIndex; j < argsLength; j++) {\r\n                        evaldArguments[j] = args[j].value.eval(context);\r\n                    }\r\n                }\r\n                argIndex++;\r\n            }\r\n            return frame;\r\n        },\r\n        makeImportant: function () {\r\n            var rules = !this.rules ? this.rules : this.rules.map(function (r) {\r\n                if (r.makeImportant) {\r\n                    return r.makeImportant(true);\r\n                }\r\n                else {\r\n                    return r;\r\n                }\r\n            });\r\n            var result = new Definition(this.name, this.params, rules, this.condition, this.variadic, this.frames);\r\n            return result;\r\n        },\r\n        eval: function (context) {\r\n            return new Definition(this.name, this.params, this.rules, this.condition, this.variadic, this.frames || copyArray(context.frames));\r\n        },\r\n        evalCall: function (context, args, important) {\r\n            var _arguments = [];\r\n            var mixinFrames = this.frames ? this.frames.concat(context.frames) : context.frames;\r\n            var frame = this.evalParams(context, new contexts.Eval(context, mixinFrames), args, _arguments);\r\n            var rules;\r\n            var ruleset;\r\n            frame.prependRule(new Declaration('@arguments', new Expression(_arguments).eval(context)));\r\n            rules = copyArray(this.rules);\r\n            ruleset = new Ruleset(null, rules);\r\n            ruleset.originalRuleset = this;\r\n            ruleset = ruleset.eval(new contexts.Eval(context, [this, frame].concat(mixinFrames)));\r\n            if (important) {\r\n                ruleset = ruleset.makeImportant();\r\n            }\r\n            return ruleset;\r\n        },\r\n        matchCondition: function (args, context) {\r\n            if (this.condition && !this.condition.eval(new contexts.Eval(context, [this.evalParams(context, /* the parameter variables */ new contexts.Eval(context, this.frames ? this.frames.concat(context.frames) : context.frames), args, [])]\r\n                .concat(this.frames || []) // the parent namespace/mixin frames\r\n                .concat(context.frames)))) { // the current environment frames\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        matchArgs: function (args, context) {\r\n            var allArgsCnt = (args && args.length) || 0;\r\n            var len;\r\n            var optionalParameters = this.optionalParameters;\r\n            var requiredArgsCnt = !args ? 0 : args.reduce(function (count, p) {\r\n                if (optionalParameters.indexOf(p.name) < 0) {\r\n                    return count + 1;\r\n                }\r\n                else {\r\n                    return count;\r\n                }\r\n            }, 0);\r\n            if (!this.variadic) {\r\n                if (requiredArgsCnt < this.required) {\r\n                    return false;\r\n                }\r\n                if (allArgsCnt > this.params.length) {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                if (requiredArgsCnt < (this.required - 1)) {\r\n                    return false;\r\n                }\r\n            }\r\n            // check patterns\r\n            len = Math.min(requiredArgsCnt, this.arity);\r\n            for (var i = 0; i < len; i++) {\r\n                if (!this.params[i].name && !this.params[i].variadic) {\r\n                    if (args[i].value.eval(context).toCSS() != this.params[i].value.eval(context).toCSS()) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    });\n\n    var MixinCall = function (elements, args, index, currentFileInfo, important) {\r\n        this.selector = new Selector(elements);\r\n        this.arguments = args || [];\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.important = important;\r\n        this.allowRoot = true;\r\n        this.setParent(this.selector, this);\r\n    };\r\n    MixinCall.prototype = Object.assign(new Node(), {\r\n        type: 'MixinCall',\r\n        accept: function (visitor) {\r\n            if (this.selector) {\r\n                this.selector = visitor.visit(this.selector);\r\n            }\r\n            if (this.arguments.length) {\r\n                this.arguments = visitor.visitArray(this.arguments);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var mixins;\r\n            var mixin;\r\n            var mixinPath;\r\n            var args = [];\r\n            var arg;\r\n            var argValue;\r\n            var rules = [];\r\n            var match = false;\r\n            var i;\r\n            var m;\r\n            var f;\r\n            var isRecursive;\r\n            var isOneFound;\r\n            var candidates = [];\r\n            var candidate;\r\n            var conditionResult = [];\r\n            var defaultResult;\r\n            var defFalseEitherCase = -1;\r\n            var defNone = 0;\r\n            var defTrue = 1;\r\n            var defFalse = 2;\r\n            var count;\r\n            var originalRuleset;\r\n            var noArgumentsFilter;\r\n            this.selector = this.selector.eval(context);\r\n            function calcDefGroup(mixin, mixinPath) {\r\n                var f, p, namespace;\r\n                for (f = 0; f < 2; f++) {\r\n                    conditionResult[f] = true;\r\n                    defaultFunc.value(f);\r\n                    for (p = 0; p < mixinPath.length && conditionResult[f]; p++) {\r\n                        namespace = mixinPath[p];\r\n                        if (namespace.matchCondition) {\r\n                            conditionResult[f] = conditionResult[f] && namespace.matchCondition(null, context);\r\n                        }\r\n                    }\r\n                    if (mixin.matchCondition) {\r\n                        conditionResult[f] = conditionResult[f] && mixin.matchCondition(args, context);\r\n                    }\r\n                }\r\n                if (conditionResult[0] || conditionResult[1]) {\r\n                    if (conditionResult[0] != conditionResult[1]) {\r\n                        return conditionResult[1] ?\r\n                            defTrue : defFalse;\r\n                    }\r\n                    return defNone;\r\n                }\r\n                return defFalseEitherCase;\r\n            }\r\n            for (i = 0; i < this.arguments.length; i++) {\r\n                arg = this.arguments[i];\r\n                argValue = arg.value.eval(context);\r\n                if (arg.expand && Array.isArray(argValue.value)) {\r\n                    argValue = argValue.value;\r\n                    for (m = 0; m < argValue.length; m++) {\r\n                        args.push({ value: argValue[m] });\r\n                    }\r\n                }\r\n                else {\r\n                    args.push({ name: arg.name, value: argValue });\r\n                }\r\n            }\r\n            noArgumentsFilter = function (rule) { return rule.matchArgs(null, context); };\r\n            for (i = 0; i < context.frames.length; i++) {\r\n                if ((mixins = context.frames[i].find(this.selector, null, noArgumentsFilter)).length > 0) {\r\n                    isOneFound = true;\r\n                    // To make `default()` function independent of definition order we have two \"subpasses\" here.\r\n                    // At first we evaluate each guard *twice* (with `default() == true` and `default() == false`),\r\n                    // and build candidate list with corresponding flags. Then, when we know all possible matches,\r\n                    // we make a final decision.\r\n                    for (m = 0; m < mixins.length; m++) {\r\n                        mixin = mixins[m].rule;\r\n                        mixinPath = mixins[m].path;\r\n                        isRecursive = false;\r\n                        for (f = 0; f < context.frames.length; f++) {\r\n                            if ((!(mixin instanceof Definition)) && mixin === (context.frames[f].originalRuleset || context.frames[f])) {\r\n                                isRecursive = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (isRecursive) {\r\n                            continue;\r\n                        }\r\n                        if (mixin.matchArgs(args, context)) {\r\n                            candidate = { mixin: mixin, group: calcDefGroup(mixin, mixinPath) };\r\n                            if (candidate.group !== defFalseEitherCase) {\r\n                                candidates.push(candidate);\r\n                            }\r\n                            match = true;\r\n                        }\r\n                    }\r\n                    defaultFunc.reset();\r\n                    count = [0, 0, 0];\r\n                    for (m = 0; m < candidates.length; m++) {\r\n                        count[candidates[m].group]++;\r\n                    }\r\n                    if (count[defNone] > 0) {\r\n                        defaultResult = defFalse;\r\n                    }\r\n                    else {\r\n                        defaultResult = defTrue;\r\n                        if ((count[defTrue] + count[defFalse]) > 1) {\r\n                            throw { type: 'Runtime',\r\n                                message: \"Ambiguous use of `default()` found when matching for `\" + this.format(args) + \"`\",\r\n                                index: this.getIndex(), filename: this.fileInfo().filename };\r\n                        }\r\n                    }\r\n                    for (m = 0; m < candidates.length; m++) {\r\n                        candidate = candidates[m].group;\r\n                        if ((candidate === defNone) || (candidate === defaultResult)) {\r\n                            try {\r\n                                mixin = candidates[m].mixin;\r\n                                if (!(mixin instanceof Definition)) {\r\n                                    originalRuleset = mixin.originalRuleset || mixin;\r\n                                    mixin = new Definition('', [], mixin.rules, null, false, null, originalRuleset.visibilityInfo());\r\n                                    mixin.originalRuleset = originalRuleset;\r\n                                }\r\n                                var newRules = mixin.evalCall(context, args, this.important).rules;\r\n                                this._setVisibilityToReplacement(newRules);\r\n                                Array.prototype.push.apply(rules, newRules);\r\n                            }\r\n                            catch (e) {\r\n                                throw { message: e.message, index: this.getIndex(), filename: this.fileInfo().filename, stack: e.stack };\r\n                            }\r\n                        }\r\n                    }\r\n                    if (match) {\r\n                        return rules;\r\n                    }\r\n                }\r\n            }\r\n            if (isOneFound) {\r\n                throw { type: 'Runtime',\r\n                    message: \"No matching definition was found for `\" + this.format(args) + \"`\",\r\n                    index: this.getIndex(), filename: this.fileInfo().filename };\r\n            }\r\n            else {\r\n                throw { type: 'Name',\r\n                    message: this.selector.toCSS().trim() + \" is undefined\",\r\n                    index: this.getIndex(), filename: this.fileInfo().filename };\r\n            }\r\n        },\r\n        _setVisibilityToReplacement: function (replacement) {\r\n            var i, rule;\r\n            if (this.blocksVisibility()) {\r\n                for (i = 0; i < replacement.length; i++) {\r\n                    rule = replacement[i];\r\n                    rule.addVisibilityBlock();\r\n                }\r\n            }\r\n        },\r\n        format: function (args) {\r\n            return this.selector.toCSS().trim() + \"(\" + (args ? args.map(function (a) {\r\n                var argValue = '';\r\n                if (a.name) {\r\n                    argValue += a.name + \":\";\r\n                }\r\n                if (a.value.toCSS) {\r\n                    argValue += a.value.toCSS();\r\n                }\r\n                else {\r\n                    argValue += '???';\r\n                }\r\n                return argValue;\r\n            }).join(', ') : '') + \")\";\r\n        }\r\n    });\n\n    var tree = {\r\n        Node: Node,\r\n        Color: Color,\r\n        AtRule: AtRule,\r\n        DetachedRuleset: DetachedRuleset,\r\n        Operation: Operation,\r\n        Dimension: Dimension,\r\n        Unit: Unit,\r\n        Keyword: Keyword,\r\n        Variable: Variable,\r\n        Property: Property,\r\n        Ruleset: Ruleset,\r\n        Element: Element,\r\n        Attribute: Attribute,\r\n        Combinator: Combinator,\r\n        Selector: Selector,\r\n        Quoted: Quoted,\r\n        Expression: Expression,\r\n        Declaration: Declaration,\r\n        Call: Call,\r\n        URL: URL,\r\n        Import: Import,\r\n        Comment: Comment,\r\n        Anonymous: Anonymous,\r\n        Value: Value,\r\n        JavaScript: JavaScript,\r\n        Assignment: Assignment,\r\n        Condition: Condition,\r\n        Paren: Paren,\r\n        Media: Media,\r\n        UnicodeDescriptor: UnicodeDescriptor,\r\n        Negative: Negative,\r\n        Extend: Extend,\r\n        VariableCall: VariableCall,\r\n        NamespaceValue: NamespaceValue,\r\n        mixin: {\r\n            Call: MixinCall,\r\n            Definition: Definition\r\n        }\r\n    };\n\n    var AbstractFileManager = /** @class */ (function () {\r\n        function AbstractFileManager() {\r\n        }\r\n        AbstractFileManager.prototype.getPath = function (filename) {\r\n            var j = filename.lastIndexOf('?');\r\n            if (j > 0) {\r\n                filename = filename.slice(0, j);\r\n            }\r\n            j = filename.lastIndexOf('/');\r\n            if (j < 0) {\r\n                j = filename.lastIndexOf('\\\\');\r\n            }\r\n            if (j < 0) {\r\n                return '';\r\n            }\r\n            return filename.slice(0, j + 1);\r\n        };\r\n        AbstractFileManager.prototype.tryAppendExtension = function (path, ext) {\r\n            return /(\\.[a-z]*$)|([\\?;].*)$/.test(path) ? path : path + ext;\r\n        };\r\n        AbstractFileManager.prototype.tryAppendLessExtension = function (path) {\r\n            return this.tryAppendExtension(path, '.less');\r\n        };\r\n        AbstractFileManager.prototype.supportsSync = function () {\r\n            return false;\r\n        };\r\n        AbstractFileManager.prototype.alwaysMakePathsAbsolute = function () {\r\n            return false;\r\n        };\r\n        AbstractFileManager.prototype.isPathAbsolute = function (filename) {\r\n            return (/^(?:[a-z-]+:|\\/|\\\\|#)/i).test(filename);\r\n        };\r\n        // TODO: pull out / replace?\r\n        AbstractFileManager.prototype.join = function (basePath, laterPath) {\r\n            if (!basePath) {\r\n                return laterPath;\r\n            }\r\n            return basePath + laterPath;\r\n        };\r\n        AbstractFileManager.prototype.pathDiff = function (url, baseUrl) {\r\n            // diff between two paths to create a relative path\r\n            var urlParts = this.extractUrlParts(url);\r\n            var baseUrlParts = this.extractUrlParts(baseUrl);\r\n            var i;\r\n            var max;\r\n            var urlDirectories;\r\n            var baseUrlDirectories;\r\n            var diff = '';\r\n            if (urlParts.hostPart !== baseUrlParts.hostPart) {\r\n                return '';\r\n            }\r\n            max = Math.max(baseUrlParts.directories.length, urlParts.directories.length);\r\n            for (i = 0; i < max; i++) {\r\n                if (baseUrlParts.directories[i] !== urlParts.directories[i]) {\r\n                    break;\r\n                }\r\n            }\r\n            baseUrlDirectories = baseUrlParts.directories.slice(i);\r\n            urlDirectories = urlParts.directories.slice(i);\r\n            for (i = 0; i < baseUrlDirectories.length - 1; i++) {\r\n                diff += '../';\r\n            }\r\n            for (i = 0; i < urlDirectories.length - 1; i++) {\r\n                diff += urlDirectories[i] + \"/\";\r\n            }\r\n            return diff;\r\n        };\r\n        // helper function, not part of API\r\n        AbstractFileManager.prototype.extractUrlParts = function (url, baseUrl) {\r\n            // urlParts[1] = protocol://hostname/ OR /\r\n            // urlParts[2] = / if path relative to host base\r\n            // urlParts[3] = directories\r\n            // urlParts[4] = filename\r\n            // urlParts[5] = parameters\r\n            var urlPartsRegex = /^((?:[a-z-]+:)?\\/{2}(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$/i;\r\n            var urlParts = url.match(urlPartsRegex);\r\n            var returner = {};\r\n            var rawDirectories = [];\r\n            var directories = [];\r\n            var i;\r\n            var baseUrlParts;\r\n            if (!urlParts) {\r\n                throw new Error(\"Could not parse sheet href - '\" + url + \"'\");\r\n            }\r\n            // Stylesheets in IE don't always return the full path\r\n            if (baseUrl && (!urlParts[1] || urlParts[2])) {\r\n                baseUrlParts = baseUrl.match(urlPartsRegex);\r\n                if (!baseUrlParts) {\r\n                    throw new Error(\"Could not parse page url - '\" + baseUrl + \"'\");\r\n                }\r\n                urlParts[1] = urlParts[1] || baseUrlParts[1] || '';\r\n                if (!urlParts[2]) {\r\n                    urlParts[3] = baseUrlParts[3] + urlParts[3];\r\n                }\r\n            }\r\n            if (urlParts[3]) {\r\n                rawDirectories = urlParts[3].replace(/\\\\/g, '/').split('/');\r\n                // collapse '..' and skip '.'\r\n                for (i = 0; i < rawDirectories.length; i++) {\r\n                    if (rawDirectories[i] === '..') {\r\n                        directories.pop();\r\n                    }\r\n                    else if (rawDirectories[i] !== '.') {\r\n                        directories.push(rawDirectories[i]);\r\n                    }\r\n                }\r\n            }\r\n            returner.hostPart = urlParts[1];\r\n            returner.directories = directories;\r\n            returner.rawPath = (urlParts[1] || '') + rawDirectories.join('/');\r\n            returner.path = (urlParts[1] || '') + directories.join('/');\r\n            returner.filename = urlParts[4];\r\n            returner.fileUrl = returner.path + (urlParts[4] || '');\r\n            returner.url = returner.fileUrl + (urlParts[5] || '');\r\n            return returner;\r\n        };\r\n        return AbstractFileManager;\r\n    }());\n\n    var AbstractPluginLoader = /** @class */ (function () {\r\n        function AbstractPluginLoader() {\r\n            // Implemented by Node.js plugin loader\r\n            this.require = function () {\r\n                return null;\r\n            };\r\n        }\r\n        AbstractPluginLoader.prototype.evalPlugin = function (contents, context, imports, pluginOptions, fileInfo) {\r\n            var loader, registry, pluginObj, localModule, pluginManager, filename, result;\r\n            pluginManager = context.pluginManager;\r\n            if (fileInfo) {\r\n                if (typeof fileInfo === 'string') {\r\n                    filename = fileInfo;\r\n                }\r\n                else {\r\n                    filename = fileInfo.filename;\r\n                }\r\n            }\r\n            var shortname = (new this.less.FileManager()).extractUrlParts(filename).filename;\r\n            if (filename) {\r\n                pluginObj = pluginManager.get(filename);\r\n                if (pluginObj) {\r\n                    result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                    if (result) {\r\n                        return result;\r\n                    }\r\n                    try {\r\n                        if (pluginObj.use) {\r\n                            pluginObj.use.call(this.context, pluginObj);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        e.message = e.message || 'Error during @plugin call';\r\n                        return new LessError(e, imports, filename);\r\n                    }\r\n                    return pluginObj;\r\n                }\r\n            }\r\n            localModule = {\r\n                exports: {},\r\n                pluginManager: pluginManager,\r\n                fileInfo: fileInfo\r\n            };\r\n            registry = functionRegistry.create();\r\n            var registerPlugin = function (obj) {\r\n                pluginObj = obj;\r\n            };\r\n            try {\r\n                loader = new Function('module', 'require', 'registerPlugin', 'functions', 'tree', 'less', 'fileInfo', contents);\r\n                loader(localModule, this.require(filename), registerPlugin, registry, this.less.tree, this.less, fileInfo);\r\n            }\r\n            catch (e) {\r\n                return new LessError(e, imports, filename);\r\n            }\r\n            if (!pluginObj) {\r\n                pluginObj = localModule.exports;\r\n            }\r\n            pluginObj = this.validatePlugin(pluginObj, filename, shortname);\r\n            if (pluginObj instanceof LessError) {\r\n                return pluginObj;\r\n            }\r\n            if (pluginObj) {\r\n                pluginObj.imports = imports;\r\n                pluginObj.filename = filename;\r\n                // For < 3.x (or unspecified minVersion) - setOptions() before install()\r\n                if (!pluginObj.minVersion || this.compareVersion('3.0.0', pluginObj.minVersion) < 0) {\r\n                    result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                    if (result) {\r\n                        return result;\r\n                    }\r\n                }\r\n                // Run on first load\r\n                pluginManager.addPlugin(pluginObj, fileInfo.filename, registry);\r\n                pluginObj.functions = registry.getLocalFunctions();\r\n                // Need to call setOptions again because the pluginObj might have functions\r\n                result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                if (result) {\r\n                    return result;\r\n                }\r\n                // Run every @plugin call\r\n                try {\r\n                    if (pluginObj.use) {\r\n                        pluginObj.use.call(this.context, pluginObj);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    e.message = e.message || 'Error during @plugin call';\r\n                    return new LessError(e, imports, filename);\r\n                }\r\n            }\r\n            else {\r\n                return new LessError({ message: 'Not a valid plugin' }, imports, filename);\r\n            }\r\n            return pluginObj;\r\n        };\r\n        AbstractPluginLoader.prototype.trySetOptions = function (plugin, filename, name, options) {\r\n            if (options && !plugin.setOptions) {\r\n                return new LessError({\r\n                    message: \"Options have been provided but the plugin \" + name + \" does not support any options.\"\r\n                });\r\n            }\r\n            try {\r\n                plugin.setOptions && plugin.setOptions(options);\r\n            }\r\n            catch (e) {\r\n                return new LessError(e);\r\n            }\r\n        };\r\n        AbstractPluginLoader.prototype.validatePlugin = function (plugin, filename, name) {\r\n            if (plugin) {\r\n                // support plugins being a function\r\n                // so that the plugin can be more usable programmatically\r\n                if (typeof plugin === 'function') {\r\n                    plugin = new plugin();\r\n                }\r\n                if (plugin.minVersion) {\r\n                    if (this.compareVersion(plugin.minVersion, this.less.version) < 0) {\r\n                        return new LessError({\r\n                            message: \"Plugin \" + name + \" requires version \" + this.versionToString(plugin.minVersion)\r\n                        });\r\n                    }\r\n                }\r\n                return plugin;\r\n            }\r\n            return null;\r\n        };\r\n        AbstractPluginLoader.prototype.compareVersion = function (aVersion, bVersion) {\r\n            if (typeof aVersion === 'string') {\r\n                aVersion = aVersion.match(/^(\\d+)\\.?(\\d+)?\\.?(\\d+)?/);\r\n                aVersion.shift();\r\n            }\r\n            for (var i = 0; i < aVersion.length; i++) {\r\n                if (aVersion[i] !== bVersion[i]) {\r\n                    return parseInt(aVersion[i]) > parseInt(bVersion[i]) ? -1 : 1;\r\n                }\r\n            }\r\n            return 0;\r\n        };\r\n        AbstractPluginLoader.prototype.versionToString = function (version) {\r\n            var versionString = '';\r\n            for (var i = 0; i < version.length; i++) {\r\n                versionString += (versionString ? '.' : '') + version[i];\r\n            }\r\n            return versionString;\r\n        };\r\n        AbstractPluginLoader.prototype.printUsage = function (plugins) {\r\n            for (var i = 0; i < plugins.length; i++) {\r\n                var plugin = plugins[i];\r\n                if (plugin.printUsage) {\r\n                    plugin.printUsage();\r\n                }\r\n            }\r\n        };\r\n        return AbstractPluginLoader;\r\n    }());\n\n    var _visitArgs = { visitDeeper: true };\r\n    var _hasIndexed = false;\r\n    function _noop(node) {\r\n        return node;\r\n    }\r\n    function indexNodeTypes(parent, ticker) {\r\n        // add .typeIndex to tree node types for lookup table\r\n        var key, child;\r\n        for (key in parent) {\r\n            /* eslint guard-for-in: 0 */\r\n            child = parent[key];\r\n            switch (typeof child) {\r\n                case 'function':\r\n                    // ignore bound functions directly on tree which do not have a prototype\r\n                    // or aren't nodes\r\n                    if (child.prototype && child.prototype.type) {\r\n                        child.prototype.typeIndex = ticker++;\r\n                    }\r\n                    break;\r\n                case 'object':\r\n                    ticker = indexNodeTypes(child, ticker);\r\n                    break;\r\n            }\r\n        }\r\n        return ticker;\r\n    }\r\n    var Visitor = /** @class */ (function () {\r\n        function Visitor(implementation) {\r\n            this._implementation = implementation;\r\n            this._visitInCache = {};\r\n            this._visitOutCache = {};\r\n            if (!_hasIndexed) {\r\n                indexNodeTypes(tree, 1);\r\n                _hasIndexed = true;\r\n            }\r\n        }\r\n        Visitor.prototype.visit = function (node) {\r\n            if (!node) {\r\n                return node;\r\n            }\r\n            var nodeTypeIndex = node.typeIndex;\r\n            if (!nodeTypeIndex) {\r\n                // MixinCall args aren't a node type?\r\n                if (node.value && node.value.typeIndex) {\r\n                    this.visit(node.value);\r\n                }\r\n                return node;\r\n            }\r\n            var impl = this._implementation;\r\n            var func = this._visitInCache[nodeTypeIndex];\r\n            var funcOut = this._visitOutCache[nodeTypeIndex];\r\n            var visitArgs = _visitArgs;\r\n            var fnName;\r\n            visitArgs.visitDeeper = true;\r\n            if (!func) {\r\n                fnName = \"visit\" + node.type;\r\n                func = impl[fnName] || _noop;\r\n                funcOut = impl[fnName + \"Out\"] || _noop;\r\n                this._visitInCache[nodeTypeIndex] = func;\r\n                this._visitOutCache[nodeTypeIndex] = funcOut;\r\n            }\r\n            if (func !== _noop) {\r\n                var newNode = func.call(impl, node, visitArgs);\r\n                if (node && impl.isReplacing) {\r\n                    node = newNode;\r\n                }\r\n            }\r\n            if (visitArgs.visitDeeper && node) {\r\n                if (node.length) {\r\n                    for (var i = 0, cnt = node.length; i < cnt; i++) {\r\n                        if (node[i].accept) {\r\n                            node[i].accept(this);\r\n                        }\r\n                    }\r\n                }\r\n                else if (node.accept) {\r\n                    node.accept(this);\r\n                }\r\n            }\r\n            if (funcOut != _noop) {\r\n                funcOut.call(impl, node);\r\n            }\r\n            return node;\r\n        };\r\n        Visitor.prototype.visitArray = function (nodes, nonReplacing) {\r\n            if (!nodes) {\r\n                return nodes;\r\n            }\r\n            var cnt = nodes.length;\r\n            var i;\r\n            // Non-replacing\r\n            if (nonReplacing || !this._implementation.isReplacing) {\r\n                for (i = 0; i < cnt; i++) {\r\n                    this.visit(nodes[i]);\r\n                }\r\n                return nodes;\r\n            }\r\n            // Replacing\r\n            var out = [];\r\n            for (i = 0; i < cnt; i++) {\r\n                var evald = this.visit(nodes[i]);\r\n                if (evald === undefined) {\r\n                    continue;\r\n                }\r\n                if (!evald.splice) {\r\n                    out.push(evald);\r\n                }\r\n                else if (evald.length) {\r\n                    this.flatten(evald, out);\r\n                }\r\n            }\r\n            return out;\r\n        };\r\n        Visitor.prototype.flatten = function (arr, out) {\r\n            if (!out) {\r\n                out = [];\r\n            }\r\n            var cnt, i, item, nestedCnt, j, nestedItem;\r\n            for (i = 0, cnt = arr.length; i < cnt; i++) {\r\n                item = arr[i];\r\n                if (item === undefined) {\r\n                    continue;\r\n                }\r\n                if (!item.splice) {\r\n                    out.push(item);\r\n                    continue;\r\n                }\r\n                for (j = 0, nestedCnt = item.length; j < nestedCnt; j++) {\r\n                    nestedItem = item[j];\r\n                    if (nestedItem === undefined) {\r\n                        continue;\r\n                    }\r\n                    if (!nestedItem.splice) {\r\n                        out.push(nestedItem);\r\n                    }\r\n                    else if (nestedItem.length) {\r\n                        this.flatten(nestedItem, out);\r\n                    }\r\n                }\r\n            }\r\n            return out;\r\n        };\r\n        return Visitor;\r\n    }());\n\n    var ImportSequencer = /** @class */ (function () {\r\n        function ImportSequencer(onSequencerEmpty) {\r\n            this.imports = [];\r\n            this.variableImports = [];\r\n            this._onSequencerEmpty = onSequencerEmpty;\r\n            this._currentDepth = 0;\r\n        }\r\n        ImportSequencer.prototype.addImport = function (callback) {\r\n            var importSequencer = this, importItem = {\r\n                callback: callback,\r\n                args: null,\r\n                isReady: false\r\n            };\r\n            this.imports.push(importItem);\r\n            return function () {\r\n                importItem.args = Array.prototype.slice.call(arguments, 0);\r\n                importItem.isReady = true;\r\n                importSequencer.tryRun();\r\n            };\r\n        };\r\n        ImportSequencer.prototype.addVariableImport = function (callback) {\r\n            this.variableImports.push(callback);\r\n        };\r\n        ImportSequencer.prototype.tryRun = function () {\r\n            this._currentDepth++;\r\n            try {\r\n                while (true) {\r\n                    while (this.imports.length > 0) {\r\n                        var importItem = this.imports[0];\r\n                        if (!importItem.isReady) {\r\n                            return;\r\n                        }\r\n                        this.imports = this.imports.slice(1);\r\n                        importItem.callback.apply(null, importItem.args);\r\n                    }\r\n                    if (this.variableImports.length === 0) {\r\n                        break;\r\n                    }\r\n                    var variableImport = this.variableImports[0];\r\n                    this.variableImports = this.variableImports.slice(1);\r\n                    variableImport();\r\n                }\r\n            }\r\n            finally {\r\n                this._currentDepth--;\r\n            }\r\n            if (this._currentDepth === 0 && this._onSequencerEmpty) {\r\n                this._onSequencerEmpty();\r\n            }\r\n        };\r\n        return ImportSequencer;\r\n    }());\n\n    var ImportVisitor = function (importer, finish) {\r\n        this._visitor = new Visitor(this);\r\n        this._importer = importer;\r\n        this._finish = finish;\r\n        this.context = new contexts.Eval();\r\n        this.importCount = 0;\r\n        this.onceFileDetectionMap = {};\r\n        this.recursionDetector = {};\r\n        this._sequencer = new ImportSequencer(this._onSequencerEmpty.bind(this));\r\n    };\r\n    ImportVisitor.prototype = {\r\n        isReplacing: false,\r\n        run: function (root) {\r\n            try {\r\n                // process the contents\r\n                this._visitor.visit(root);\r\n            }\r\n            catch (e) {\r\n                this.error = e;\r\n            }\r\n            this.isFinished = true;\r\n            this._sequencer.tryRun();\r\n        },\r\n        _onSequencerEmpty: function () {\r\n            if (!this.isFinished) {\r\n                return;\r\n            }\r\n            this._finish(this.error);\r\n        },\r\n        visitImport: function (importNode, visitArgs) {\r\n            var inlineCSS = importNode.options.inline;\r\n            if (!importNode.css || inlineCSS) {\r\n                var context = new contexts.Eval(this.context, copyArray(this.context.frames));\r\n                var importParent = context.frames[0];\r\n                this.importCount++;\r\n                if (importNode.isVariableImport()) {\r\n                    this._sequencer.addVariableImport(this.processImportNode.bind(this, importNode, context, importParent));\r\n                }\r\n                else {\r\n                    this.processImportNode(importNode, context, importParent);\r\n                }\r\n            }\r\n            visitArgs.visitDeeper = false;\r\n        },\r\n        processImportNode: function (importNode, context, importParent) {\r\n            var evaldImportNode;\r\n            var inlineCSS = importNode.options.inline;\r\n            try {\r\n                evaldImportNode = importNode.evalForImport(context);\r\n            }\r\n            catch (e) {\r\n                if (!e.filename) {\r\n                    e.index = importNode.getIndex();\r\n                    e.filename = importNode.fileInfo().filename;\r\n                }\r\n                // attempt to eval properly and treat as css\r\n                importNode.css = true;\r\n                // if that fails, this error will be thrown\r\n                importNode.error = e;\r\n            }\r\n            if (evaldImportNode && (!evaldImportNode.css || inlineCSS)) {\r\n                if (evaldImportNode.options.multiple) {\r\n                    context.importMultiple = true;\r\n                }\r\n                // try appending if we haven't determined if it is css or not\r\n                var tryAppendLessExtension = evaldImportNode.css === undefined;\r\n                for (var i = 0; i < importParent.rules.length; i++) {\r\n                    if (importParent.rules[i] === importNode) {\r\n                        importParent.rules[i] = evaldImportNode;\r\n                        break;\r\n                    }\r\n                }\r\n                var onImported = this.onImported.bind(this, evaldImportNode, context), sequencedOnImported = this._sequencer.addImport(onImported);\r\n                this._importer.push(evaldImportNode.getPath(), tryAppendLessExtension, evaldImportNode.fileInfo(), evaldImportNode.options, sequencedOnImported);\r\n            }\r\n            else {\r\n                this.importCount--;\r\n                if (this.isFinished) {\r\n                    this._sequencer.tryRun();\r\n                }\r\n            }\r\n        },\r\n        onImported: function (importNode, context, e, root, importedAtRoot, fullPath) {\r\n            if (e) {\r\n                if (!e.filename) {\r\n                    e.index = importNode.getIndex();\r\n                    e.filename = importNode.fileInfo().filename;\r\n                }\r\n                this.error = e;\r\n            }\r\n            var importVisitor = this, inlineCSS = importNode.options.inline, isPlugin = importNode.options.isPlugin, isOptional = importNode.options.optional, duplicateImport = importedAtRoot || fullPath in importVisitor.recursionDetector;\r\n            if (!context.importMultiple) {\r\n                if (duplicateImport) {\r\n                    importNode.skip = true;\r\n                }\r\n                else {\r\n                    importNode.skip = function () {\r\n                        if (fullPath in importVisitor.onceFileDetectionMap) {\r\n                            return true;\r\n                        }\r\n                        importVisitor.onceFileDetectionMap[fullPath] = true;\r\n                        return false;\r\n                    };\r\n                }\r\n            }\r\n            if (!fullPath && isOptional) {\r\n                importNode.skip = true;\r\n            }\r\n            if (root) {\r\n                importNode.root = root;\r\n                importNode.importedFilename = fullPath;\r\n                if (!inlineCSS && !isPlugin && (context.importMultiple || !duplicateImport)) {\r\n                    importVisitor.recursionDetector[fullPath] = true;\r\n                    var oldContext = this.context;\r\n                    this.context = context;\r\n                    try {\r\n                        this._visitor.visit(root);\r\n                    }\r\n                    catch (e) {\r\n                        this.error = e;\r\n                    }\r\n                    this.context = oldContext;\r\n                }\r\n            }\r\n            importVisitor.importCount--;\r\n            if (importVisitor.isFinished) {\r\n                importVisitor._sequencer.tryRun();\r\n            }\r\n        },\r\n        visitDeclaration: function (declNode, visitArgs) {\r\n            if (declNode.value.type === 'DetachedRuleset') {\r\n                this.context.frames.unshift(declNode);\r\n            }\r\n            else {\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n        },\r\n        visitDeclarationOut: function (declNode) {\r\n            if (declNode.value.type === 'DetachedRuleset') {\r\n                this.context.frames.shift();\r\n            }\r\n        },\r\n        visitAtRule: function (atRuleNode, visitArgs) {\r\n            this.context.frames.unshift(atRuleNode);\r\n        },\r\n        visitAtRuleOut: function (atRuleNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\r\n            this.context.frames.unshift(mixinDefinitionNode);\r\n        },\r\n        visitMixinDefinitionOut: function (mixinDefinitionNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitRuleset: function (rulesetNode, visitArgs) {\r\n            this.context.frames.unshift(rulesetNode);\r\n        },\r\n        visitRulesetOut: function (rulesetNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitMedia: function (mediaNode, visitArgs) {\r\n            this.context.frames.unshift(mediaNode.rules[0]);\r\n        },\r\n        visitMediaOut: function (mediaNode) {\r\n            this.context.frames.shift();\r\n        }\r\n    };\n\n    var SetTreeVisibilityVisitor = /** @class */ (function () {\r\n        function SetTreeVisibilityVisitor(visible) {\r\n            this.visible = visible;\r\n        }\r\n        SetTreeVisibilityVisitor.prototype.run = function (root) {\r\n            this.visit(root);\r\n        };\r\n        SetTreeVisibilityVisitor.prototype.visitArray = function (nodes) {\r\n            if (!nodes) {\r\n                return nodes;\r\n            }\r\n            var cnt = nodes.length;\r\n            var i;\r\n            for (i = 0; i < cnt; i++) {\r\n                this.visit(nodes[i]);\r\n            }\r\n            return nodes;\r\n        };\r\n        SetTreeVisibilityVisitor.prototype.visit = function (node) {\r\n            if (!node) {\r\n                return node;\r\n            }\r\n            if (node.constructor === Array) {\r\n                return this.visitArray(node);\r\n            }\r\n            if (!node.blocksVisibility || node.blocksVisibility()) {\r\n                return node;\r\n            }\r\n            if (this.visible) {\r\n                node.ensureVisibility();\r\n            }\r\n            else {\r\n                node.ensureInvisibility();\r\n            }\r\n            node.accept(this);\r\n            return node;\r\n        };\r\n        return SetTreeVisibilityVisitor;\r\n    }());\n\n    /* jshint loopfunc:true */\r\n    var ExtendFinderVisitor = /** @class */ (function () {\r\n        function ExtendFinderVisitor() {\r\n            this._visitor = new Visitor(this);\r\n            this.contexts = [];\r\n            this.allExtendsStack = [[]];\r\n        }\r\n        ExtendFinderVisitor.prototype.run = function (root) {\r\n            root = this._visitor.visit(root);\r\n            root.allExtends = this.allExtendsStack[0];\r\n            return root;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            if (rulesetNode.root) {\r\n                return;\r\n            }\r\n            var i;\r\n            var j;\r\n            var extend;\r\n            var allSelectorsExtendList = [];\r\n            var extendList;\r\n            // get &:extend(.a); rules which apply to all selectors in this ruleset\r\n            var rules = rulesetNode.rules, ruleCnt = rules ? rules.length : 0;\r\n            for (i = 0; i < ruleCnt; i++) {\r\n                if (rulesetNode.rules[i] instanceof tree.Extend) {\r\n                    allSelectorsExtendList.push(rules[i]);\r\n                    rulesetNode.extendOnEveryPath = true;\r\n                }\r\n            }\r\n            // now find every selector and apply the extends that apply to all extends\r\n            // and the ones which apply to an individual extend\r\n            var paths = rulesetNode.paths;\r\n            for (i = 0; i < paths.length; i++) {\r\n                var selectorPath = paths[i], selector = selectorPath[selectorPath.length - 1], selExtendList = selector.extendList;\r\n                extendList = selExtendList ? copyArray(selExtendList).concat(allSelectorsExtendList)\r\n                    : allSelectorsExtendList;\r\n                if (extendList) {\r\n                    extendList = extendList.map(function (allSelectorsExtend) {\r\n                        return allSelectorsExtend.clone();\r\n                    });\r\n                }\r\n                for (j = 0; j < extendList.length; j++) {\r\n                    this.foundExtends = true;\r\n                    extend = extendList[j];\r\n                    extend.findSelfSelectors(selectorPath);\r\n                    extend.ruleset = rulesetNode;\r\n                    if (j === 0) {\r\n                        extend.firstExtendOnThisSelectorPath = true;\r\n                    }\r\n                    this.allExtendsStack[this.allExtendsStack.length - 1].push(extend);\r\n                }\r\n            }\r\n            this.contexts.push(rulesetNode.selectors);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitRulesetOut = function (rulesetNode) {\r\n            if (!rulesetNode.root) {\r\n                this.contexts.length = this.contexts.length - 1;\r\n            }\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            mediaNode.allExtends = [];\r\n            this.allExtendsStack.push(mediaNode.allExtends);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMediaOut = function (mediaNode) {\r\n            this.allExtendsStack.length = this.allExtendsStack.length - 1;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            atRuleNode.allExtends = [];\r\n            this.allExtendsStack.push(atRuleNode.allExtends);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\r\n            this.allExtendsStack.length = this.allExtendsStack.length - 1;\r\n        };\r\n        return ExtendFinderVisitor;\r\n    }());\r\n    var ProcessExtendsVisitor = /** @class */ (function () {\r\n        function ProcessExtendsVisitor() {\r\n            this._visitor = new Visitor(this);\r\n        }\r\n        ProcessExtendsVisitor.prototype.run = function (root) {\r\n            var extendFinder = new ExtendFinderVisitor();\r\n            this.extendIndices = {};\r\n            extendFinder.run(root);\r\n            if (!extendFinder.foundExtends) {\r\n                return root;\r\n            }\r\n            root.allExtends = root.allExtends.concat(this.doExtendChaining(root.allExtends, root.allExtends));\r\n            this.allExtendsStack = [root.allExtends];\r\n            var newRoot = this._visitor.visit(root);\r\n            this.checkExtendsForNonMatched(root.allExtends);\r\n            return newRoot;\r\n        };\r\n        ProcessExtendsVisitor.prototype.checkExtendsForNonMatched = function (extendList) {\r\n            var indices = this.extendIndices;\r\n            extendList.filter(function (extend) {\r\n                return !extend.hasFoundMatches && extend.parent_ids.length == 1;\r\n            }).forEach(function (extend) {\r\n                var selector = '_unknown_';\r\n                try {\r\n                    selector = extend.selector.toCSS({});\r\n                }\r\n                catch (_) { }\r\n                if (!indices[extend.index + \" \" + selector]) {\r\n                    indices[extend.index + \" \" + selector] = true;\r\n                    logger$1.warn(\"extend '\" + selector + \"' has no matches\");\r\n                }\r\n            });\r\n        };\r\n        ProcessExtendsVisitor.prototype.doExtendChaining = function (extendsList, extendsListTarget, iterationCount) {\r\n            //\r\n            // chaining is different from normal extension.. if we extend an extend then we are not just copying, altering\r\n            // and pasting the selector we would do normally, but we are also adding an extend with the same target selector\r\n            // this means this new extend can then go and alter other extends\r\n            //\r\n            // this method deals with all the chaining work - without it, extend is flat and doesn't work on other extend selectors\r\n            // this is also the most expensive.. and a match on one selector can cause an extension of a selector we had already\r\n            // processed if we look at each selector at a time, as is done in visitRuleset\r\n            var extendIndex;\r\n            var targetExtendIndex;\r\n            var matches;\r\n            var extendsToAdd = [];\r\n            var newSelector;\r\n            var extendVisitor = this;\r\n            var selectorPath;\r\n            var extend;\r\n            var targetExtend;\r\n            var newExtend;\r\n            iterationCount = iterationCount || 0;\r\n            // loop through comparing every extend with every target extend.\r\n            // a target extend is the one on the ruleset we are looking at copy/edit/pasting in place\r\n            // e.g.  .a:extend(.b) {}  and .b:extend(.c) {} then the first extend extends the second one\r\n            // and the second is the target.\r\n            // the separation into two lists allows us to process a subset of chains with a bigger set, as is the\r\n            // case when processing media queries\r\n            for (extendIndex = 0; extendIndex < extendsList.length; extendIndex++) {\r\n                for (targetExtendIndex = 0; targetExtendIndex < extendsListTarget.length; targetExtendIndex++) {\r\n                    extend = extendsList[extendIndex];\r\n                    targetExtend = extendsListTarget[targetExtendIndex];\r\n                    // look for circular references\r\n                    if (extend.parent_ids.indexOf(targetExtend.object_id) >= 0) {\r\n                        continue;\r\n                    }\r\n                    // find a match in the target extends self selector (the bit before :extend)\r\n                    selectorPath = [targetExtend.selfSelectors[0]];\r\n                    matches = extendVisitor.findMatch(extend, selectorPath);\r\n                    if (matches.length) {\r\n                        extend.hasFoundMatches = true;\r\n                        // we found a match, so for each self selector..\r\n                        extend.selfSelectors.forEach(function (selfSelector) {\r\n                            var info = targetExtend.visibilityInfo();\r\n                            // process the extend as usual\r\n                            newSelector = extendVisitor.extendSelector(matches, selectorPath, selfSelector, extend.isVisible());\r\n                            // but now we create a new extend from it\r\n                            newExtend = new (tree.Extend)(targetExtend.selector, targetExtend.option, 0, targetExtend.fileInfo(), info);\r\n                            newExtend.selfSelectors = newSelector;\r\n                            // add the extend onto the list of extends for that selector\r\n                            newSelector[newSelector.length - 1].extendList = [newExtend];\r\n                            // record that we need to add it.\r\n                            extendsToAdd.push(newExtend);\r\n                            newExtend.ruleset = targetExtend.ruleset;\r\n                            // remember its parents for circular references\r\n                            newExtend.parent_ids = newExtend.parent_ids.concat(targetExtend.parent_ids, extend.parent_ids);\r\n                            // only process the selector once.. if we have :extend(.a,.b) then multiple\r\n                            // extends will look at the same selector path, so when extending\r\n                            // we know that any others will be duplicates in terms of what is added to the css\r\n                            if (targetExtend.firstExtendOnThisSelectorPath) {\r\n                                newExtend.firstExtendOnThisSelectorPath = true;\r\n                                targetExtend.ruleset.paths.push(newSelector);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            if (extendsToAdd.length) {\r\n                // try to detect circular references to stop a stack overflow.\r\n                // may no longer be needed.\r\n                this.extendChainCount++;\r\n                if (iterationCount > 100) {\r\n                    var selectorOne = '{unable to calculate}';\r\n                    var selectorTwo = '{unable to calculate}';\r\n                    try {\r\n                        selectorOne = extendsToAdd[0].selfSelectors[0].toCSS();\r\n                        selectorTwo = extendsToAdd[0].selector.toCSS();\r\n                    }\r\n                    catch (e) { }\r\n                    throw { message: \"extend circular reference detected. One of the circular extends is currently:\" + selectorOne + \":extend(\" + selectorTwo + \")\" };\r\n                }\r\n                // now process the new extends on the existing rules so that we can handle a extending b extending c extending\r\n                // d extending e...\r\n                return extendsToAdd.concat(extendVisitor.doExtendChaining(extendsToAdd, extendsListTarget, iterationCount + 1));\r\n            }\r\n            else {\r\n                return extendsToAdd;\r\n            }\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitDeclaration = function (ruleNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitSelector = function (selectorNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            if (rulesetNode.root) {\r\n                return;\r\n            }\r\n            var matches;\r\n            var pathIndex;\r\n            var extendIndex;\r\n            var allExtends = this.allExtendsStack[this.allExtendsStack.length - 1];\r\n            var selectorsToAdd = [];\r\n            var extendVisitor = this;\r\n            var selectorPath;\r\n            // look at each selector path in the ruleset, find any extend matches and then copy, find and replace\r\n            for (extendIndex = 0; extendIndex < allExtends.length; extendIndex++) {\r\n                for (pathIndex = 0; pathIndex < rulesetNode.paths.length; pathIndex++) {\r\n                    selectorPath = rulesetNode.paths[pathIndex];\r\n                    // extending extends happens initially, before the main pass\r\n                    if (rulesetNode.extendOnEveryPath) {\r\n                        continue;\r\n                    }\r\n                    var extendList = selectorPath[selectorPath.length - 1].extendList;\r\n                    if (extendList && extendList.length) {\r\n                        continue;\r\n                    }\r\n                    matches = this.findMatch(allExtends[extendIndex], selectorPath);\r\n                    if (matches.length) {\r\n                        allExtends[extendIndex].hasFoundMatches = true;\r\n                        allExtends[extendIndex].selfSelectors.forEach(function (selfSelector) {\r\n                            var extendedSelectors;\r\n                            extendedSelectors = extendVisitor.extendSelector(matches, selectorPath, selfSelector, allExtends[extendIndex].isVisible());\r\n                            selectorsToAdd.push(extendedSelectors);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            rulesetNode.paths = rulesetNode.paths.concat(selectorsToAdd);\r\n        };\r\n        ProcessExtendsVisitor.prototype.findMatch = function (extend, haystackSelectorPath) {\r\n            //\r\n            // look through the haystack selector path to try and find the needle - extend.selector\r\n            // returns an array of selector matches that can then be replaced\r\n            //\r\n            var haystackSelectorIndex;\r\n            var hackstackSelector;\r\n            var hackstackElementIndex;\r\n            var haystackElement;\r\n            var targetCombinator;\r\n            var i;\r\n            var extendVisitor = this;\r\n            var needleElements = extend.selector.elements;\r\n            var potentialMatches = [];\r\n            var potentialMatch;\r\n            var matches = [];\r\n            // loop through the haystack elements\r\n            for (haystackSelectorIndex = 0; haystackSelectorIndex < haystackSelectorPath.length; haystackSelectorIndex++) {\r\n                hackstackSelector = haystackSelectorPath[haystackSelectorIndex];\r\n                for (hackstackElementIndex = 0; hackstackElementIndex < hackstackSelector.elements.length; hackstackElementIndex++) {\r\n                    haystackElement = hackstackSelector.elements[hackstackElementIndex];\r\n                    // if we allow elements before our match we can add a potential match every time. otherwise only at the first element.\r\n                    if (extend.allowBefore || (haystackSelectorIndex === 0 && hackstackElementIndex === 0)) {\r\n                        potentialMatches.push({ pathIndex: haystackSelectorIndex, index: hackstackElementIndex, matched: 0,\r\n                            initialCombinator: haystackElement.combinator });\r\n                    }\r\n                    for (i = 0; i < potentialMatches.length; i++) {\r\n                        potentialMatch = potentialMatches[i];\r\n                        // selectors add \" \" onto the first element. When we use & it joins the selectors together, but if we don't\r\n                        // then each selector in haystackSelectorPath has a space before it added in the toCSS phase. so we need to\r\n                        // work out what the resulting combinator will be\r\n                        targetCombinator = haystackElement.combinator.value;\r\n                        if (targetCombinator === '' && hackstackElementIndex === 0) {\r\n                            targetCombinator = ' ';\r\n                        }\r\n                        // if we don't match, null our match to indicate failure\r\n                        if (!extendVisitor.isElementValuesEqual(needleElements[potentialMatch.matched].value, haystackElement.value) ||\r\n                            (potentialMatch.matched > 0 && needleElements[potentialMatch.matched].combinator.value !== targetCombinator)) {\r\n                            potentialMatch = null;\r\n                        }\r\n                        else {\r\n                            potentialMatch.matched++;\r\n                        }\r\n                        // if we are still valid and have finished, test whether we have elements after and whether these are allowed\r\n                        if (potentialMatch) {\r\n                            potentialMatch.finished = potentialMatch.matched === needleElements.length;\r\n                            if (potentialMatch.finished &&\r\n                                (!extend.allowAfter &&\r\n                                    (hackstackElementIndex + 1 < hackstackSelector.elements.length || haystackSelectorIndex + 1 < haystackSelectorPath.length))) {\r\n                                potentialMatch = null;\r\n                            }\r\n                        }\r\n                        // if null we remove, if not, we are still valid, so either push as a valid match or continue\r\n                        if (potentialMatch) {\r\n                            if (potentialMatch.finished) {\r\n                                potentialMatch.length = needleElements.length;\r\n                                potentialMatch.endPathIndex = haystackSelectorIndex;\r\n                                potentialMatch.endPathElementIndex = hackstackElementIndex + 1; // index after end of match\r\n                                potentialMatches.length = 0; // we don't allow matches to overlap, so start matching again\r\n                                matches.push(potentialMatch);\r\n                            }\r\n                        }\r\n                        else {\r\n                            potentialMatches.splice(i, 1);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return matches;\r\n        };\r\n        ProcessExtendsVisitor.prototype.isElementValuesEqual = function (elementValue1, elementValue2) {\r\n            if (typeof elementValue1 === 'string' || typeof elementValue2 === 'string') {\r\n                return elementValue1 === elementValue2;\r\n            }\r\n            if (elementValue1 instanceof tree.Attribute) {\r\n                if (elementValue1.op !== elementValue2.op || elementValue1.key !== elementValue2.key) {\r\n                    return false;\r\n                }\r\n                if (!elementValue1.value || !elementValue2.value) {\r\n                    if (elementValue1.value || elementValue2.value) {\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                }\r\n                elementValue1 = elementValue1.value.value || elementValue1.value;\r\n                elementValue2 = elementValue2.value.value || elementValue2.value;\r\n                return elementValue1 === elementValue2;\r\n            }\r\n            elementValue1 = elementValue1.value;\r\n            elementValue2 = elementValue2.value;\r\n            if (elementValue1 instanceof tree.Selector) {\r\n                if (!(elementValue2 instanceof tree.Selector) || elementValue1.elements.length !== elementValue2.elements.length) {\r\n                    return false;\r\n                }\r\n                for (var i = 0; i < elementValue1.elements.length; i++) {\r\n                    if (elementValue1.elements[i].combinator.value !== elementValue2.elements[i].combinator.value) {\r\n                        if (i !== 0 || (elementValue1.elements[i].combinator.value || ' ') !== (elementValue2.elements[i].combinator.value || ' ')) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    if (!this.isElementValuesEqual(elementValue1.elements[i].value, elementValue2.elements[i].value)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.extendSelector = function (matches, selectorPath, replacementSelector, isVisible) {\r\n            // for a set of matches, replace each match with the replacement selector\r\n            var currentSelectorPathIndex = 0, currentSelectorPathElementIndex = 0, path = [], matchIndex, selector, firstElement, match, newElements;\r\n            for (matchIndex = 0; matchIndex < matches.length; matchIndex++) {\r\n                match = matches[matchIndex];\r\n                selector = selectorPath[match.pathIndex];\r\n                firstElement = new tree.Element(match.initialCombinator, replacementSelector.elements[0].value, replacementSelector.elements[0].isVariable, replacementSelector.elements[0].getIndex(), replacementSelector.elements[0].fileInfo());\r\n                if (match.pathIndex > currentSelectorPathIndex && currentSelectorPathElementIndex > 0) {\r\n                    path[path.length - 1].elements = path[path.length - 1]\r\n                        .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\r\n                    currentSelectorPathElementIndex = 0;\r\n                    currentSelectorPathIndex++;\r\n                }\r\n                newElements = selector.elements\r\n                    .slice(currentSelectorPathElementIndex, match.index)\r\n                    .concat([firstElement])\r\n                    .concat(replacementSelector.elements.slice(1));\r\n                if (currentSelectorPathIndex === match.pathIndex && matchIndex > 0) {\r\n                    path[path.length - 1].elements =\r\n                        path[path.length - 1].elements.concat(newElements);\r\n                }\r\n                else {\r\n                    path = path.concat(selectorPath.slice(currentSelectorPathIndex, match.pathIndex));\r\n                    path.push(new tree.Selector(newElements));\r\n                }\r\n                currentSelectorPathIndex = match.endPathIndex;\r\n                currentSelectorPathElementIndex = match.endPathElementIndex;\r\n                if (currentSelectorPathElementIndex >= selectorPath[currentSelectorPathIndex].elements.length) {\r\n                    currentSelectorPathElementIndex = 0;\r\n                    currentSelectorPathIndex++;\r\n                }\r\n            }\r\n            if (currentSelectorPathIndex < selectorPath.length && currentSelectorPathElementIndex > 0) {\r\n                path[path.length - 1].elements = path[path.length - 1]\r\n                    .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\r\n                currentSelectorPathIndex++;\r\n            }\r\n            path = path.concat(selectorPath.slice(currentSelectorPathIndex, selectorPath.length));\r\n            path = path.map(function (currentValue) {\r\n                // we can re-use elements here, because the visibility property matters only for selectors\r\n                var derived = currentValue.createDerived(currentValue.elements);\r\n                if (isVisible) {\r\n                    derived.ensureVisibility();\r\n                }\r\n                else {\r\n                    derived.ensureInvisibility();\r\n                }\r\n                return derived;\r\n            });\r\n            return path;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            var newAllExtends = mediaNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\r\n            newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, mediaNode.allExtends));\r\n            this.allExtendsStack.push(newAllExtends);\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMediaOut = function (mediaNode) {\r\n            var lastIndex = this.allExtendsStack.length - 1;\r\n            this.allExtendsStack.length = lastIndex;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            var newAllExtends = atRuleNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\r\n            newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, atRuleNode.allExtends));\r\n            this.allExtendsStack.push(newAllExtends);\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\r\n            var lastIndex = this.allExtendsStack.length - 1;\r\n            this.allExtendsStack.length = lastIndex;\r\n        };\r\n        return ProcessExtendsVisitor;\r\n    }());\n\n    var JoinSelectorVisitor = /** @class */ (function () {\r\n        function JoinSelectorVisitor() {\r\n            this.contexts = [[]];\r\n            this._visitor = new Visitor(this);\r\n        }\r\n        JoinSelectorVisitor.prototype.run = function (root) {\r\n            return this._visitor.visit(root);\r\n        };\r\n        JoinSelectorVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            var paths = [];\r\n            var selectors;\r\n            this.contexts.push(paths);\r\n            if (!rulesetNode.root) {\r\n                selectors = rulesetNode.selectors;\r\n                if (selectors) {\r\n                    selectors = selectors.filter(function (selector) { return selector.getIsOutput(); });\r\n                    rulesetNode.selectors = selectors.length ? selectors : (selectors = null);\r\n                    if (selectors) {\r\n                        rulesetNode.joinSelectors(paths, context, selectors);\r\n                    }\r\n                }\r\n                if (!selectors) {\r\n                    rulesetNode.rules = null;\r\n                }\r\n                rulesetNode.paths = paths;\r\n            }\r\n        };\r\n        JoinSelectorVisitor.prototype.visitRulesetOut = function (rulesetNode) {\r\n            this.contexts.length = this.contexts.length - 1;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            mediaNode.rules[0].root = (context.length === 0 || context[0].multiMedia);\r\n        };\r\n        JoinSelectorVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            if (atRuleNode.rules && atRuleNode.rules.length) {\r\n                atRuleNode.rules[0].root = (atRuleNode.isRooted || context.length === 0 || null);\r\n            }\r\n        };\r\n        return JoinSelectorVisitor;\r\n    }());\n\n    var CSSVisitorUtils = /** @class */ (function () {\r\n        function CSSVisitorUtils(context) {\r\n            this._visitor = new Visitor(this);\r\n            this._context = context;\r\n        }\r\n        CSSVisitorUtils.prototype.containsSilentNonBlockedChild = function (bodyRules) {\r\n            var rule;\r\n            if (!bodyRules) {\r\n                return false;\r\n            }\r\n            for (var r = 0; r < bodyRules.length; r++) {\r\n                rule = bodyRules[r];\r\n                if (rule.isSilent && rule.isSilent(this._context) && !rule.blocksVisibility()) {\r\n                    // the atrule contains something that was referenced (likely by extend)\r\n                    // therefore it needs to be shown in output too\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        CSSVisitorUtils.prototype.keepOnlyVisibleChilds = function (owner) {\r\n            if (owner && owner.rules) {\r\n                owner.rules = owner.rules.filter(function (thing) { return thing.isVisible(); });\r\n            }\r\n        };\r\n        CSSVisitorUtils.prototype.isEmpty = function (owner) {\r\n            return (owner && owner.rules)\r\n                ? (owner.rules.length === 0) : true;\r\n        };\r\n        CSSVisitorUtils.prototype.hasVisibleSelector = function (rulesetNode) {\r\n            return (rulesetNode && rulesetNode.paths)\r\n                ? (rulesetNode.paths.length > 0) : false;\r\n        };\r\n        CSSVisitorUtils.prototype.resolveVisibility = function (node, originalRules) {\r\n            if (!node.blocksVisibility()) {\r\n                if (this.isEmpty(node) && !this.containsSilentNonBlockedChild(originalRules)) {\r\n                    return;\r\n                }\r\n                return node;\r\n            }\r\n            var compiledRulesBody = node.rules[0];\r\n            this.keepOnlyVisibleChilds(compiledRulesBody);\r\n            if (this.isEmpty(compiledRulesBody)) {\r\n                return;\r\n            }\r\n            node.ensureVisibility();\r\n            node.removeVisibilityBlock();\r\n            return node;\r\n        };\r\n        CSSVisitorUtils.prototype.isVisibleRuleset = function (rulesetNode) {\r\n            if (rulesetNode.firstRoot) {\r\n                return true;\r\n            }\r\n            if (this.isEmpty(rulesetNode)) {\r\n                return false;\r\n            }\r\n            if (!rulesetNode.root && !this.hasVisibleSelector(rulesetNode)) {\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        return CSSVisitorUtils;\r\n    }());\r\n    var ToCSSVisitor = function (context) {\r\n        this._visitor = new Visitor(this);\r\n        this._context = context;\r\n        this.utils = new CSSVisitorUtils(context);\r\n    };\r\n    ToCSSVisitor.prototype = {\r\n        isReplacing: true,\r\n        run: function (root) {\r\n            return this._visitor.visit(root);\r\n        },\r\n        visitDeclaration: function (declNode, visitArgs) {\r\n            if (declNode.blocksVisibility() || declNode.variable) {\r\n                return;\r\n            }\r\n            return declNode;\r\n        },\r\n        visitMixinDefinition: function (mixinNode, visitArgs) {\r\n            // mixin definitions do not get eval'd - this means they keep state\r\n            // so we have to clear that state here so it isn't used if toCSS is called twice\r\n            mixinNode.frames = [];\r\n        },\r\n        visitExtend: function (extendNode, visitArgs) {\r\n        },\r\n        visitComment: function (commentNode, visitArgs) {\r\n            if (commentNode.blocksVisibility() || commentNode.isSilent(this._context)) {\r\n                return;\r\n            }\r\n            return commentNode;\r\n        },\r\n        visitMedia: function (mediaNode, visitArgs) {\r\n            var originalRules = mediaNode.rules[0].rules;\r\n            mediaNode.accept(this._visitor);\r\n            visitArgs.visitDeeper = false;\r\n            return this.utils.resolveVisibility(mediaNode, originalRules);\r\n        },\r\n        visitImport: function (importNode, visitArgs) {\r\n            if (importNode.blocksVisibility()) {\r\n                return;\r\n            }\r\n            return importNode;\r\n        },\r\n        visitAtRule: function (atRuleNode, visitArgs) {\r\n            if (atRuleNode.rules && atRuleNode.rules.length) {\r\n                return this.visitAtRuleWithBody(atRuleNode, visitArgs);\r\n            }\r\n            else {\r\n                return this.visitAtRuleWithoutBody(atRuleNode, visitArgs);\r\n            }\r\n        },\r\n        visitAnonymous: function (anonymousNode, visitArgs) {\r\n            if (!anonymousNode.blocksVisibility()) {\r\n                anonymousNode.accept(this._visitor);\r\n                return anonymousNode;\r\n            }\r\n        },\r\n        visitAtRuleWithBody: function (atRuleNode, visitArgs) {\r\n            // if there is only one nested ruleset and that one has no path, then it is\r\n            // just fake ruleset\r\n            function hasFakeRuleset(atRuleNode) {\r\n                var bodyRules = atRuleNode.rules;\r\n                return bodyRules.length === 1 && (!bodyRules[0].paths || bodyRules[0].paths.length === 0);\r\n            }\r\n            function getBodyRules(atRuleNode) {\r\n                var nodeRules = atRuleNode.rules;\r\n                if (hasFakeRuleset(atRuleNode)) {\r\n                    return nodeRules[0].rules;\r\n                }\r\n                return nodeRules;\r\n            }\r\n            // it is still true that it is only one ruleset in array\r\n            // this is last such moment\r\n            // process childs\r\n            var originalRules = getBodyRules(atRuleNode);\r\n            atRuleNode.accept(this._visitor);\r\n            visitArgs.visitDeeper = false;\r\n            if (!this.utils.isEmpty(atRuleNode)) {\r\n                this._mergeRules(atRuleNode.rules[0].rules);\r\n            }\r\n            return this.utils.resolveVisibility(atRuleNode, originalRules);\r\n        },\r\n        visitAtRuleWithoutBody: function (atRuleNode, visitArgs) {\r\n            if (atRuleNode.blocksVisibility()) {\r\n                return;\r\n            }\r\n            if (atRuleNode.name === '@charset') {\r\n                // Only output the debug info together with subsequent @charset definitions\r\n                // a comment (or @media statement) before the actual @charset atrule would\r\n                // be considered illegal css as it has to be on the first line\r\n                if (this.charset) {\r\n                    if (atRuleNode.debugInfo) {\r\n                        var comment = new tree.Comment(\"/* \" + atRuleNode.toCSS(this._context).replace(/\\n/g, '') + \" */\\n\");\r\n                        comment.debugInfo = atRuleNode.debugInfo;\r\n                        return this._visitor.visit(comment);\r\n                    }\r\n                    return;\r\n                }\r\n                this.charset = true;\r\n            }\r\n            return atRuleNode;\r\n        },\r\n        checkValidNodes: function (rules, isRoot) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            for (var i = 0; i < rules.length; i++) {\r\n                var ruleNode = rules[i];\r\n                if (isRoot && ruleNode instanceof tree.Declaration && !ruleNode.variable) {\r\n                    throw { message: 'Properties must be inside selector blocks. They cannot be in the root',\r\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n                if (ruleNode instanceof tree.Call) {\r\n                    throw { message: \"Function '\" + ruleNode.name + \"' did not return a root node\",\r\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n                if (ruleNode.type && !ruleNode.allowRoot) {\r\n                    throw { message: ruleNode.type + \" node returned by a function is not valid here\",\r\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n            }\r\n        },\r\n        visitRuleset: function (rulesetNode, visitArgs) {\r\n            // at this point rulesets are nested into each other\r\n            var rule;\r\n            var rulesets = [];\r\n            this.checkValidNodes(rulesetNode.rules, rulesetNode.firstRoot);\r\n            if (!rulesetNode.root) {\r\n                // remove invisible paths\r\n                this._compileRulesetPaths(rulesetNode);\r\n                // remove rulesets from this ruleset body and compile them separately\r\n                var nodeRules = rulesetNode.rules;\r\n                var nodeRuleCnt = nodeRules ? nodeRules.length : 0;\r\n                for (var i = 0; i < nodeRuleCnt;) {\r\n                    rule = nodeRules[i];\r\n                    if (rule && rule.rules) {\r\n                        // visit because we are moving them out from being a child\r\n                        rulesets.push(this._visitor.visit(rule));\r\n                        nodeRules.splice(i, 1);\r\n                        nodeRuleCnt--;\r\n                        continue;\r\n                    }\r\n                    i++;\r\n                }\r\n                // accept the visitor to remove rules and refactor itself\r\n                // then we can decide nogw whether we want it or not\r\n                // compile body\r\n                if (nodeRuleCnt > 0) {\r\n                    rulesetNode.accept(this._visitor);\r\n                }\r\n                else {\r\n                    rulesetNode.rules = null;\r\n                }\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n            else { // if (! rulesetNode.root) {\r\n                rulesetNode.accept(this._visitor);\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n            if (rulesetNode.rules) {\r\n                this._mergeRules(rulesetNode.rules);\r\n                this._removeDuplicateRules(rulesetNode.rules);\r\n            }\r\n            // now decide whether we keep the ruleset\r\n            if (this.utils.isVisibleRuleset(rulesetNode)) {\r\n                rulesetNode.ensureVisibility();\r\n                rulesets.splice(0, 0, rulesetNode);\r\n            }\r\n            if (rulesets.length === 1) {\r\n                return rulesets[0];\r\n            }\r\n            return rulesets;\r\n        },\r\n        _compileRulesetPaths: function (rulesetNode) {\r\n            if (rulesetNode.paths) {\r\n                rulesetNode.paths = rulesetNode.paths\r\n                    .filter(function (p) {\r\n                    var i;\r\n                    if (p[0].elements[0].combinator.value === ' ') {\r\n                        p[0].elements[0].combinator = new (tree.Combinator)('');\r\n                    }\r\n                    for (i = 0; i < p.length; i++) {\r\n                        if (p[i].isVisible() && p[i].getIsOutput()) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                });\r\n            }\r\n        },\r\n        _removeDuplicateRules: function (rules) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            // remove duplicates\r\n            var ruleCache = {};\r\n            var ruleList;\r\n            var rule;\r\n            var i;\r\n            for (i = rules.length - 1; i >= 0; i--) {\r\n                rule = rules[i];\r\n                if (rule instanceof tree.Declaration) {\r\n                    if (!ruleCache[rule.name]) {\r\n                        ruleCache[rule.name] = rule;\r\n                    }\r\n                    else {\r\n                        ruleList = ruleCache[rule.name];\r\n                        if (ruleList instanceof tree.Declaration) {\r\n                            ruleList = ruleCache[rule.name] = [ruleCache[rule.name].toCSS(this._context)];\r\n                        }\r\n                        var ruleCSS = rule.toCSS(this._context);\r\n                        if (ruleList.indexOf(ruleCSS) !== -1) {\r\n                            rules.splice(i, 1);\r\n                        }\r\n                        else {\r\n                            ruleList.push(ruleCSS);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        _mergeRules: function (rules) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            var groups = {};\r\n            var groupsArr = [];\r\n            for (var i = 0; i < rules.length; i++) {\r\n                var rule = rules[i];\r\n                if (rule.merge) {\r\n                    var key = rule.name;\r\n                    groups[key] ? rules.splice(i--, 1) :\r\n                        groupsArr.push(groups[key] = []);\r\n                    groups[key].push(rule);\r\n                }\r\n            }\r\n            groupsArr.forEach(function (group) {\r\n                if (group.length > 0) {\r\n                    var result_1 = group[0];\r\n                    var space_1 = [];\r\n                    var comma_1 = [new tree.Expression(space_1)];\r\n                    group.forEach(function (rule) {\r\n                        if ((rule.merge === '+') && (space_1.length > 0)) {\r\n                            comma_1.push(new tree.Expression(space_1 = []));\r\n                        }\r\n                        space_1.push(rule.value);\r\n                        result_1.important = result_1.important || rule.important;\r\n                    });\r\n                    result_1.value = new tree.Value(comma_1);\r\n                }\r\n            });\r\n        }\r\n    };\n\n    var visitors = {\r\n        Visitor: Visitor,\r\n        ImportVisitor: ImportVisitor,\r\n        MarkVisibleSelectorsVisitor: SetTreeVisibilityVisitor,\r\n        ExtendVisitor: ProcessExtendsVisitor,\r\n        JoinSelectorVisitor: JoinSelectorVisitor,\r\n        ToCSSVisitor: ToCSSVisitor\r\n    };\n\n    // Split the input into chunks.\r\n    function chunker (input, fail) {\r\n        var len = input.length;\r\n        var level = 0;\r\n        var parenLevel = 0;\r\n        var lastOpening;\r\n        var lastOpeningParen;\r\n        var lastMultiComment;\r\n        var lastMultiCommentEndBrace;\r\n        var chunks = [];\r\n        var emitFrom = 0;\r\n        var chunkerCurrentIndex;\r\n        var currentChunkStartIndex;\r\n        var cc;\r\n        var cc2;\r\n        var matched;\r\n        function emitChunk(force) {\r\n            var len = chunkerCurrentIndex - emitFrom;\r\n            if (((len < 512) && !force) || !len) {\r\n                return;\r\n            }\r\n            chunks.push(input.slice(emitFrom, chunkerCurrentIndex + 1));\r\n            emitFrom = chunkerCurrentIndex + 1;\r\n        }\r\n        for (chunkerCurrentIndex = 0; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n            cc = input.charCodeAt(chunkerCurrentIndex);\r\n            if (((cc >= 97) && (cc <= 122)) || (cc < 34)) {\r\n                // a-z or whitespace\r\n                continue;\r\n            }\r\n            switch (cc) {\r\n                case 40: // (\r\n                    parenLevel++;\r\n                    lastOpeningParen = chunkerCurrentIndex;\r\n                    continue;\r\n                case 41: // )\r\n                    if (--parenLevel < 0) {\r\n                        return fail('missing opening `(`', chunkerCurrentIndex);\r\n                    }\r\n                    continue;\r\n                case 59: // ;\r\n                    if (!parenLevel) {\r\n                        emitChunk();\r\n                    }\r\n                    continue;\r\n                case 123: // {\r\n                    level++;\r\n                    lastOpening = chunkerCurrentIndex;\r\n                    continue;\r\n                case 125: // }\r\n                    if (--level < 0) {\r\n                        return fail('missing opening `{`', chunkerCurrentIndex);\r\n                    }\r\n                    if (!level && !parenLevel) {\r\n                        emitChunk();\r\n                    }\r\n                    continue;\r\n                case 92: // \\\r\n                    if (chunkerCurrentIndex < len - 1) {\r\n                        chunkerCurrentIndex++;\r\n                        continue;\r\n                    }\r\n                    return fail('unescaped `\\\\`', chunkerCurrentIndex);\r\n                case 34:\r\n                case 39:\r\n                case 96: // \", ' and `\r\n                    matched = 0;\r\n                    currentChunkStartIndex = chunkerCurrentIndex;\r\n                    for (chunkerCurrentIndex = chunkerCurrentIndex + 1; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n                        cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                        if (cc2 > 96) {\r\n                            continue;\r\n                        }\r\n                        if (cc2 == cc) {\r\n                            matched = 1;\r\n                            break;\r\n                        }\r\n                        if (cc2 == 92) { // \\\r\n                            if (chunkerCurrentIndex == len - 1) {\r\n                                return fail('unescaped `\\\\`', chunkerCurrentIndex);\r\n                            }\r\n                            chunkerCurrentIndex++;\r\n                        }\r\n                    }\r\n                    if (matched) {\r\n                        continue;\r\n                    }\r\n                    return fail(\"unmatched `\" + String.fromCharCode(cc) + \"`\", currentChunkStartIndex);\r\n                case 47: // /, check for comment\r\n                    if (parenLevel || (chunkerCurrentIndex == len - 1)) {\r\n                        continue;\r\n                    }\r\n                    cc2 = input.charCodeAt(chunkerCurrentIndex + 1);\r\n                    if (cc2 == 47) {\r\n                        // //, find lnfeed\r\n                        for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n                            cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                            if ((cc2 <= 13) && ((cc2 == 10) || (cc2 == 13))) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (cc2 == 42) {\r\n                        // /*, find */\r\n                        lastMultiComment = currentChunkStartIndex = chunkerCurrentIndex;\r\n                        for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len - 1; chunkerCurrentIndex++) {\r\n                            cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                            if (cc2 == 125) {\r\n                                lastMultiCommentEndBrace = chunkerCurrentIndex;\r\n                            }\r\n                            if (cc2 != 42) {\r\n                                continue;\r\n                            }\r\n                            if (input.charCodeAt(chunkerCurrentIndex + 1) == 47) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (chunkerCurrentIndex == len - 1) {\r\n                            return fail('missing closing `*/`', currentChunkStartIndex);\r\n                        }\r\n                        chunkerCurrentIndex++;\r\n                    }\r\n                    continue;\r\n                case 42: // *, check for unmatched */\r\n                    if ((chunkerCurrentIndex < len - 1) && (input.charCodeAt(chunkerCurrentIndex + 1) == 47)) {\r\n                        return fail('unmatched `/*`', chunkerCurrentIndex);\r\n                    }\r\n                    continue;\r\n            }\r\n        }\r\n        if (level !== 0) {\r\n            if ((lastMultiComment > lastOpening) && (lastMultiCommentEndBrace > lastMultiComment)) {\r\n                return fail('missing closing `}` or `*/`', lastOpening);\r\n            }\r\n            else {\r\n                return fail('missing closing `}`', lastOpening);\r\n            }\r\n        }\r\n        else if (parenLevel !== 0) {\r\n            return fail('missing closing `)`', lastOpeningParen);\r\n        }\r\n        emitChunk(true);\r\n        return chunks;\r\n    }\n\n    var getParserInput = (function () {\r\n        var // Less input string\r\n        input;\r\n        var // current chunk\r\n        j;\r\n        var // holds state for backtracking\r\n        saveStack = [];\r\n        var // furthest index the parser has gone to\r\n        furthest;\r\n        var // if this is furthest we got to, this is the probably cause\r\n        furthestPossibleErrorMessage;\r\n        var // chunkified input\r\n        chunks;\r\n        var // current chunk\r\n        current;\r\n        var // index of current chunk, in `input`\r\n        currentPos;\r\n        var parserInput = {};\r\n        var CHARCODE_SPACE = 32;\r\n        var CHARCODE_TAB = 9;\r\n        var CHARCODE_LF = 10;\r\n        var CHARCODE_CR = 13;\r\n        var CHARCODE_PLUS = 43;\r\n        var CHARCODE_COMMA = 44;\r\n        var CHARCODE_FORWARD_SLASH = 47;\r\n        var CHARCODE_9 = 57;\r\n        function skipWhitespace(length) {\r\n            var oldi = parserInput.i;\r\n            var oldj = j;\r\n            var curr = parserInput.i - currentPos;\r\n            var endIndex = parserInput.i + current.length - curr;\r\n            var mem = (parserInput.i += length);\r\n            var inp = input;\r\n            var c;\r\n            var nextChar;\r\n            var comment;\r\n            for (; parserInput.i < endIndex; parserInput.i++) {\r\n                c = inp.charCodeAt(parserInput.i);\r\n                if (parserInput.autoCommentAbsorb && c === CHARCODE_FORWARD_SLASH) {\r\n                    nextChar = inp.charAt(parserInput.i + 1);\r\n                    if (nextChar === '/') {\r\n                        comment = { index: parserInput.i, isLineComment: true };\r\n                        var nextNewLine = inp.indexOf('\\n', parserInput.i + 2);\r\n                        if (nextNewLine < 0) {\r\n                            nextNewLine = endIndex;\r\n                        }\r\n                        parserInput.i = nextNewLine;\r\n                        comment.text = inp.substr(comment.index, parserInput.i - comment.index);\r\n                        parserInput.commentStore.push(comment);\r\n                        continue;\r\n                    }\r\n                    else if (nextChar === '*') {\r\n                        var nextStarSlash = inp.indexOf('*/', parserInput.i + 2);\r\n                        if (nextStarSlash >= 0) {\r\n                            comment = {\r\n                                index: parserInput.i,\r\n                                text: inp.substr(parserInput.i, nextStarSlash + 2 - parserInput.i),\r\n                                isLineComment: false\r\n                            };\r\n                            parserInput.i += comment.text.length - 1;\r\n                            parserInput.commentStore.push(comment);\r\n                            continue;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                if ((c !== CHARCODE_SPACE) && (c !== CHARCODE_LF) && (c !== CHARCODE_TAB) && (c !== CHARCODE_CR)) {\r\n                    break;\r\n                }\r\n            }\r\n            current = current.slice(length + parserInput.i - mem + curr);\r\n            currentPos = parserInput.i;\r\n            if (!current.length) {\r\n                if (j < chunks.length - 1) {\r\n                    current = chunks[++j];\r\n                    skipWhitespace(0); // skip space at the beginning of a chunk\r\n                    return true; // things changed\r\n                }\r\n                parserInput.finished = true;\r\n            }\r\n            return oldi !== parserInput.i || oldj !== j;\r\n        }\r\n        parserInput.save = function () {\r\n            currentPos = parserInput.i;\r\n            saveStack.push({ current: current, i: parserInput.i, j: j });\r\n        };\r\n        parserInput.restore = function (possibleErrorMessage) {\r\n            if (parserInput.i > furthest || (parserInput.i === furthest && possibleErrorMessage && !furthestPossibleErrorMessage)) {\r\n                furthest = parserInput.i;\r\n                furthestPossibleErrorMessage = possibleErrorMessage;\r\n            }\r\n            var state = saveStack.pop();\r\n            current = state.current;\r\n            currentPos = parserInput.i = state.i;\r\n            j = state.j;\r\n        };\r\n        parserInput.forget = function () {\r\n            saveStack.pop();\r\n        };\r\n        parserInput.isWhitespace = function (offset) {\r\n            var pos = parserInput.i + (offset || 0);\r\n            var code = input.charCodeAt(pos);\r\n            return (code === CHARCODE_SPACE || code === CHARCODE_CR || code === CHARCODE_TAB || code === CHARCODE_LF);\r\n        };\r\n        // Specialization of $(tok)\r\n        parserInput.$re = function (tok) {\r\n            if (parserInput.i > currentPos) {\r\n                current = current.slice(parserInput.i - currentPos);\r\n                currentPos = parserInput.i;\r\n            }\r\n            var m = tok.exec(current);\r\n            if (!m) {\r\n                return null;\r\n            }\r\n            skipWhitespace(m[0].length);\r\n            if (typeof m === 'string') {\r\n                return m;\r\n            }\r\n            return m.length === 1 ? m[0] : m;\r\n        };\r\n        parserInput.$char = function (tok) {\r\n            if (input.charAt(parserInput.i) !== tok) {\r\n                return null;\r\n            }\r\n            skipWhitespace(1);\r\n            return tok;\r\n        };\r\n        parserInput.$str = function (tok) {\r\n            var tokLength = tok.length;\r\n            // https://jsperf.com/string-startswith/21\r\n            for (var i = 0; i < tokLength; i++) {\r\n                if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\r\n                    return null;\r\n                }\r\n            }\r\n            skipWhitespace(tokLength);\r\n            return tok;\r\n        };\r\n        parserInput.$quoted = function (loc) {\r\n            var pos = loc || parserInput.i;\r\n            var startChar = input.charAt(pos);\r\n            if (startChar !== '\\'' && startChar !== '\"') {\r\n                return;\r\n            }\r\n            var length = input.length;\r\n            var currentPosition = pos;\r\n            for (var i = 1; i + currentPosition < length; i++) {\r\n                var nextChar = input.charAt(i + currentPosition);\r\n                switch (nextChar) {\r\n                    case '\\\\':\r\n                        i++;\r\n                        continue;\r\n                    case '\\r':\r\n                    case '\\n':\r\n                        break;\r\n                    case startChar:\r\n                        var str = input.substr(currentPosition, i + 1);\r\n                        if (!loc && loc !== 0) {\r\n                            skipWhitespace(i + 1);\r\n                            return str;\r\n                        }\r\n                        return [startChar, str];\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * Permissive parsing. Ignores everything except matching {} [] () and quotes\r\n         * until matching token (outside of blocks)\r\n         */\r\n        parserInput.$parseUntil = function (tok) {\r\n            var quote = '';\r\n            var returnVal = null;\r\n            var inComment = false;\r\n            var blockDepth = 0;\r\n            var blockStack = [];\r\n            var parseGroups = [];\r\n            var length = input.length;\r\n            var startPos = parserInput.i;\r\n            var lastPos = parserInput.i;\r\n            var i = parserInput.i;\r\n            var loop = true;\r\n            var testChar;\r\n            if (typeof tok === 'string') {\r\n                testChar = function (char) { return char === tok; };\r\n            }\r\n            else {\r\n                testChar = function (char) { return tok.test(char); };\r\n            }\r\n            do {\r\n                var nextChar = input.charAt(i);\r\n                if (blockDepth === 0 && testChar(nextChar)) {\r\n                    returnVal = input.substr(lastPos, i - lastPos);\r\n                    if (returnVal) {\r\n                        parseGroups.push(returnVal);\r\n                    }\r\n                    else {\r\n                        parseGroups.push(' ');\r\n                    }\r\n                    returnVal = parseGroups;\r\n                    skipWhitespace(i - startPos);\r\n                    loop = false;\r\n                }\r\n                else {\r\n                    if (inComment) {\r\n                        if (nextChar === '*' &&\r\n                            input.charAt(i + 1) === '/') {\r\n                            i++;\r\n                            blockDepth--;\r\n                            inComment = false;\r\n                        }\r\n                        i++;\r\n                        continue;\r\n                    }\r\n                    switch (nextChar) {\r\n                        case '\\\\':\r\n                            i++;\r\n                            nextChar = input.charAt(i);\r\n                            parseGroups.push(input.substr(lastPos, i - lastPos + 1));\r\n                            lastPos = i + 1;\r\n                            break;\r\n                        case '/':\r\n                            if (input.charAt(i + 1) === '*') {\r\n                                i++;\r\n                                inComment = true;\r\n                                blockDepth++;\r\n                            }\r\n                            break;\r\n                        case '\\'':\r\n                        case '\"':\r\n                            quote = parserInput.$quoted(i);\r\n                            if (quote) {\r\n                                parseGroups.push(input.substr(lastPos, i - lastPos), quote);\r\n                                i += quote[1].length - 1;\r\n                                lastPos = i + 1;\r\n                            }\r\n                            else {\r\n                                skipWhitespace(i - startPos);\r\n                                returnVal = nextChar;\r\n                                loop = false;\r\n                            }\r\n                            break;\r\n                        case '{':\r\n                            blockStack.push('}');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '(':\r\n                            blockStack.push(')');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '[':\r\n                            blockStack.push(']');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '}':\r\n                        case ')':\r\n                        case ']':\r\n                            var expected = blockStack.pop();\r\n                            if (nextChar === expected) {\r\n                                blockDepth--;\r\n                            }\r\n                            else {\r\n                                // move the parser to the error and return expected\r\n                                skipWhitespace(i - startPos);\r\n                                returnVal = expected;\r\n                                loop = false;\r\n                            }\r\n                    }\r\n                    i++;\r\n                    if (i > length) {\r\n                        loop = false;\r\n                    }\r\n                }\r\n            } while (loop);\r\n            return returnVal ? returnVal : null;\r\n        };\r\n        parserInput.autoCommentAbsorb = true;\r\n        parserInput.commentStore = [];\r\n        parserInput.finished = false;\r\n        // Same as $(), but don't change the state of the parser,\r\n        // just return the match.\r\n        parserInput.peek = function (tok) {\r\n            if (typeof tok === 'string') {\r\n                // https://jsperf.com/string-startswith/21\r\n                for (var i = 0; i < tok.length; i++) {\r\n                    if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n            else {\r\n                return tok.test(current);\r\n            }\r\n        };\r\n        // Specialization of peek()\r\n        // TODO remove or change some currentChar calls to peekChar\r\n        parserInput.peekChar = function (tok) { return input.charAt(parserInput.i) === tok; };\r\n        parserInput.currentChar = function () { return input.charAt(parserInput.i); };\r\n        parserInput.prevChar = function () { return input.charAt(parserInput.i - 1); };\r\n        parserInput.getInput = function () { return input; };\r\n        parserInput.peekNotNumeric = function () {\r\n            var c = input.charCodeAt(parserInput.i);\r\n            // Is the first char of the dimension 0-9, '.', '+' or '-'\r\n            return (c > CHARCODE_9 || c < CHARCODE_PLUS) || c === CHARCODE_FORWARD_SLASH || c === CHARCODE_COMMA;\r\n        };\r\n        parserInput.start = function (str, chunkInput, failFunction) {\r\n            input = str;\r\n            parserInput.i = j = currentPos = furthest = 0;\r\n            // chunking apparently makes things quicker (but my tests indicate\r\n            // it might actually make things slower in node at least)\r\n            // and it is a non-perfect parse - it can't recognise\r\n            // unquoted urls, meaning it can't distinguish comments\r\n            // meaning comments with quotes or {}() in them get 'counted'\r\n            // and then lead to parse errors.\r\n            // In addition if the chunking chunks in the wrong place we might\r\n            // not be able to parse a parser statement in one go\r\n            // this is officially deprecated but can be switched on via an option\r\n            // in the case it causes too much performance issues.\r\n            if (chunkInput) {\r\n                chunks = chunker(str, failFunction);\r\n            }\r\n            else {\r\n                chunks = [str];\r\n            }\r\n            current = chunks[0];\r\n            skipWhitespace(0);\r\n        };\r\n        parserInput.end = function () {\r\n            var message;\r\n            var isFinished = parserInput.i >= input.length;\r\n            if (parserInput.i < furthest) {\r\n                message = furthestPossibleErrorMessage;\r\n                parserInput.i = furthest;\r\n            }\r\n            return {\r\n                isFinished: isFinished,\r\n                furthest: parserInput.i,\r\n                furthestPossibleErrorMessage: message,\r\n                furthestReachedEnd: parserInput.i >= input.length - 1,\r\n                furthestChar: input[parserInput.i]\r\n            };\r\n        };\r\n        return parserInput;\r\n    });\n\n    //\r\n    // less.js - parser\r\n    //\r\n    //    A relatively straight-forward predictive parser.\r\n    //    There is no tokenization/lexing stage, the input is parsed\r\n    //    in one sweep.\r\n    //\r\n    //    To make the parser fast enough to run in the browser, several\r\n    //    optimization had to be made:\r\n    //\r\n    //    - Matching and slicing on a huge input is often cause of slowdowns.\r\n    //      The solution is to chunkify the input into smaller strings.\r\n    //      The chunks are stored in the `chunks` var,\r\n    //      `j` holds the current chunk index, and `currentPos` holds\r\n    //      the index of the current chunk in relation to `input`.\r\n    //      This gives us an almost 4x speed-up.\r\n    //\r\n    //    - In many cases, we don't need to match individual tokens;\r\n    //      for example, if a value doesn't hold any variables, operations\r\n    //      or dynamic references, the parser can effectively 'skip' it,\r\n    //      treating it as a literal.\r\n    //      An example would be '1px solid #000' - which evaluates to itself,\r\n    //      we don't need to know what the individual components are.\r\n    //      The drawback, of course is that you don't get the benefits of\r\n    //      syntax-checking on the CSS. This gives us a 50% speed-up in the parser,\r\n    //      and a smaller speed-up in the code-gen.\r\n    //\r\n    //\r\n    //    Token matching is done with the `$` function, which either takes\r\n    //    a terminal string or regexp, or a non-terminal function to call.\r\n    //    It also takes care of moving all the indices forwards.\r\n    //\r\n    var Parser = function Parser(context, imports, fileInfo) {\r\n        var parsers;\r\n        var parserInput = getParserInput();\r\n        function error(msg, type) {\r\n            throw new LessError({\r\n                index: parserInput.i,\r\n                filename: fileInfo.filename,\r\n                type: type || 'Syntax',\r\n                message: msg\r\n            }, imports);\r\n        }\r\n        function expect(arg, msg) {\r\n            // some older browsers return typeof 'function' for RegExp\r\n            var result = (arg instanceof Function) ? arg.call(parsers) : parserInput.$re(arg);\r\n            if (result) {\r\n                return result;\r\n            }\r\n            error(msg || (typeof arg === 'string'\r\n                ? \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\"\r\n                : 'unexpected token'));\r\n        }\r\n        // Specialization of expect()\r\n        function expectChar(arg, msg) {\r\n            if (parserInput.$char(arg)) {\r\n                return arg;\r\n            }\r\n            error(msg || \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\");\r\n        }\r\n        function getDebugInfo(index) {\r\n            var filename = fileInfo.filename;\r\n            return {\r\n                lineNumber: getLocation(index, parserInput.getInput()).line + 1,\r\n                fileName: filename\r\n            };\r\n        }\r\n        /**\r\n         *  Used after initial parsing to create nodes on the fly\r\n         *\r\n         *  @param {String} str          - string to parse\r\n         *  @param {Array}  parseList    - array of parsers to run input through e.g. [\"value\", \"important\"]\r\n         *  @param {Number} currentIndex - start number to begin indexing\r\n         *  @param {Object} fileInfo     - fileInfo to attach to created nodes\r\n         */\r\n        function parseNode(str, parseList, currentIndex, fileInfo, callback) {\r\n            var result;\r\n            var returnNodes = [];\r\n            var parser = parserInput;\r\n            try {\r\n                parser.start(str, false, function fail(msg, index) {\r\n                    callback({\r\n                        message: msg,\r\n                        index: index + currentIndex\r\n                    });\r\n                });\r\n                for (var x = 0, p = void 0, i = void 0; (p = parseList[x]); x++) {\r\n                    i = parser.i;\r\n                    result = parsers[p]();\r\n                    if (result) {\r\n                        try {\r\n                            result._index = i + currentIndex;\r\n                            result._fileInfo = fileInfo;\r\n                        }\r\n                        catch (e) { }\r\n                        returnNodes.push(result);\r\n                    }\r\n                    else {\r\n                        returnNodes.push(null);\r\n                    }\r\n                }\r\n                var endInfo = parser.end();\r\n                if (endInfo.isFinished) {\r\n                    callback(null, returnNodes);\r\n                }\r\n                else {\r\n                    callback(true, null);\r\n                }\r\n            }\r\n            catch (e) {\r\n                throw new LessError({\r\n                    index: e.index + currentIndex,\r\n                    message: e.message\r\n                }, imports, fileInfo.filename);\r\n            }\r\n        }\r\n        //\r\n        // The Parser\r\n        //\r\n        return {\r\n            parserInput: parserInput,\r\n            imports: imports,\r\n            fileInfo: fileInfo,\r\n            parseNode: parseNode,\r\n            //\r\n            // Parse an input string into an abstract syntax tree,\r\n            // @param str A string containing 'less' markup\r\n            // @param callback call `callback` when done.\r\n            // @param [additionalData] An optional map which can contains vars - a map (key, value) of variables to apply\r\n            //\r\n            parse: function (str, callback, additionalData) {\r\n                var root;\r\n                var err = null;\r\n                var globalVars;\r\n                var modifyVars;\r\n                var ignored;\r\n                var preText = '';\r\n                // Optionally disable @plugin parsing\r\n                if (additionalData && additionalData.disablePluginRule) {\r\n                    parsers.plugin = function () {\r\n                        var dir = parserInput.$re(/^@plugin?\\s+/);\r\n                        if (dir) {\r\n                            error('@plugin statements are not allowed when disablePluginRule is set to true');\r\n                        }\r\n                    };\r\n                }\r\n                globalVars = (additionalData && additionalData.globalVars) ? Parser.serializeVars(additionalData.globalVars) + \"\\n\" : '';\r\n                modifyVars = (additionalData && additionalData.modifyVars) ? \"\\n\" + Parser.serializeVars(additionalData.modifyVars) : '';\r\n                if (context.pluginManager) {\r\n                    var preProcessors = context.pluginManager.getPreProcessors();\r\n                    for (var i = 0; i < preProcessors.length; i++) {\r\n                        str = preProcessors[i].process(str, { context: context, imports: imports, fileInfo: fileInfo });\r\n                    }\r\n                }\r\n                if (globalVars || (additionalData && additionalData.banner)) {\r\n                    preText = ((additionalData && additionalData.banner) ? additionalData.banner : '') + globalVars;\r\n                    ignored = imports.contentsIgnoredChars;\r\n                    ignored[fileInfo.filename] = ignored[fileInfo.filename] || 0;\r\n                    ignored[fileInfo.filename] += preText.length;\r\n                }\r\n                str = str.replace(/\\r\\n?/g, '\\n');\r\n                // Remove potential UTF Byte Order Mark\r\n                str = preText + str.replace(/^\\uFEFF/, '') + modifyVars;\r\n                imports.contents[fileInfo.filename] = str;\r\n                // Start with the primary rule.\r\n                // The whole syntax tree is held under a Ruleset node,\r\n                // with the `root` property set to true, so no `{}` are\r\n                // output. The callback is called when the input is parsed.\r\n                try {\r\n                    parserInput.start(str, context.chunkInput, function fail(msg, index) {\r\n                        throw new LessError({\r\n                            index: index,\r\n                            type: 'Parse',\r\n                            message: msg,\r\n                            filename: fileInfo.filename\r\n                        }, imports);\r\n                    });\r\n                    tree.Node.prototype.parse = this;\r\n                    root = new tree.Ruleset(null, this.parsers.primary());\r\n                    tree.Node.prototype.rootNode = root;\r\n                    root.root = true;\r\n                    root.firstRoot = true;\r\n                    root.functionRegistry = functionRegistry.inherit();\r\n                }\r\n                catch (e) {\r\n                    return callback(new LessError(e, imports, fileInfo.filename));\r\n                }\r\n                // If `i` is smaller than the `input.length - 1`,\r\n                // it means the parser wasn't able to parse the whole\r\n                // string, so we've got a parsing error.\r\n                //\r\n                // We try to extract a \\n delimited string,\r\n                // showing the line where the parse error occurred.\r\n                // We split it up into two parts (the part which parsed,\r\n                // and the part which didn't), so we can color them differently.\r\n                var endInfo = parserInput.end();\r\n                if (!endInfo.isFinished) {\r\n                    var message = endInfo.furthestPossibleErrorMessage;\r\n                    if (!message) {\r\n                        message = 'Unrecognised input';\r\n                        if (endInfo.furthestChar === '}') {\r\n                            message += '. Possibly missing opening \\'{\\'';\r\n                        }\r\n                        else if (endInfo.furthestChar === ')') {\r\n                            message += '. Possibly missing opening \\'(\\'';\r\n                        }\r\n                        else if (endInfo.furthestReachedEnd) {\r\n                            message += '. Possibly missing something';\r\n                        }\r\n                    }\r\n                    err = new LessError({\r\n                        type: 'Parse',\r\n                        message: message,\r\n                        index: endInfo.furthest,\r\n                        filename: fileInfo.filename\r\n                    }, imports);\r\n                }\r\n                var finish = function (e) {\r\n                    e = err || e || imports.error;\r\n                    if (e) {\r\n                        if (!(e instanceof LessError)) {\r\n                            e = new LessError(e, imports, fileInfo.filename);\r\n                        }\r\n                        return callback(e);\r\n                    }\r\n                    else {\r\n                        return callback(null, root);\r\n                    }\r\n                };\r\n                if (context.processImports !== false) {\r\n                    new visitors.ImportVisitor(imports, finish)\r\n                        .run(root);\r\n                }\r\n                else {\r\n                    return finish();\r\n                }\r\n            },\r\n            //\r\n            // Here in, the parsing rules/functions\r\n            //\r\n            // The basic structure of the syntax tree generated is as follows:\r\n            //\r\n            //   Ruleset ->  Declaration -> Value -> Expression -> Entity\r\n            //\r\n            // Here's some Less code:\r\n            //\r\n            //    .class {\r\n            //      color: #fff;\r\n            //      border: 1px solid #000;\r\n            //      width: @w + 4px;\r\n            //      > .child {...}\r\n            //    }\r\n            //\r\n            // And here's what the parse tree might look like:\r\n            //\r\n            //     Ruleset (Selector '.class', [\r\n            //         Declaration (\"color\",  Value ([Expression [Color #fff]]))\r\n            //         Declaration (\"border\", Value ([Expression [Dimension 1px][Keyword \"solid\"][Color #000]]))\r\n            //         Declaration (\"width\",  Value ([Expression [Operation \" + \" [Variable \"@w\"][Dimension 4px]]]))\r\n            //         Ruleset (Selector [Element '>', '.child'], [...])\r\n            //     ])\r\n            //\r\n            //  In general, most rules will try to parse a token with the `$re()` function, and if the return\r\n            //  value is truly, will return a new node, of the relevant type. Sometimes, we need to check\r\n            //  first, before parsing, that's when we use `peek()`.\r\n            //\r\n            parsers: parsers = {\r\n                //\r\n                // The `primary` rule is the *entry* and *exit* point of the parser.\r\n                // The rules here can appear at any level of the parse tree.\r\n                //\r\n                // The recursive nature of the grammar is an interplay between the `block`\r\n                // rule, which represents `{ ... }`, the `ruleset` rule, and this `primary` rule,\r\n                // as represented by this simplified grammar:\r\n                //\r\n                //     primary  →  (ruleset | declaration)+\r\n                //     ruleset  →  selector+ block\r\n                //     block    →  '{' primary '}'\r\n                //\r\n                // Only at one point is the primary rule not called from the\r\n                // block rule: at the root level.\r\n                //\r\n                primary: function () {\r\n                    var mixin = this.mixin;\r\n                    var root = [];\r\n                    var node;\r\n                    while (true) {\r\n                        while (true) {\r\n                            node = this.comment();\r\n                            if (!node) {\r\n                                break;\r\n                            }\r\n                            root.push(node);\r\n                        }\r\n                        // always process comments before deciding if finished\r\n                        if (parserInput.finished) {\r\n                            break;\r\n                        }\r\n                        if (parserInput.peek('}')) {\r\n                            break;\r\n                        }\r\n                        node = this.extendRule();\r\n                        if (node) {\r\n                            root = root.concat(node);\r\n                            continue;\r\n                        }\r\n                        node = mixin.definition() || this.declaration() || mixin.call(false, false) ||\r\n                            this.ruleset() || this.variableCall() || this.entities.call() || this.atrule();\r\n                        if (node) {\r\n                            root.push(node);\r\n                        }\r\n                        else {\r\n                            var foundSemiColon = false;\r\n                            while (parserInput.$char(';')) {\r\n                                foundSemiColon = true;\r\n                            }\r\n                            if (!foundSemiColon) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    return root;\r\n                },\r\n                // comments are collected by the main parsing mechanism and then assigned to nodes\r\n                // where the current structure allows it\r\n                comment: function () {\r\n                    if (parserInput.commentStore.length) {\r\n                        var comment = parserInput.commentStore.shift();\r\n                        return new (tree.Comment)(comment.text, comment.isLineComment, comment.index, fileInfo);\r\n                    }\r\n                },\r\n                //\r\n                // Entities are tokens which can be found inside an Expression\r\n                //\r\n                entities: {\r\n                    mixinLookup: function () {\r\n                        return parsers.mixin.call(true, true);\r\n                    },\r\n                    //\r\n                    // A string, which supports escaping \" and '\r\n                    //\r\n                    //     \"milky way\" 'he\\'s the one!'\r\n                    //\r\n                    quoted: function (forceEscaped) {\r\n                        var str;\r\n                        var index = parserInput.i;\r\n                        var isEscaped = false;\r\n                        parserInput.save();\r\n                        if (parserInput.$char('~')) {\r\n                            isEscaped = true;\r\n                        }\r\n                        else if (forceEscaped) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        str = parserInput.$quoted();\r\n                        if (!str) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return new (tree.Quoted)(str.charAt(0), str.substr(1, str.length - 2), isEscaped, index, fileInfo);\r\n                    },\r\n                    //\r\n                    // A catch-all word, such as:\r\n                    //\r\n                    //     black border-collapse\r\n                    //\r\n                    keyword: function () {\r\n                        var k = parserInput.$char('%') || parserInput.$re(/^\\[?(?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+\\]?/);\r\n                        if (k) {\r\n                            return tree.Color.fromKeyword(k) || new (tree.Keyword)(k);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A function call\r\n                    //\r\n                    //     rgb(255, 0, 255)\r\n                    //\r\n                    // The arguments are parsed with the `entities.arguments` parser.\r\n                    //\r\n                    call: function () {\r\n                        var name;\r\n                        var args;\r\n                        var func;\r\n                        var index = parserInput.i;\r\n                        // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\r\n                        if (parserInput.peek(/^url\\(/i)) {\r\n                            return;\r\n                        }\r\n                        parserInput.save();\r\n                        name = parserInput.$re(/^([\\w-]+|%|~|progid:[\\w\\.]+)\\(/);\r\n                        if (!name) {\r\n                            parserInput.forget();\r\n                            return;\r\n                        }\r\n                        name = name[1];\r\n                        func = this.customFuncCall(name);\r\n                        if (func) {\r\n                            args = func.parse();\r\n                            if (args && func.stop) {\r\n                                parserInput.forget();\r\n                                return args;\r\n                            }\r\n                        }\r\n                        args = this.arguments(args);\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore('Could not parse call arguments or missing \\')\\'');\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return new (tree.Call)(name, args, index, fileInfo);\r\n                    },\r\n                    //\r\n                    // Parsing rules for functions with non-standard args, e.g.:\r\n                    //\r\n                    //     boolean(not(2 > 1))\r\n                    //\r\n                    //     This is a quick prototype, to be modified/improved when\r\n                    //     more custom-parsed funcs come (e.g. `selector(...)`)\r\n                    //\r\n                    customFuncCall: function (name) {\r\n                        /* Ideally the table is to be moved out of here for faster perf.,\r\n                           but it's quite tricky since it relies on all these `parsers`\r\n                           and `expect` available only here */\r\n                        return {\r\n                            alpha: f(parsers.ieAlpha, true),\r\n                            boolean: f(condition),\r\n                            'if': f(condition)\r\n                        }[name.toLowerCase()];\r\n                        function f(parse, stop) {\r\n                            return {\r\n                                parse: parse,\r\n                                stop: stop // when true - stop after parse() and return its result, \r\n                                // otherwise continue for plain args\r\n                            };\r\n                        }\r\n                        function condition() {\r\n                            return [expect(parsers.condition, 'expected condition')];\r\n                        }\r\n                    },\r\n                    arguments: function (prevArgs) {\r\n                        var argsComma = prevArgs || [];\r\n                        var argsSemiColon = [];\r\n                        var isSemiColonSeparated;\r\n                        var value;\r\n                        parserInput.save();\r\n                        while (true) {\r\n                            if (prevArgs) {\r\n                                prevArgs = false;\r\n                            }\r\n                            else {\r\n                                value = parsers.detachedRuleset() || this.assignment() || parsers.expression();\r\n                                if (!value) {\r\n                                    break;\r\n                                }\r\n                                if (value.value && value.value.length == 1) {\r\n                                    value = value.value[0];\r\n                                }\r\n                                argsComma.push(value);\r\n                            }\r\n                            if (parserInput.$char(',')) {\r\n                                continue;\r\n                            }\r\n                            if (parserInput.$char(';') || isSemiColonSeparated) {\r\n                                isSemiColonSeparated = true;\r\n                                value = (argsComma.length < 1) ? argsComma[0]\r\n                                    : new tree.Value(argsComma);\r\n                                argsSemiColon.push(value);\r\n                                argsComma = [];\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        return isSemiColonSeparated ? argsSemiColon : argsComma;\r\n                    },\r\n                    literal: function () {\r\n                        return this.dimension() ||\r\n                            this.color() ||\r\n                            this.quoted() ||\r\n                            this.unicodeDescriptor();\r\n                    },\r\n                    // Assignments are argument entities for calls.\r\n                    // They are present in ie filter properties as shown below.\r\n                    //\r\n                    //     filter: progid:DXImageTransform.Microsoft.Alpha( *opacity=50* )\r\n                    //\r\n                    assignment: function () {\r\n                        var key;\r\n                        var value;\r\n                        parserInput.save();\r\n                        key = parserInput.$re(/^\\w+(?=\\s?=)/i);\r\n                        if (!key) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (!parserInput.$char('=')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        value = parsers.entity();\r\n                        if (value) {\r\n                            parserInput.forget();\r\n                            return new (tree.Assignment)(key, value);\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    },\r\n                    //\r\n                    // Parse url() tokens\r\n                    //\r\n                    // We use a specific rule for urls, because they don't really behave like\r\n                    // standard function calls. The difference is that the argument doesn't have\r\n                    // to be enclosed within a string, so it can't be parsed as an Expression.\r\n                    //\r\n                    url: function () {\r\n                        var value;\r\n                        var index = parserInput.i;\r\n                        parserInput.autoCommentAbsorb = false;\r\n                        if (!parserInput.$str('url(')) {\r\n                            parserInput.autoCommentAbsorb = true;\r\n                            return;\r\n                        }\r\n                        value = this.quoted() || this.variable() || this.property() ||\r\n                            parserInput.$re(/^(?:(?:\\\\[\\(\\)'\"])|[^\\(\\)'\"])+/) || '';\r\n                        parserInput.autoCommentAbsorb = true;\r\n                        expectChar(')');\r\n                        return new (tree.URL)((value.value != null ||\r\n                            value instanceof tree.Variable ||\r\n                            value instanceof tree.Property) ?\r\n                            value : new (tree.Anonymous)(value, index), index, fileInfo);\r\n                    },\r\n                    //\r\n                    // A Variable entity, such as `@fink`, in\r\n                    //\r\n                    //     width: @fink + 2px\r\n                    //\r\n                    // We use a different parser for variable definitions,\r\n                    // see `parsers.variable`.\r\n                    //\r\n                    variable: function () {\r\n                        var ch;\r\n                        var name;\r\n                        var index = parserInput.i;\r\n                        parserInput.save();\r\n                        if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^@@?[\\w-]+/))) {\r\n                            ch = parserInput.currentChar();\r\n                            if (ch === '(' || ch === '[' && !parserInput.prevChar().match(/^\\s/)) {\r\n                                // this may be a VariableCall lookup\r\n                                var result = parsers.variableCall(name);\r\n                                if (result) {\r\n                                    parserInput.forget();\r\n                                    return result;\r\n                                }\r\n                            }\r\n                            parserInput.forget();\r\n                            return new (tree.Variable)(name, index, fileInfo);\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    // A variable entity using the protective {} e.g. @{var}\r\n                    variableCurly: function () {\r\n                        var curly;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '@' && (curly = parserInput.$re(/^@\\{([\\w-]+)\\}/))) {\r\n                            return new (tree.Variable)(\"@\" + curly[1], index, fileInfo);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Property accessor, such as `$color`, in\r\n                    //\r\n                    //     background-color: $color\r\n                    //\r\n                    property: function () {\r\n                        var name;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '$' && (name = parserInput.$re(/^\\$[\\w-]+/))) {\r\n                            return new (tree.Property)(name, index, fileInfo);\r\n                        }\r\n                    },\r\n                    // A property entity useing the protective {} e.g. ${prop}\r\n                    propertyCurly: function () {\r\n                        var curly;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '$' && (curly = parserInput.$re(/^\\$\\{([\\w-]+)\\}/))) {\r\n                            return new (tree.Property)(\"$\" + curly[1], index, fileInfo);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Hexadecimal color\r\n                    //\r\n                    //     #4F3C2F\r\n                    //\r\n                    // `rgb` and `hsl` colors are parsed through the `entities.call` parser.\r\n                    //\r\n                    color: function () {\r\n                        var rgb;\r\n                        parserInput.save();\r\n                        if (parserInput.currentChar() === '#' && (rgb = parserInput.$re(/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})([\\w.#\\[])?/))) {\r\n                            if (!rgb[2]) {\r\n                                parserInput.forget();\r\n                                return new (tree.Color)(rgb[1], undefined, rgb[0]);\r\n                            }\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    colorKeyword: function () {\r\n                        parserInput.save();\r\n                        var autoCommentAbsorb = parserInput.autoCommentAbsorb;\r\n                        parserInput.autoCommentAbsorb = false;\r\n                        var k = parserInput.$re(/^[_A-Za-z-][_A-Za-z0-9-]+/);\r\n                        parserInput.autoCommentAbsorb = autoCommentAbsorb;\r\n                        if (!k) {\r\n                            parserInput.forget();\r\n                            return;\r\n                        }\r\n                        parserInput.restore();\r\n                        var color = tree.Color.fromKeyword(k);\r\n                        if (color) {\r\n                            parserInput.$str(k);\r\n                            return color;\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Dimension, that is, a number and a unit\r\n                    //\r\n                    //     0.5em 95%\r\n                    //\r\n                    dimension: function () {\r\n                        if (parserInput.peekNotNumeric()) {\r\n                            return;\r\n                        }\r\n                        var value = parserInput.$re(/^([+-]?\\d*\\.?\\d+)(%|[a-z_]+)?/i);\r\n                        if (value) {\r\n                            return new (tree.Dimension)(value[1], value[2]);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A unicode descriptor, as is used in unicode-range\r\n                    //\r\n                    // U+0??  or U+00A1-00A9\r\n                    //\r\n                    unicodeDescriptor: function () {\r\n                        var ud;\r\n                        ud = parserInput.$re(/^U\\+[0-9a-fA-F?]+(\\-[0-9a-fA-F?]+)?/);\r\n                        if (ud) {\r\n                            return new (tree.UnicodeDescriptor)(ud[0]);\r\n                        }\r\n                    },\r\n                    //\r\n                    // JavaScript code to be evaluated\r\n                    //\r\n                    //     `window.location.href`\r\n                    //\r\n                    javascript: function () {\r\n                        var js;\r\n                        var index = parserInput.i;\r\n                        parserInput.save();\r\n                        var escape = parserInput.$char('~');\r\n                        var jsQuote = parserInput.$char('`');\r\n                        if (!jsQuote) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        js = parserInput.$re(/^[^`]*`/);\r\n                        if (js) {\r\n                            parserInput.forget();\r\n                            return new (tree.JavaScript)(js.substr(0, js.length - 1), Boolean(escape), index, fileInfo);\r\n                        }\r\n                        parserInput.restore('invalid javascript definition');\r\n                    }\r\n                },\r\n                //\r\n                // The variable part of a variable definition. Used in the `rule` parser\r\n                //\r\n                //     @fink:\r\n                //\r\n                variable: function () {\r\n                    var name;\r\n                    if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^(@[\\w-]+)\\s*:/))) {\r\n                        return name[1];\r\n                    }\r\n                },\r\n                //\r\n                // Call a variable value to retrieve a detached ruleset\r\n                // or a value from a detached ruleset's rules.\r\n                //\r\n                //     @fink();\r\n                //     @fink;\r\n                //     color: @fink[@color];\r\n                //\r\n                variableCall: function (parsedName) {\r\n                    var lookups;\r\n                    var i = parserInput.i;\r\n                    var inValue = !!parsedName;\r\n                    var name = parsedName;\r\n                    parserInput.save();\r\n                    if (name || (parserInput.currentChar() === '@'\r\n                        && (name = parserInput.$re(/^(@[\\w-]+)(\\(\\s*\\))?/)))) {\r\n                        lookups = this.mixin.ruleLookups();\r\n                        if (!lookups && ((inValue && parserInput.$str('()') !== '()') || (name[2] !== '()'))) {\r\n                            parserInput.restore('Missing \\'[...]\\' lookup in variable call');\r\n                            return;\r\n                        }\r\n                        if (!inValue) {\r\n                            name = name[1];\r\n                        }\r\n                        var call = new tree.VariableCall(name, i, fileInfo);\r\n                        if (!inValue && parsers.end()) {\r\n                            parserInput.forget();\r\n                            return call;\r\n                        }\r\n                        else {\r\n                            parserInput.forget();\r\n                            return new tree.NamespaceValue(call, lookups, i, fileInfo);\r\n                        }\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // extend syntax - used to extend selectors\r\n                //\r\n                extend: function (isRule) {\r\n                    var elements;\r\n                    var e;\r\n                    var index = parserInput.i;\r\n                    var option;\r\n                    var extendList;\r\n                    var extend;\r\n                    if (!parserInput.$str(isRule ? '&:extend(' : ':extend(')) {\r\n                        return;\r\n                    }\r\n                    do {\r\n                        option = null;\r\n                        elements = null;\r\n                        while (!(option = parserInput.$re(/^(all)(?=\\s*(\\)|,))/))) {\r\n                            e = this.element();\r\n                            if (!e) {\r\n                                break;\r\n                            }\r\n                            if (elements) {\r\n                                elements.push(e);\r\n                            }\r\n                            else {\r\n                                elements = [e];\r\n                            }\r\n                        }\r\n                        option = option && option[1];\r\n                        if (!elements) {\r\n                            error('Missing target selector for :extend().');\r\n                        }\r\n                        extend = new (tree.Extend)(new (tree.Selector)(elements), option, index, fileInfo);\r\n                        if (extendList) {\r\n                            extendList.push(extend);\r\n                        }\r\n                        else {\r\n                            extendList = [extend];\r\n                        }\r\n                    } while (parserInput.$char(','));\r\n                    expect(/^\\)/);\r\n                    if (isRule) {\r\n                        expect(/^;/);\r\n                    }\r\n                    return extendList;\r\n                },\r\n                //\r\n                // extendRule - used in a rule to extend all the parent selectors\r\n                //\r\n                extendRule: function () {\r\n                    return this.extend(true);\r\n                },\r\n                //\r\n                // Mixins\r\n                //\r\n                mixin: {\r\n                    //\r\n                    // A Mixin call, with an optional argument list\r\n                    //\r\n                    //     #mixins > .square(#fff);\r\n                    //     #mixins.square(#fff);\r\n                    //     .rounded(4px, black);\r\n                    //     .button;\r\n                    //\r\n                    // We can lookup / return a value using the lookup syntax:\r\n                    //\r\n                    //     color: #mixin.square(#fff)[@color];\r\n                    //\r\n                    // The `while` loop is there because mixins can be\r\n                    // namespaced, but we only support the child and descendant\r\n                    // selector for now.\r\n                    //\r\n                    call: function (inValue, getLookup) {\r\n                        var s = parserInput.currentChar();\r\n                        var important = false;\r\n                        var lookups;\r\n                        var index = parserInput.i;\r\n                        var elements;\r\n                        var args;\r\n                        var hasParens;\r\n                        if (s !== '.' && s !== '#') {\r\n                            return;\r\n                        }\r\n                        parserInput.save(); // stop us absorbing part of an invalid selector\r\n                        elements = this.elements();\r\n                        if (elements) {\r\n                            if (parserInput.$char('(')) {\r\n                                args = this.args(true).args;\r\n                                expectChar(')');\r\n                                hasParens = true;\r\n                            }\r\n                            if (getLookup !== false) {\r\n                                lookups = this.ruleLookups();\r\n                            }\r\n                            if (getLookup === true && !lookups) {\r\n                                parserInput.restore();\r\n                                return;\r\n                            }\r\n                            if (inValue && !lookups && !hasParens) {\r\n                                // This isn't a valid in-value mixin call\r\n                                parserInput.restore();\r\n                                return;\r\n                            }\r\n                            if (!inValue && parsers.important()) {\r\n                                important = true;\r\n                            }\r\n                            if (inValue || parsers.end()) {\r\n                                parserInput.forget();\r\n                                var mixin = new (tree.mixin.Call)(elements, args, index, fileInfo, !lookups && important);\r\n                                if (lookups) {\r\n                                    return new tree.NamespaceValue(mixin, lookups);\r\n                                }\r\n                                else {\r\n                                    return mixin;\r\n                                }\r\n                            }\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    /**\r\n                     * Matching elements for mixins\r\n                     * (Start with . or # and can have > )\r\n                     */\r\n                    elements: function () {\r\n                        var elements;\r\n                        var e;\r\n                        var c;\r\n                        var elem;\r\n                        var elemIndex;\r\n                        var re = /^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/;\r\n                        while (true) {\r\n                            elemIndex = parserInput.i;\r\n                            e = parserInput.$re(re);\r\n                            if (!e) {\r\n                                break;\r\n                            }\r\n                            elem = new (tree.Element)(c, e, false, elemIndex, fileInfo);\r\n                            if (elements) {\r\n                                elements.push(elem);\r\n                            }\r\n                            else {\r\n                                elements = [elem];\r\n                            }\r\n                            c = parserInput.$char('>');\r\n                        }\r\n                        return elements;\r\n                    },\r\n                    args: function (isCall) {\r\n                        var entities = parsers.entities;\r\n                        var returner = { args: null, variadic: false };\r\n                        var expressions = [];\r\n                        var argsSemiColon = [];\r\n                        var argsComma = [];\r\n                        var isSemiColonSeparated;\r\n                        var expressionContainsNamed;\r\n                        var name;\r\n                        var nameLoop;\r\n                        var value;\r\n                        var arg;\r\n                        var expand;\r\n                        var hasSep = true;\r\n                        parserInput.save();\r\n                        while (true) {\r\n                            if (isCall) {\r\n                                arg = parsers.detachedRuleset() || parsers.expression();\r\n                            }\r\n                            else {\r\n                                parserInput.commentStore.length = 0;\r\n                                if (parserInput.$str('...')) {\r\n                                    returner.variadic = true;\r\n                                    if (parserInput.$char(';') && !isSemiColonSeparated) {\r\n                                        isSemiColonSeparated = true;\r\n                                    }\r\n                                    (isSemiColonSeparated ? argsSemiColon : argsComma)\r\n                                        .push({ variadic: true });\r\n                                    break;\r\n                                }\r\n                                arg = entities.variable() || entities.property() || entities.literal() || entities.keyword() || this.call(true);\r\n                            }\r\n                            if (!arg || !hasSep) {\r\n                                break;\r\n                            }\r\n                            nameLoop = null;\r\n                            if (arg.throwAwayComments) {\r\n                                arg.throwAwayComments();\r\n                            }\r\n                            value = arg;\r\n                            var val = null;\r\n                            if (isCall) {\r\n                                // Variable\r\n                                if (arg.value && arg.value.length == 1) {\r\n                                    val = arg.value[0];\r\n                                }\r\n                            }\r\n                            else {\r\n                                val = arg;\r\n                            }\r\n                            if (val && (val instanceof tree.Variable || val instanceof tree.Property)) {\r\n                                if (parserInput.$char(':')) {\r\n                                    if (expressions.length > 0) {\r\n                                        if (isSemiColonSeparated) {\r\n                                            error('Cannot mix ; and , as delimiter types');\r\n                                        }\r\n                                        expressionContainsNamed = true;\r\n                                    }\r\n                                    value = parsers.detachedRuleset() || parsers.expression();\r\n                                    if (!value) {\r\n                                        if (isCall) {\r\n                                            error('could not understand value for named argument');\r\n                                        }\r\n                                        else {\r\n                                            parserInput.restore();\r\n                                            returner.args = [];\r\n                                            return returner;\r\n                                        }\r\n                                    }\r\n                                    nameLoop = (name = val.name);\r\n                                }\r\n                                else if (parserInput.$str('...')) {\r\n                                    if (!isCall) {\r\n                                        returner.variadic = true;\r\n                                        if (parserInput.$char(';') && !isSemiColonSeparated) {\r\n                                            isSemiColonSeparated = true;\r\n                                        }\r\n                                        (isSemiColonSeparated ? argsSemiColon : argsComma)\r\n                                            .push({ name: arg.name, variadic: true });\r\n                                        break;\r\n                                    }\r\n                                    else {\r\n                                        expand = true;\r\n                                    }\r\n                                }\r\n                                else if (!isCall) {\r\n                                    name = nameLoop = val.name;\r\n                                    value = null;\r\n                                }\r\n                            }\r\n                            if (value) {\r\n                                expressions.push(value);\r\n                            }\r\n                            argsComma.push({ name: nameLoop, value: value, expand: expand });\r\n                            if (parserInput.$char(',')) {\r\n                                hasSep = true;\r\n                                continue;\r\n                            }\r\n                            hasSep = parserInput.$char(';') === ';';\r\n                            if (hasSep || isSemiColonSeparated) {\r\n                                if (expressionContainsNamed) {\r\n                                    error('Cannot mix ; and , as delimiter types');\r\n                                }\r\n                                isSemiColonSeparated = true;\r\n                                if (expressions.length > 1) {\r\n                                    value = new (tree.Value)(expressions);\r\n                                }\r\n                                argsSemiColon.push({ name: name, value: value, expand: expand });\r\n                                name = null;\r\n                                expressions = [];\r\n                                expressionContainsNamed = false;\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        returner.args = isSemiColonSeparated ? argsSemiColon : argsComma;\r\n                        return returner;\r\n                    },\r\n                    //\r\n                    // A Mixin definition, with a list of parameters\r\n                    //\r\n                    //     .rounded (@radius: 2px, @color) {\r\n                    //        ...\r\n                    //     }\r\n                    //\r\n                    // Until we have a finer grained state-machine, we have to\r\n                    // do a look-ahead, to make sure we don't have a mixin call.\r\n                    // See the `rule` function for more information.\r\n                    //\r\n                    // We start by matching `.rounded (`, and then proceed on to\r\n                    // the argument list, which has optional default values.\r\n                    // We store the parameters in `params`, with a `value` key,\r\n                    // if there is a value, such as in the case of `@radius`.\r\n                    //\r\n                    // Once we've got our params list, and a closing `)`, we parse\r\n                    // the `{...}` block.\r\n                    //\r\n                    definition: function () {\r\n                        var name;\r\n                        var params = [];\r\n                        var match;\r\n                        var ruleset;\r\n                        var cond;\r\n                        var variadic = false;\r\n                        if ((parserInput.currentChar() !== '.' && parserInput.currentChar() !== '#') ||\r\n                            parserInput.peek(/^[^{]*\\}/)) {\r\n                            return;\r\n                        }\r\n                        parserInput.save();\r\n                        match = parserInput.$re(/^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(/);\r\n                        if (match) {\r\n                            name = match[1];\r\n                            var argInfo = this.args(false);\r\n                            params = argInfo.args;\r\n                            variadic = argInfo.variadic;\r\n                            // .mixincall(\"@{a}\");\r\n                            // looks a bit like a mixin definition..\r\n                            // also\r\n                            // .mixincall(@a: {rule: set;});\r\n                            // so we have to be nice and restore\r\n                            if (!parserInput.$char(')')) {\r\n                                parserInput.restore('Missing closing \\')\\'');\r\n                                return;\r\n                            }\r\n                            parserInput.commentStore.length = 0;\r\n                            if (parserInput.$str('when')) { // Guard\r\n                                cond = expect(parsers.conditions, 'expected condition');\r\n                            }\r\n                            ruleset = parsers.block();\r\n                            if (ruleset) {\r\n                                parserInput.forget();\r\n                                return new (tree.mixin.Definition)(name, params, ruleset, cond, variadic);\r\n                            }\r\n                            else {\r\n                                parserInput.restore();\r\n                            }\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    },\r\n                    ruleLookups: function () {\r\n                        var rule;\r\n                        var lookups = [];\r\n                        if (parserInput.currentChar() !== '[') {\r\n                            return;\r\n                        }\r\n                        while (true) {\r\n                            parserInput.save();\r\n                            rule = this.lookupValue();\r\n                            if (!rule && rule !== '') {\r\n                                parserInput.restore();\r\n                                break;\r\n                            }\r\n                            lookups.push(rule);\r\n                            parserInput.forget();\r\n                        }\r\n                        if (lookups.length > 0) {\r\n                            return lookups;\r\n                        }\r\n                    },\r\n                    lookupValue: function () {\r\n                        parserInput.save();\r\n                        if (!parserInput.$char('[')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        var name = parserInput.$re(/^(?:[@$]{0,2})[_a-zA-Z0-9-]*/);\r\n                        if (!parserInput.$char(']')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (name || name === '') {\r\n                            parserInput.forget();\r\n                            return name;\r\n                        }\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                //\r\n                // Entities are the smallest recognized token,\r\n                // and can be found inside a rule's value.\r\n                //\r\n                entity: function () {\r\n                    var entities = this.entities;\r\n                    return this.comment() || entities.literal() || entities.variable() || entities.url() ||\r\n                        entities.property() || entities.call() || entities.keyword() || this.mixin.call(true) ||\r\n                        entities.javascript();\r\n                },\r\n                //\r\n                // A Declaration terminator. Note that we use `peek()` to check for '}',\r\n                // because the `block` rule will be expecting it, but we still need to make sure\r\n                // it's there, if ';' was omitted.\r\n                //\r\n                end: function () {\r\n                    return parserInput.$char(';') || parserInput.peek('}');\r\n                },\r\n                //\r\n                // IE's alpha function\r\n                //\r\n                //     alpha(opacity=88)\r\n                //\r\n                ieAlpha: function () {\r\n                    var value;\r\n                    // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\r\n                    if (!parserInput.$re(/^opacity=/i)) {\r\n                        return;\r\n                    }\r\n                    value = parserInput.$re(/^\\d+/);\r\n                    if (!value) {\r\n                        value = expect(parsers.entities.variable, 'Could not parse alpha');\r\n                        value = \"@{\" + value.name.slice(1) + \"}\";\r\n                    }\r\n                    expectChar(')');\r\n                    return new tree.Quoted('', \"alpha(opacity=\" + value + \")\");\r\n                },\r\n                //\r\n                // A Selector Element\r\n                //\r\n                //     div\r\n                //     + h1\r\n                //     #socks\r\n                //     input[type=\"text\"]\r\n                //\r\n                // Elements are the building blocks for Selectors,\r\n                // they are made out of a `Combinator` (see combinator rule),\r\n                // and an element name, such as a tag a class, or `*`.\r\n                //\r\n                element: function () {\r\n                    var e;\r\n                    var c;\r\n                    var v;\r\n                    var index = parserInput.i;\r\n                    c = this.combinator();\r\n                    e = parserInput.$re(/^(?:\\d+\\.\\d+|\\d+)%/) ||\r\n                        parserInput.$re(/^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/) ||\r\n                        parserInput.$char('*') || parserInput.$char('&') || this.attribute() ||\r\n                        parserInput.$re(/^\\([^&()@]+\\)/) || parserInput.$re(/^[\\.#:](?=@)/) ||\r\n                        this.entities.variableCurly();\r\n                    if (!e) {\r\n                        parserInput.save();\r\n                        if (parserInput.$char('(')) {\r\n                            if ((v = this.selector(false)) && parserInput.$char(')')) {\r\n                                e = new (tree.Paren)(v);\r\n                                parserInput.forget();\r\n                            }\r\n                            else {\r\n                                parserInput.restore('Missing closing \\')\\'');\r\n                            }\r\n                        }\r\n                        else {\r\n                            parserInput.forget();\r\n                        }\r\n                    }\r\n                    if (e) {\r\n                        return new (tree.Element)(c, e, e instanceof tree.Variable, index, fileInfo);\r\n                    }\r\n                },\r\n                //\r\n                // Combinators combine elements together, in a Selector.\r\n                //\r\n                // Because our parser isn't white-space sensitive, special care\r\n                // has to be taken, when parsing the descendant combinator, ` `,\r\n                // as it's an empty space. We have to check the previous character\r\n                // in the input, to see if it's a ` ` character. More info on how\r\n                // we deal with this in *combinator.js*.\r\n                //\r\n                combinator: function () {\r\n                    var c = parserInput.currentChar();\r\n                    if (c === '/') {\r\n                        parserInput.save();\r\n                        var slashedCombinator = parserInput.$re(/^\\/[a-z]+\\//i);\r\n                        if (slashedCombinator) {\r\n                            parserInput.forget();\r\n                            return new (tree.Combinator)(slashedCombinator);\r\n                        }\r\n                        parserInput.restore();\r\n                    }\r\n                    if (c === '>' || c === '+' || c === '~' || c === '|' || c === '^') {\r\n                        parserInput.i++;\r\n                        if (c === '^' && parserInput.currentChar() === '^') {\r\n                            c = '^^';\r\n                            parserInput.i++;\r\n                        }\r\n                        while (parserInput.isWhitespace()) {\r\n                            parserInput.i++;\r\n                        }\r\n                        return new (tree.Combinator)(c);\r\n                    }\r\n                    else if (parserInput.isWhitespace(-1)) {\r\n                        return new (tree.Combinator)(' ');\r\n                    }\r\n                    else {\r\n                        return new (tree.Combinator)(null);\r\n                    }\r\n                },\r\n                //\r\n                // A CSS Selector\r\n                // with less extensions e.g. the ability to extend and guard\r\n                //\r\n                //     .class > div + h1\r\n                //     li a:hover\r\n                //\r\n                // Selectors are made out of one or more Elements, see above.\r\n                //\r\n                selector: function (isLess) {\r\n                    var index = parserInput.i;\r\n                    var elements;\r\n                    var extendList;\r\n                    var c;\r\n                    var e;\r\n                    var allExtends;\r\n                    var when;\r\n                    var condition;\r\n                    isLess = isLess !== false;\r\n                    while ((isLess && (extendList = this.extend())) || (isLess && (when = parserInput.$str('when'))) || (e = this.element())) {\r\n                        if (when) {\r\n                            condition = expect(this.conditions, 'expected condition');\r\n                        }\r\n                        else if (condition) {\r\n                            error('CSS guard can only be used at the end of selector');\r\n                        }\r\n                        else if (extendList) {\r\n                            if (allExtends) {\r\n                                allExtends = allExtends.concat(extendList);\r\n                            }\r\n                            else {\r\n                                allExtends = extendList;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (allExtends) {\r\n                                error('Extend can only be used at the end of selector');\r\n                            }\r\n                            c = parserInput.currentChar();\r\n                            if (elements) {\r\n                                elements.push(e);\r\n                            }\r\n                            else {\r\n                                elements = [e];\r\n                            }\r\n                            e = null;\r\n                        }\r\n                        if (c === '{' || c === '}' || c === ';' || c === ',' || c === ')') {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (elements) {\r\n                        return new (tree.Selector)(elements, allExtends, condition, index, fileInfo);\r\n                    }\r\n                    if (allExtends) {\r\n                        error('Extend must be used to extend a selector, it cannot be used on its own');\r\n                    }\r\n                },\r\n                selectors: function () {\r\n                    var s;\r\n                    var selectors;\r\n                    while (true) {\r\n                        s = this.selector();\r\n                        if (!s) {\r\n                            break;\r\n                        }\r\n                        if (selectors) {\r\n                            selectors.push(s);\r\n                        }\r\n                        else {\r\n                            selectors = [s];\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                        if (s.condition && selectors.length > 1) {\r\n                            error(\"Guards are only currently allowed on a single selector.\");\r\n                        }\r\n                        if (!parserInput.$char(',')) {\r\n                            break;\r\n                        }\r\n                        if (s.condition) {\r\n                            error(\"Guards are only currently allowed on a single selector.\");\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                    }\r\n                    return selectors;\r\n                },\r\n                attribute: function () {\r\n                    if (!parserInput.$char('[')) {\r\n                        return;\r\n                    }\r\n                    var entities = this.entities;\r\n                    var key;\r\n                    var val;\r\n                    var op;\r\n                    //\r\n                    // case-insensitive flag\r\n                    // e.g. [attr operator value i]\r\n                    //\r\n                    var cif;\r\n                    if (!(key = entities.variableCurly())) {\r\n                        key = expect(/^(?:[_A-Za-z0-9-\\*]*\\|)?(?:[_A-Za-z0-9-]|\\\\.)+/);\r\n                    }\r\n                    op = parserInput.$re(/^[|~*$^]?=/);\r\n                    if (op) {\r\n                        val = entities.quoted() || parserInput.$re(/^[0-9]+%/) || parserInput.$re(/^[\\w-]+/) || entities.variableCurly();\r\n                        if (val) {\r\n                            cif = parserInput.$re(/^[iIsS]/);\r\n                        }\r\n                    }\r\n                    expectChar(']');\r\n                    return new (tree.Attribute)(key, op, val, cif);\r\n                },\r\n                //\r\n                // The `block` rule is used by `ruleset` and `mixin.definition`.\r\n                // It's a wrapper around the `primary` rule, with added `{}`.\r\n                //\r\n                block: function () {\r\n                    var content;\r\n                    if (parserInput.$char('{') && (content = this.primary()) && parserInput.$char('}')) {\r\n                        return content;\r\n                    }\r\n                },\r\n                blockRuleset: function () {\r\n                    var block = this.block();\r\n                    if (block) {\r\n                        block = new tree.Ruleset(null, block);\r\n                    }\r\n                    return block;\r\n                },\r\n                detachedRuleset: function () {\r\n                    var argInfo;\r\n                    var params;\r\n                    var variadic;\r\n                    parserInput.save();\r\n                    if (parserInput.$re(/^[.#]\\(/)) {\r\n                        /**\r\n                         * DR args currently only implemented for each() function, and not\r\n                         * yet settable as `@dr: #(@arg) {}`\r\n                         * This should be done when DRs are merged with mixins.\r\n                         * See: https://github.com/less/less-meta/issues/16\r\n                         */\r\n                        argInfo = this.mixin.args(false);\r\n                        params = argInfo.args;\r\n                        variadic = argInfo.variadic;\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                    }\r\n                    var blockRuleset = this.blockRuleset();\r\n                    if (blockRuleset) {\r\n                        parserInput.forget();\r\n                        if (params) {\r\n                            return new tree.mixin.Definition(null, params, blockRuleset, null, variadic);\r\n                        }\r\n                        return new tree.DetachedRuleset(blockRuleset);\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // div, .class, body > p {...}\r\n                //\r\n                ruleset: function () {\r\n                    var selectors;\r\n                    var rules;\r\n                    var debugInfo;\r\n                    parserInput.save();\r\n                    if (context.dumpLineNumbers) {\r\n                        debugInfo = getDebugInfo(parserInput.i);\r\n                    }\r\n                    selectors = this.selectors();\r\n                    if (selectors && (rules = this.block())) {\r\n                        parserInput.forget();\r\n                        var ruleset = new (tree.Ruleset)(selectors, rules, context.strictImports);\r\n                        if (context.dumpLineNumbers) {\r\n                            ruleset.debugInfo = debugInfo;\r\n                        }\r\n                        return ruleset;\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                declaration: function () {\r\n                    var name;\r\n                    var value;\r\n                    var index = parserInput.i;\r\n                    var hasDR;\r\n                    var c = parserInput.currentChar();\r\n                    var important;\r\n                    var merge;\r\n                    var isVariable;\r\n                    if (c === '.' || c === '#' || c === '&' || c === ':') {\r\n                        return;\r\n                    }\r\n                    parserInput.save();\r\n                    name = this.variable() || this.ruleProperty();\r\n                    if (name) {\r\n                        isVariable = typeof name === 'string';\r\n                        if (isVariable) {\r\n                            value = this.detachedRuleset();\r\n                            if (value) {\r\n                                hasDR = true;\r\n                            }\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                        if (!value) {\r\n                            // a name returned by this.ruleProperty() is always an array of the form:\r\n                            // [string-1, ..., string-n, \"\"] or [string-1, ..., string-n, \"+\"]\r\n                            // where each item is a tree.Keyword or tree.Variable\r\n                            merge = !isVariable && name.length > 1 && name.pop().value;\r\n                            // Custom property values get permissive parsing\r\n                            if (name[0].value && name[0].value.slice(0, 2) === '--') {\r\n                                value = this.permissiveValue();\r\n                            }\r\n                            // Try to store values as anonymous\r\n                            // If we need the value later we'll re-parse it in ruleset.parseValue\r\n                            else {\r\n                                value = this.anonymousValue();\r\n                            }\r\n                            if (value) {\r\n                                parserInput.forget();\r\n                                // anonymous values absorb the end ';' which is required for them to work\r\n                                return new (tree.Declaration)(name, value, false, merge, index, fileInfo);\r\n                            }\r\n                            if (!value) {\r\n                                value = this.value();\r\n                            }\r\n                            if (value) {\r\n                                important = this.important();\r\n                            }\r\n                            else if (isVariable) {\r\n                                // As a last resort, try permissiveValue\r\n                                value = this.permissiveValue();\r\n                            }\r\n                        }\r\n                        if (value && (this.end() || hasDR)) {\r\n                            parserInput.forget();\r\n                            return new (tree.Declaration)(name, value, important, merge, index, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                anonymousValue: function () {\r\n                    var index = parserInput.i;\r\n                    var match = parserInput.$re(/^([^.#@\\$+\\/'\"*`(;{}-]*);/);\r\n                    if (match) {\r\n                        return new (tree.Anonymous)(match[1], index);\r\n                    }\r\n                },\r\n                /**\r\n                 * Used for custom properties, at-rules, and variables (as fallback)\r\n                 * Parses almost anything inside of {} [] () \"\" blocks\r\n                 * until it reaches outer-most tokens.\r\n                 *\r\n                 * First, it will try to parse comments and entities to reach\r\n                 * the end. This is mostly like the Expression parser except no\r\n                 * math is allowed.\r\n                 */\r\n                permissiveValue: function (untilTokens) {\r\n                    var i;\r\n                    var e;\r\n                    var done;\r\n                    var value;\r\n                    var tok = untilTokens || ';';\r\n                    var index = parserInput.i;\r\n                    var result = [];\r\n                    function testCurrentChar() {\r\n                        var char = parserInput.currentChar();\r\n                        if (typeof tok === 'string') {\r\n                            return char === tok;\r\n                        }\r\n                        else {\r\n                            return tok.test(char);\r\n                        }\r\n                    }\r\n                    if (testCurrentChar()) {\r\n                        return;\r\n                    }\r\n                    value = [];\r\n                    do {\r\n                        e = this.comment();\r\n                        if (e) {\r\n                            value.push(e);\r\n                            continue;\r\n                        }\r\n                        e = this.entity();\r\n                        if (e) {\r\n                            value.push(e);\r\n                        }\r\n                    } while (e);\r\n                    done = testCurrentChar();\r\n                    if (value.length > 0) {\r\n                        value = new (tree.Expression)(value);\r\n                        if (done) {\r\n                            return value;\r\n                        }\r\n                        else {\r\n                            result.push(value);\r\n                        }\r\n                        // Preserve space before $parseUntil as it will not\r\n                        if (parserInput.prevChar() === ' ') {\r\n                            result.push(new tree.Anonymous(' ', index));\r\n                        }\r\n                    }\r\n                    parserInput.save();\r\n                    value = parserInput.$parseUntil(tok);\r\n                    if (value) {\r\n                        if (typeof value === 'string') {\r\n                            error(\"Expected '\" + value + \"'\", 'Parse');\r\n                        }\r\n                        if (value.length === 1 && value[0] === ' ') {\r\n                            parserInput.forget();\r\n                            return new tree.Anonymous('', index);\r\n                        }\r\n                        var item = void 0;\r\n                        for (i = 0; i < value.length; i++) {\r\n                            item = value[i];\r\n                            if (Array.isArray(item)) {\r\n                                // Treat actual quotes as normal quoted values\r\n                                result.push(new tree.Quoted(item[0], item[1], true, index, fileInfo));\r\n                            }\r\n                            else {\r\n                                if (i === value.length - 1) {\r\n                                    item = item.trim();\r\n                                }\r\n                                // Treat like quoted values, but replace vars like unquoted expressions\r\n                                var quote = new tree.Quoted('\\'', item, true, index, fileInfo);\r\n                                quote.variableRegex = /@([\\w-]+)/g;\r\n                                quote.propRegex = /\\$([\\w-]+)/g;\r\n                                result.push(quote);\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        return new tree.Expression(result, true);\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // An @import atrule\r\n                //\r\n                //     @import \"lib\";\r\n                //\r\n                // Depending on our environment, importing is done differently:\r\n                // In the browser, it's an XHR request, in Node, it would be a\r\n                // file-system operation. The function used for importing is\r\n                // stored in `import`, which we pass to the Import constructor.\r\n                //\r\n                'import': function () {\r\n                    var path;\r\n                    var features;\r\n                    var index = parserInput.i;\r\n                    var dir = parserInput.$re(/^@import\\s+/);\r\n                    if (dir) {\r\n                        var options = (dir ? this.importOptions() : null) || {};\r\n                        if ((path = this.entities.quoted() || this.entities.url())) {\r\n                            features = this.mediaFeatures();\r\n                            if (!parserInput.$char(';')) {\r\n                                parserInput.i = index;\r\n                                error('missing semi-colon or unrecognised media features on import');\r\n                            }\r\n                            features = features && new (tree.Value)(features);\r\n                            return new (tree.Import)(path, features, options, index, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.i = index;\r\n                            error('malformed import statement');\r\n                        }\r\n                    }\r\n                },\r\n                importOptions: function () {\r\n                    var o;\r\n                    var options = {};\r\n                    var optionName;\r\n                    var value;\r\n                    // list of options, surrounded by parens\r\n                    if (!parserInput.$char('(')) {\r\n                        return null;\r\n                    }\r\n                    do {\r\n                        o = this.importOption();\r\n                        if (o) {\r\n                            optionName = o;\r\n                            value = true;\r\n                            switch (optionName) {\r\n                                case 'css':\r\n                                    optionName = 'less';\r\n                                    value = false;\r\n                                    break;\r\n                                case 'once':\r\n                                    optionName = 'multiple';\r\n                                    value = false;\r\n                                    break;\r\n                            }\r\n                            options[optionName] = value;\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    } while (o);\r\n                    expectChar(')');\r\n                    return options;\r\n                },\r\n                importOption: function () {\r\n                    var opt = parserInput.$re(/^(less|css|multiple|once|inline|reference|optional)/);\r\n                    if (opt) {\r\n                        return opt[1];\r\n                    }\r\n                },\r\n                mediaFeature: function () {\r\n                    var entities = this.entities;\r\n                    var nodes = [];\r\n                    var e;\r\n                    var p;\r\n                    parserInput.save();\r\n                    do {\r\n                        e = entities.keyword() || entities.variable() || entities.mixinLookup();\r\n                        if (e) {\r\n                            nodes.push(e);\r\n                        }\r\n                        else if (parserInput.$char('(')) {\r\n                            p = this.property();\r\n                            e = this.value();\r\n                            if (parserInput.$char(')')) {\r\n                                if (p && e) {\r\n                                    nodes.push(new (tree.Paren)(new (tree.Declaration)(p, e, null, null, parserInput.i, fileInfo, true)));\r\n                                }\r\n                                else if (e) {\r\n                                    nodes.push(new (tree.Paren)(e));\r\n                                }\r\n                                else {\r\n                                    error('badly formed media feature definition');\r\n                                }\r\n                            }\r\n                            else {\r\n                                error('Missing closing \\')\\'', 'Parse');\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    parserInput.forget();\r\n                    if (nodes.length > 0) {\r\n                        return new (tree.Expression)(nodes);\r\n                    }\r\n                },\r\n                mediaFeatures: function () {\r\n                    var entities = this.entities;\r\n                    var features = [];\r\n                    var e;\r\n                    do {\r\n                        e = this.mediaFeature();\r\n                        if (e) {\r\n                            features.push(e);\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        else {\r\n                            e = entities.variable() || entities.mixinLookup();\r\n                            if (e) {\r\n                                features.push(e);\r\n                                if (!parserInput.$char(',')) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    return features.length > 0 ? features : null;\r\n                },\r\n                media: function () {\r\n                    var features;\r\n                    var rules;\r\n                    var media;\r\n                    var debugInfo;\r\n                    var index = parserInput.i;\r\n                    if (context.dumpLineNumbers) {\r\n                        debugInfo = getDebugInfo(index);\r\n                    }\r\n                    parserInput.save();\r\n                    if (parserInput.$str('@media')) {\r\n                        features = this.mediaFeatures();\r\n                        rules = this.block();\r\n                        if (!rules) {\r\n                            error('media definitions require block statements after any features');\r\n                        }\r\n                        parserInput.forget();\r\n                        media = new (tree.Media)(rules, features, index, fileInfo);\r\n                        if (context.dumpLineNumbers) {\r\n                            media.debugInfo = debugInfo;\r\n                        }\r\n                        return media;\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // A @plugin directive, used to import plugins dynamically.\r\n                //\r\n                //     @plugin (args) \"lib\";\r\n                //\r\n                plugin: function () {\r\n                    var path;\r\n                    var args;\r\n                    var options;\r\n                    var index = parserInput.i;\r\n                    var dir = parserInput.$re(/^@plugin\\s+/);\r\n                    if (dir) {\r\n                        args = this.pluginArgs();\r\n                        if (args) {\r\n                            options = {\r\n                                pluginArgs: args,\r\n                                isPlugin: true\r\n                            };\r\n                        }\r\n                        else {\r\n                            options = { isPlugin: true };\r\n                        }\r\n                        if ((path = this.entities.quoted() || this.entities.url())) {\r\n                            if (!parserInput.$char(';')) {\r\n                                parserInput.i = index;\r\n                                error('missing semi-colon on @plugin');\r\n                            }\r\n                            return new (tree.Import)(path, null, options, index, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.i = index;\r\n                            error('malformed @plugin statement');\r\n                        }\r\n                    }\r\n                },\r\n                pluginArgs: function () {\r\n                    // list of options, surrounded by parens\r\n                    parserInput.save();\r\n                    if (!parserInput.$char('(')) {\r\n                        parserInput.restore();\r\n                        return null;\r\n                    }\r\n                    var args = parserInput.$re(/^\\s*([^\\);]+)\\)\\s*/);\r\n                    if (args[1]) {\r\n                        parserInput.forget();\r\n                        return args[1].trim();\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                        return null;\r\n                    }\r\n                },\r\n                //\r\n                // A CSS AtRule\r\n                //\r\n                //     @charset \"utf-8\";\r\n                //\r\n                atrule: function () {\r\n                    var index = parserInput.i;\r\n                    var name;\r\n                    var value;\r\n                    var rules;\r\n                    var nonVendorSpecificName;\r\n                    var hasIdentifier;\r\n                    var hasExpression;\r\n                    var hasUnknown;\r\n                    var hasBlock = true;\r\n                    var isRooted = true;\r\n                    if (parserInput.currentChar() !== '@') {\r\n                        return;\r\n                    }\r\n                    value = this['import']() || this.plugin() || this.media();\r\n                    if (value) {\r\n                        return value;\r\n                    }\r\n                    parserInput.save();\r\n                    name = parserInput.$re(/^@[a-z-]+/);\r\n                    if (!name) {\r\n                        return;\r\n                    }\r\n                    nonVendorSpecificName = name;\r\n                    if (name.charAt(1) == '-' && name.indexOf('-', 2) > 0) {\r\n                        nonVendorSpecificName = \"@\" + name.slice(name.indexOf('-', 2) + 1);\r\n                    }\r\n                    switch (nonVendorSpecificName) {\r\n                        case '@charset':\r\n                            hasIdentifier = true;\r\n                            hasBlock = false;\r\n                            break;\r\n                        case '@namespace':\r\n                            hasExpression = true;\r\n                            hasBlock = false;\r\n                            break;\r\n                        case '@keyframes':\r\n                        case '@counter-style':\r\n                            hasIdentifier = true;\r\n                            break;\r\n                        case '@document':\r\n                        case '@supports':\r\n                            hasUnknown = true;\r\n                            isRooted = false;\r\n                            break;\r\n                        default:\r\n                            hasUnknown = true;\r\n                            break;\r\n                    }\r\n                    parserInput.commentStore.length = 0;\r\n                    if (hasIdentifier) {\r\n                        value = this.entity();\r\n                        if (!value) {\r\n                            error(\"expected \" + name + \" identifier\");\r\n                        }\r\n                    }\r\n                    else if (hasExpression) {\r\n                        value = this.expression();\r\n                        if (!value) {\r\n                            error(\"expected \" + name + \" expression\");\r\n                        }\r\n                    }\r\n                    else if (hasUnknown) {\r\n                        value = this.permissiveValue(/^[{;]/);\r\n                        hasBlock = (parserInput.currentChar() === '{');\r\n                        if (!value) {\r\n                            if (!hasBlock && parserInput.currentChar() !== ';') {\r\n                                error(name + \" rule is missing block or ending semi-colon\");\r\n                            }\r\n                        }\r\n                        else if (!value.value) {\r\n                            value = null;\r\n                        }\r\n                    }\r\n                    if (hasBlock) {\r\n                        rules = this.blockRuleset();\r\n                    }\r\n                    if (rules || (!hasBlock && value && parserInput.$char(';'))) {\r\n                        parserInput.forget();\r\n                        return new (tree.AtRule)(name, value, rules, index, fileInfo, context.dumpLineNumbers ? getDebugInfo(index) : null, isRooted);\r\n                    }\r\n                    parserInput.restore('at-rule options not recognised');\r\n                },\r\n                //\r\n                // A Value is a comma-delimited list of Expressions\r\n                //\r\n                //     font-family: Baskerville, Georgia, serif;\r\n                //\r\n                // In a Rule, a Value represents everything after the `:`,\r\n                // and before the `;`.\r\n                //\r\n                value: function () {\r\n                    var e;\r\n                    var expressions = [];\r\n                    var index = parserInput.i;\r\n                    do {\r\n                        e = this.expression();\r\n                        if (e) {\r\n                            expressions.push(e);\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    if (expressions.length > 0) {\r\n                        return new (tree.Value)(expressions, index);\r\n                    }\r\n                },\r\n                important: function () {\r\n                    if (parserInput.currentChar() === '!') {\r\n                        return parserInput.$re(/^! *important/);\r\n                    }\r\n                },\r\n                sub: function () {\r\n                    var a;\r\n                    var e;\r\n                    parserInput.save();\r\n                    if (parserInput.$char('(')) {\r\n                        a = this.addition();\r\n                        if (a && parserInput.$char(')')) {\r\n                            parserInput.forget();\r\n                            e = new (tree.Expression)([a]);\r\n                            e.parens = true;\r\n                            return e;\r\n                        }\r\n                        parserInput.restore('Expected \\')\\'');\r\n                        return;\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                multiplication: function () {\r\n                    var m;\r\n                    var a;\r\n                    var op;\r\n                    var operation;\r\n                    var isSpaced;\r\n                    m = this.operand();\r\n                    if (m) {\r\n                        isSpaced = parserInput.isWhitespace(-1);\r\n                        while (true) {\r\n                            if (parserInput.peek(/^\\/[*\\/]/)) {\r\n                                break;\r\n                            }\r\n                            parserInput.save();\r\n                            op = parserInput.$char('/') || parserInput.$char('*') || parserInput.$str('./');\r\n                            if (!op) {\r\n                                parserInput.forget();\r\n                                break;\r\n                            }\r\n                            a = this.operand();\r\n                            if (!a) {\r\n                                parserInput.restore();\r\n                                break;\r\n                            }\r\n                            parserInput.forget();\r\n                            m.parensInOp = true;\r\n                            a.parensInOp = true;\r\n                            operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\r\n                            isSpaced = parserInput.isWhitespace(-1);\r\n                        }\r\n                        return operation || m;\r\n                    }\r\n                },\r\n                addition: function () {\r\n                    var m;\r\n                    var a;\r\n                    var op;\r\n                    var operation;\r\n                    var isSpaced;\r\n                    m = this.multiplication();\r\n                    if (m) {\r\n                        isSpaced = parserInput.isWhitespace(-1);\r\n                        while (true) {\r\n                            op = parserInput.$re(/^[-+]\\s+/) || (!isSpaced && (parserInput.$char('+') || parserInput.$char('-')));\r\n                            if (!op) {\r\n                                break;\r\n                            }\r\n                            a = this.multiplication();\r\n                            if (!a) {\r\n                                break;\r\n                            }\r\n                            m.parensInOp = true;\r\n                            a.parensInOp = true;\r\n                            operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\r\n                            isSpaced = parserInput.isWhitespace(-1);\r\n                        }\r\n                        return operation || m;\r\n                    }\r\n                },\r\n                conditions: function () {\r\n                    var a;\r\n                    var b;\r\n                    var index = parserInput.i;\r\n                    var condition;\r\n                    a = this.condition(true);\r\n                    if (a) {\r\n                        while (true) {\r\n                            if (!parserInput.peek(/^,\\s*(not\\s*)?\\(/) || !parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                            b = this.condition(true);\r\n                            if (!b) {\r\n                                break;\r\n                            }\r\n                            condition = new (tree.Condition)('or', condition || a, b, index);\r\n                        }\r\n                        return condition || a;\r\n                    }\r\n                },\r\n                condition: function (needsParens) {\r\n                    var result;\r\n                    var logical;\r\n                    var next;\r\n                    function or() {\r\n                        return parserInput.$str('or');\r\n                    }\r\n                    result = this.conditionAnd(needsParens);\r\n                    if (!result) {\r\n                        return;\r\n                    }\r\n                    logical = or();\r\n                    if (logical) {\r\n                        next = this.condition(needsParens);\r\n                        if (next) {\r\n                            result = new (tree.Condition)(logical, result, next);\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    return result;\r\n                },\r\n                conditionAnd: function (needsParens) {\r\n                    var result;\r\n                    var logical;\r\n                    var next;\r\n                    var self = this;\r\n                    function insideCondition() {\r\n                        var cond = self.negatedCondition(needsParens) || self.parenthesisCondition(needsParens);\r\n                        if (!cond && !needsParens) {\r\n                            return self.atomicCondition(needsParens);\r\n                        }\r\n                        return cond;\r\n                    }\r\n                    function and() {\r\n                        return parserInput.$str('and');\r\n                    }\r\n                    result = insideCondition();\r\n                    if (!result) {\r\n                        return;\r\n                    }\r\n                    logical = and();\r\n                    if (logical) {\r\n                        next = this.conditionAnd(needsParens);\r\n                        if (next) {\r\n                            result = new (tree.Condition)(logical, result, next);\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    return result;\r\n                },\r\n                negatedCondition: function (needsParens) {\r\n                    if (parserInput.$str('not')) {\r\n                        var result = this.parenthesisCondition(needsParens);\r\n                        if (result) {\r\n                            result.negate = !result.negate;\r\n                        }\r\n                        return result;\r\n                    }\r\n                },\r\n                parenthesisCondition: function (needsParens) {\r\n                    function tryConditionFollowedByParenthesis(me) {\r\n                        var body;\r\n                        parserInput.save();\r\n                        body = me.condition(needsParens);\r\n                        if (!body) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return body;\r\n                    }\r\n                    var body;\r\n                    parserInput.save();\r\n                    if (!parserInput.$str('(')) {\r\n                        parserInput.restore();\r\n                        return;\r\n                    }\r\n                    body = tryConditionFollowedByParenthesis(this);\r\n                    if (body) {\r\n                        parserInput.forget();\r\n                        return body;\r\n                    }\r\n                    body = this.atomicCondition(needsParens);\r\n                    if (!body) {\r\n                        parserInput.restore();\r\n                        return;\r\n                    }\r\n                    if (!parserInput.$char(')')) {\r\n                        parserInput.restore(\"expected ')' got '\" + parserInput.currentChar() + \"'\");\r\n                        return;\r\n                    }\r\n                    parserInput.forget();\r\n                    return body;\r\n                },\r\n                atomicCondition: function (needsParens) {\r\n                    var entities = this.entities;\r\n                    var index = parserInput.i;\r\n                    var a;\r\n                    var b;\r\n                    var c;\r\n                    var op;\r\n                    function cond() {\r\n                        return this.addition() || entities.keyword() || entities.quoted() || entities.mixinLookup();\r\n                    }\r\n                    cond = cond.bind(this);\r\n                    a = cond();\r\n                    if (a) {\r\n                        if (parserInput.$char('>')) {\r\n                            if (parserInput.$char('=')) {\r\n                                op = '>=';\r\n                            }\r\n                            else {\r\n                                op = '>';\r\n                            }\r\n                        }\r\n                        else if (parserInput.$char('<')) {\r\n                            if (parserInput.$char('=')) {\r\n                                op = '<=';\r\n                            }\r\n                            else {\r\n                                op = '<';\r\n                            }\r\n                        }\r\n                        else if (parserInput.$char('=')) {\r\n                            if (parserInput.$char('>')) {\r\n                                op = '=>';\r\n                            }\r\n                            else if (parserInput.$char('<')) {\r\n                                op = '=<';\r\n                            }\r\n                            else {\r\n                                op = '=';\r\n                            }\r\n                        }\r\n                        if (op) {\r\n                            b = cond();\r\n                            if (b) {\r\n                                c = new (tree.Condition)(op, a, b, index, false);\r\n                            }\r\n                            else {\r\n                                error('expected expression');\r\n                            }\r\n                        }\r\n                        else {\r\n                            c = new (tree.Condition)('=', a, new (tree.Keyword)('true'), index, false);\r\n                        }\r\n                        return c;\r\n                    }\r\n                },\r\n                //\r\n                // An operand is anything that can be part of an operation,\r\n                // such as a Color, or a Variable\r\n                //\r\n                operand: function () {\r\n                    var entities = this.entities;\r\n                    var negate;\r\n                    if (parserInput.peek(/^-[@\\$\\(]/)) {\r\n                        negate = parserInput.$char('-');\r\n                    }\r\n                    var o = this.sub() || entities.dimension() ||\r\n                        entities.color() || entities.variable() ||\r\n                        entities.property() || entities.call() ||\r\n                        entities.quoted(true) || entities.colorKeyword() ||\r\n                        entities.mixinLookup();\r\n                    if (negate) {\r\n                        o.parensInOp = true;\r\n                        o = new (tree.Negative)(o);\r\n                    }\r\n                    return o;\r\n                },\r\n                //\r\n                // Expressions either represent mathematical operations,\r\n                // or white-space delimited Entities.\r\n                //\r\n                //     1px solid black\r\n                //     @var * 2\r\n                //\r\n                expression: function () {\r\n                    var entities = [];\r\n                    var e;\r\n                    var delim;\r\n                    var index = parserInput.i;\r\n                    do {\r\n                        e = this.comment();\r\n                        if (e) {\r\n                            entities.push(e);\r\n                            continue;\r\n                        }\r\n                        e = this.addition() || this.entity();\r\n                        if (e instanceof tree.Comment) {\r\n                            e = null;\r\n                        }\r\n                        if (e) {\r\n                            entities.push(e);\r\n                            // operations do not allow keyword \"/\" dimension (e.g. small/20px) so we support that here\r\n                            if (!parserInput.peek(/^\\/[\\/*]/)) {\r\n                                delim = parserInput.$char('/');\r\n                                if (delim) {\r\n                                    entities.push(new (tree.Anonymous)(delim, index));\r\n                                }\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    if (entities.length > 0) {\r\n                        return new (tree.Expression)(entities);\r\n                    }\r\n                },\r\n                property: function () {\r\n                    var name = parserInput.$re(/^(\\*?-?[_a-zA-Z0-9-]+)\\s*:/);\r\n                    if (name) {\r\n                        return name[1];\r\n                    }\r\n                },\r\n                ruleProperty: function () {\r\n                    var name = [];\r\n                    var index = [];\r\n                    var s;\r\n                    var k;\r\n                    parserInput.save();\r\n                    var simpleProperty = parserInput.$re(/^([_a-zA-Z0-9-]+)\\s*:/);\r\n                    if (simpleProperty) {\r\n                        name = [new (tree.Keyword)(simpleProperty[1])];\r\n                        parserInput.forget();\r\n                        return name;\r\n                    }\r\n                    function match(re) {\r\n                        var i = parserInput.i;\r\n                        var chunk = parserInput.$re(re);\r\n                        if (chunk) {\r\n                            index.push(i);\r\n                            return name.push(chunk[1]);\r\n                        }\r\n                    }\r\n                    match(/^(\\*?)/);\r\n                    while (true) {\r\n                        if (!match(/^((?:[\\w-]+)|(?:[@\\$]\\{[\\w-]+\\}))/)) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if ((name.length > 1) && match(/^((?:\\+_|\\+)?)\\s*:/)) {\r\n                        parserInput.forget();\r\n                        // at last, we have the complete match now. move forward,\r\n                        // convert name particles to tree objects and return:\r\n                        if (name[0] === '') {\r\n                            name.shift();\r\n                            index.shift();\r\n                        }\r\n                        for (k = 0; k < name.length; k++) {\r\n                            s = name[k];\r\n                            name[k] = (s.charAt(0) !== '@' && s.charAt(0) !== '$') ?\r\n                                new (tree.Keyword)(s) :\r\n                                (s.charAt(0) === '@' ?\r\n                                    new (tree.Variable)(\"@\" + s.slice(2, -1), index[k], fileInfo) :\r\n                                    new (tree.Property)(\"$\" + s.slice(2, -1), index[k], fileInfo));\r\n                        }\r\n                        return name;\r\n                    }\r\n                    parserInput.restore();\r\n                }\r\n            }\r\n        };\r\n    };\r\n    Parser.serializeVars = function (vars) {\r\n        var s = '';\r\n        for (var name_1 in vars) {\r\n            if (Object.hasOwnProperty.call(vars, name_1)) {\r\n                var value = vars[name_1];\r\n                s += ((name_1[0] === '@') ? '' : '@') + name_1 + \": \" + value + ((String(value).slice(-1) === ';') ? '' : ';');\r\n            }\r\n        }\r\n        return s;\r\n    };\n\n    function boolean(condition) {\r\n        return condition ? Keyword.True : Keyword.False;\r\n    }\r\n    /**\r\n     * Functions with evalArgs set to false are sent context\r\n     * as the first argument.\r\n     */\r\n    function If(context, condition, trueValue, falseValue) {\r\n        return condition.eval(context) ? trueValue.eval(context)\r\n            : (falseValue ? falseValue.eval(context) : new Anonymous);\r\n    }\r\n    If.evalArgs = false;\r\n    function isdefined(context, variable) {\r\n        try {\r\n            variable.eval(context);\r\n            return Keyword.True;\r\n        }\r\n        catch (e) {\r\n            return Keyword.False;\r\n        }\r\n    }\r\n    isdefined.evalArgs = false;\r\n    var boolean$1 = { isdefined: isdefined, boolean: boolean, 'if': If };\n\n    var colorFunctions;\r\n    function clamp(val) {\r\n        return Math.min(1, Math.max(0, val));\r\n    }\r\n    function hsla(origColor, hsl) {\r\n        var color = colorFunctions.hsla(hsl.h, hsl.s, hsl.l, hsl.a);\r\n        if (color) {\r\n            if (origColor.value &&\r\n                /^(rgb|hsl)/.test(origColor.value)) {\r\n                color.value = origColor.value;\r\n            }\r\n            else {\r\n                color.value = 'rgb';\r\n            }\r\n            return color;\r\n        }\r\n    }\r\n    function toHSL(color) {\r\n        if (color.toHSL) {\r\n            return color.toHSL();\r\n        }\r\n        else {\r\n            throw new Error('Argument cannot be evaluated to a color');\r\n        }\r\n    }\r\n    function toHSV(color) {\r\n        if (color.toHSV) {\r\n            return color.toHSV();\r\n        }\r\n        else {\r\n            throw new Error('Argument cannot be evaluated to a color');\r\n        }\r\n    }\r\n    function number$1(n) {\r\n        if (n instanceof Dimension) {\r\n            return parseFloat(n.unit.is('%') ? n.value / 100 : n.value);\r\n        }\r\n        else if (typeof n === 'number') {\r\n            return n;\r\n        }\r\n        else {\r\n            throw {\r\n                type: 'Argument',\r\n                message: 'color functions take numbers as parameters'\r\n            };\r\n        }\r\n    }\r\n    function scaled(n, size) {\r\n        if (n instanceof Dimension && n.unit.is('%')) {\r\n            return parseFloat(n.value * size / 100);\r\n        }\r\n        else {\r\n            return number$1(n);\r\n        }\r\n    }\r\n    colorFunctions = {\r\n        rgb: function (r, g, b) {\r\n            var a = 1;\r\n            /**\r\n             * Comma-less syntax\r\n             *   e.g. rgb(0 128 255 / 50%)\r\n             */\r\n            if (r instanceof Expression) {\r\n                var val = r.value;\r\n                r = val[0];\r\n                g = val[1];\r\n                b = val[2];\r\n                /**\r\n                 * @todo - should this be normalized in\r\n                 *   function caller? Or parsed differently?\r\n                 */\r\n                if (b instanceof Operation) {\r\n                    var op = b;\r\n                    b = op.operands[0];\r\n                    a = op.operands[1];\r\n                }\r\n            }\r\n            var color = colorFunctions.rgba(r, g, b, a);\r\n            if (color) {\r\n                color.value = 'rgb';\r\n                return color;\r\n            }\r\n        },\r\n        rgba: function (r, g, b, a) {\r\n            try {\r\n                if (r instanceof Color) {\r\n                    if (g) {\r\n                        a = number$1(g);\r\n                    }\r\n                    else {\r\n                        a = r.alpha;\r\n                    }\r\n                    return new Color(r.rgb, a, 'rgba');\r\n                }\r\n                var rgb = [r, g, b].map(function (c) { return scaled(c, 255); });\r\n                a = number$1(a);\r\n                return new Color(rgb, a, 'rgba');\r\n            }\r\n            catch (e) { }\r\n        },\r\n        hsl: function (h, s, l) {\r\n            var a = 1;\r\n            if (h instanceof Expression) {\r\n                var val = h.value;\r\n                h = val[0];\r\n                s = val[1];\r\n                l = val[2];\r\n                if (l instanceof Operation) {\r\n                    var op = l;\r\n                    l = op.operands[0];\r\n                    a = op.operands[1];\r\n                }\r\n            }\r\n            var color = colorFunctions.hsla(h, s, l, a);\r\n            if (color) {\r\n                color.value = 'hsl';\r\n                return color;\r\n            }\r\n        },\r\n        hsla: function (h, s, l, a) {\r\n            try {\r\n                if (h instanceof Color) {\r\n                    if (s) {\r\n                        a = number$1(s);\r\n                    }\r\n                    else {\r\n                        a = h.alpha;\r\n                    }\r\n                    return new Color(h.rgb, a, 'hsla');\r\n                }\r\n                var m1_1;\r\n                var m2_1;\r\n                function hue(h) {\r\n                    h = h < 0 ? h + 1 : (h > 1 ? h - 1 : h);\r\n                    if (h * 6 < 1) {\r\n                        return m1_1 + (m2_1 - m1_1) * h * 6;\r\n                    }\r\n                    else if (h * 2 < 1) {\r\n                        return m2_1;\r\n                    }\r\n                    else if (h * 3 < 2) {\r\n                        return m1_1 + (m2_1 - m1_1) * (2 / 3 - h) * 6;\r\n                    }\r\n                    else {\r\n                        return m1_1;\r\n                    }\r\n                }\r\n                h = (number$1(h) % 360) / 360;\r\n                s = clamp(number$1(s));\r\n                l = clamp(number$1(l));\r\n                a = clamp(number$1(a));\r\n                m2_1 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\r\n                m1_1 = l * 2 - m2_1;\r\n                var rgb = [\r\n                    hue(h + 1 / 3) * 255,\r\n                    hue(h) * 255,\r\n                    hue(h - 1 / 3) * 255\r\n                ];\r\n                a = number$1(a);\r\n                return new Color(rgb, a, 'hsla');\r\n            }\r\n            catch (e) { }\r\n        },\r\n        hsv: function (h, s, v) {\r\n            return colorFunctions.hsva(h, s, v, 1.0);\r\n        },\r\n        hsva: function (h, s, v, a) {\r\n            h = ((number$1(h) % 360) / 360) * 360;\r\n            s = number$1(s);\r\n            v = number$1(v);\r\n            a = number$1(a);\r\n            var i;\r\n            var f;\r\n            i = Math.floor((h / 60) % 6);\r\n            f = (h / 60) - i;\r\n            var vs = [v,\r\n                v * (1 - s),\r\n                v * (1 - f * s),\r\n                v * (1 - (1 - f) * s)];\r\n            var perm = [[0, 3, 1],\r\n                [2, 0, 1],\r\n                [1, 0, 3],\r\n                [1, 2, 0],\r\n                [3, 1, 0],\r\n                [0, 1, 2]];\r\n            return colorFunctions.rgba(vs[perm[i][0]] * 255, vs[perm[i][1]] * 255, vs[perm[i][2]] * 255, a);\r\n        },\r\n        hue: function (color) {\r\n            return new Dimension(toHSL(color).h);\r\n        },\r\n        saturation: function (color) {\r\n            return new Dimension(toHSL(color).s * 100, '%');\r\n        },\r\n        lightness: function (color) {\r\n            return new Dimension(toHSL(color).l * 100, '%');\r\n        },\r\n        hsvhue: function (color) {\r\n            return new Dimension(toHSV(color).h);\r\n        },\r\n        hsvsaturation: function (color) {\r\n            return new Dimension(toHSV(color).s * 100, '%');\r\n        },\r\n        hsvvalue: function (color) {\r\n            return new Dimension(toHSV(color).v * 100, '%');\r\n        },\r\n        red: function (color) {\r\n            return new Dimension(color.rgb[0]);\r\n        },\r\n        green: function (color) {\r\n            return new Dimension(color.rgb[1]);\r\n        },\r\n        blue: function (color) {\r\n            return new Dimension(color.rgb[2]);\r\n        },\r\n        alpha: function (color) {\r\n            return new Dimension(toHSL(color).a);\r\n        },\r\n        luma: function (color) {\r\n            return new Dimension(color.luma() * color.alpha * 100, '%');\r\n        },\r\n        luminance: function (color) {\r\n            var luminance = (0.2126 * color.rgb[0] / 255) +\r\n                (0.7152 * color.rgb[1] / 255) +\r\n                (0.0722 * color.rgb[2] / 255);\r\n            return new Dimension(luminance * color.alpha * 100, '%');\r\n        },\r\n        saturate: function (color, amount, method) {\r\n            // filter: saturate(3.2);\r\n            // should be kept as is, so check for color\r\n            if (!color.rgb) {\r\n                return null;\r\n            }\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.s += hsl.s * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.s += amount.value / 100;\r\n            }\r\n            hsl.s = clamp(hsl.s);\r\n            return hsla(color, hsl);\r\n        },\r\n        desaturate: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.s -= hsl.s * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.s -= amount.value / 100;\r\n            }\r\n            hsl.s = clamp(hsl.s);\r\n            return hsla(color, hsl);\r\n        },\r\n        lighten: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.l += hsl.l * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.l += amount.value / 100;\r\n            }\r\n            hsl.l = clamp(hsl.l);\r\n            return hsla(color, hsl);\r\n        },\r\n        darken: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.l -= hsl.l * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.l -= amount.value / 100;\r\n            }\r\n            hsl.l = clamp(hsl.l);\r\n            return hsla(color, hsl);\r\n        },\r\n        fadein: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.a += hsl.a * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.a += amount.value / 100;\r\n            }\r\n            hsl.a = clamp(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        fadeout: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.a -= hsl.a * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.a -= amount.value / 100;\r\n            }\r\n            hsl.a = clamp(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        fade: function (color, amount) {\r\n            var hsl = toHSL(color);\r\n            hsl.a = amount.value / 100;\r\n            hsl.a = clamp(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        spin: function (color, amount) {\r\n            var hsl = toHSL(color);\r\n            var hue = (hsl.h + amount.value) % 360;\r\n            hsl.h = hue < 0 ? 360 + hue : hue;\r\n            return hsla(color, hsl);\r\n        },\r\n        //\r\n        // Copyright (c) 2006-2009 Hampton Catlin, Natalie Weizenbaum, and Chris Eppstein\r\n        // http://sass-lang.com\r\n        //\r\n        mix: function (color1, color2, weight) {\r\n            if (!weight) {\r\n                weight = new Dimension(50);\r\n            }\r\n            var p = weight.value / 100.0;\r\n            var w = p * 2 - 1;\r\n            var a = toHSL(color1).a - toHSL(color2).a;\r\n            var w1 = (((w * a == -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n            var w2 = 1 - w1;\r\n            var rgb = [color1.rgb[0] * w1 + color2.rgb[0] * w2,\r\n                color1.rgb[1] * w1 + color2.rgb[1] * w2,\r\n                color1.rgb[2] * w1 + color2.rgb[2] * w2];\r\n            var alpha = color1.alpha * p + color2.alpha * (1 - p);\r\n            return new Color(rgb, alpha);\r\n        },\r\n        greyscale: function (color) {\r\n            return colorFunctions.desaturate(color, new Dimension(100));\r\n        },\r\n        contrast: function (color, dark, light, threshold) {\r\n            // filter: contrast(3.2);\r\n            // should be kept as is, so check for color\r\n            if (!color.rgb) {\r\n                return null;\r\n            }\r\n            if (typeof light === 'undefined') {\r\n                light = colorFunctions.rgba(255, 255, 255, 1.0);\r\n            }\r\n            if (typeof dark === 'undefined') {\r\n                dark = colorFunctions.rgba(0, 0, 0, 1.0);\r\n            }\r\n            // Figure out which is actually light and dark:\r\n            if (dark.luma() > light.luma()) {\r\n                var t = light;\r\n                light = dark;\r\n                dark = t;\r\n            }\r\n            if (typeof threshold === 'undefined') {\r\n                threshold = 0.43;\r\n            }\r\n            else {\r\n                threshold = number$1(threshold);\r\n            }\r\n            if (color.luma() < threshold) {\r\n                return light;\r\n            }\r\n            else {\r\n                return dark;\r\n            }\r\n        },\r\n        // Changes made in 2.7.0 - Reverted in 3.0.0\r\n        // contrast: function (color, color1, color2, threshold) {\r\n        //     // Return which of `color1` and `color2` has the greatest contrast with `color`\r\n        //     // according to the standard WCAG contrast ratio calculation.\r\n        //     // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n        //     // The threshold param is no longer used, in line with SASS.\r\n        //     // filter: contrast(3.2);\r\n        //     // should be kept as is, so check for color\r\n        //     if (!color.rgb) {\r\n        //         return null;\r\n        //     }\r\n        //     if (typeof color1 === 'undefined') {\r\n        //         color1 = colorFunctions.rgba(0, 0, 0, 1.0);\r\n        //     }\r\n        //     if (typeof color2 === 'undefined') {\r\n        //         color2 = colorFunctions.rgba(255, 255, 255, 1.0);\r\n        //     }\r\n        //     var contrast1, contrast2;\r\n        //     var luma = color.luma();\r\n        //     var luma1 = color1.luma();\r\n        //     var luma2 = color2.luma();\r\n        //     // Calculate contrast ratios for each color\r\n        //     if (luma > luma1) {\r\n        //         contrast1 = (luma + 0.05) / (luma1 + 0.05);\r\n        //     } else {\r\n        //         contrast1 = (luma1 + 0.05) / (luma + 0.05);\r\n        //     }\r\n        //     if (luma > luma2) {\r\n        //         contrast2 = (luma + 0.05) / (luma2 + 0.05);\r\n        //     } else {\r\n        //         contrast2 = (luma2 + 0.05) / (luma + 0.05);\r\n        //     }\r\n        //     if (contrast1 > contrast2) {\r\n        //         return color1;\r\n        //     } else {\r\n        //         return color2;\r\n        //     }\r\n        // },\r\n        argb: function (color) {\r\n            return new Anonymous(color.toARGB());\r\n        },\r\n        color: function (c) {\r\n            if ((c instanceof Quoted) &&\r\n                (/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})$/i.test(c.value))) {\r\n                var val = c.value.slice(1);\r\n                return new Color(val, undefined, \"#\" + val);\r\n            }\r\n            if ((c instanceof Color) || (c = Color.fromKeyword(c.value))) {\r\n                c.value = undefined;\r\n                return c;\r\n            }\r\n            throw {\r\n                type: 'Argument',\r\n                message: 'argument must be a color keyword or 3|4|6|8 digit hex e.g. #FFF'\r\n            };\r\n        },\r\n        tint: function (color, amount) {\r\n            return colorFunctions.mix(colorFunctions.rgb(255, 255, 255), color, amount);\r\n        },\r\n        shade: function (color, amount) {\r\n            return colorFunctions.mix(colorFunctions.rgb(0, 0, 0), color, amount);\r\n        }\r\n    };\r\n    var color = colorFunctions;\n\n    // Color Blending\r\n    // ref: http://www.w3.org/TR/compositing-1\r\n    function colorBlend(mode, color1, color2) {\r\n        var ab = color1.alpha; // result\r\n        var // backdrop\r\n        cb;\r\n        var as = color2.alpha;\r\n        var // source\r\n        cs;\r\n        var ar;\r\n        var cr;\r\n        var r = [];\r\n        ar = as + ab * (1 - as);\r\n        for (var i = 0; i < 3; i++) {\r\n            cb = color1.rgb[i] / 255;\r\n            cs = color2.rgb[i] / 255;\r\n            cr = mode(cb, cs);\r\n            if (ar) {\r\n                cr = (as * cs + ab * (cb -\r\n                    as * (cb + cs - cr))) / ar;\r\n            }\r\n            r[i] = cr * 255;\r\n        }\r\n        return new Color(r, ar);\r\n    }\r\n    var colorBlendModeFunctions = {\r\n        multiply: function (cb, cs) {\r\n            return cb * cs;\r\n        },\r\n        screen: function (cb, cs) {\r\n            return cb + cs - cb * cs;\r\n        },\r\n        overlay: function (cb, cs) {\r\n            cb *= 2;\r\n            return (cb <= 1) ?\r\n                colorBlendModeFunctions.multiply(cb, cs) :\r\n                colorBlendModeFunctions.screen(cb - 1, cs);\r\n        },\r\n        softlight: function (cb, cs) {\r\n            var d = 1;\r\n            var e = cb;\r\n            if (cs > 0.5) {\r\n                e = 1;\r\n                d = (cb > 0.25) ? Math.sqrt(cb)\r\n                    : ((16 * cb - 12) * cb + 4) * cb;\r\n            }\r\n            return cb - (1 - 2 * cs) * e * (d - cb);\r\n        },\r\n        hardlight: function (cb, cs) {\r\n            return colorBlendModeFunctions.overlay(cs, cb);\r\n        },\r\n        difference: function (cb, cs) {\r\n            return Math.abs(cb - cs);\r\n        },\r\n        exclusion: function (cb, cs) {\r\n            return cb + cs - 2 * cb * cs;\r\n        },\r\n        // non-w3c functions:\r\n        average: function (cb, cs) {\r\n            return (cb + cs) / 2;\r\n        },\r\n        negation: function (cb, cs) {\r\n            return 1 - Math.abs(cb + cs - 1);\r\n        }\r\n    };\r\n    for (var f$1 in colorBlendModeFunctions) {\r\n        if (colorBlendModeFunctions.hasOwnProperty(f$1)) {\r\n            colorBlend[f$1] = colorBlend.bind(null, colorBlendModeFunctions[f$1]);\r\n        }\r\n    }\n\n    var dataUri = (function (environment) {\r\n        var fallback = function (functionThis, node) { return new URL(node, functionThis.index, functionThis.currentFileInfo).eval(functionThis.context); };\r\n        return { 'data-uri': function (mimetypeNode, filePathNode) {\r\n                if (!filePathNode) {\r\n                    filePathNode = mimetypeNode;\r\n                    mimetypeNode = null;\r\n                }\r\n                var mimetype = mimetypeNode && mimetypeNode.value;\r\n                var filePath = filePathNode.value;\r\n                var currentFileInfo = this.currentFileInfo;\r\n                var currentDirectory = currentFileInfo.rewriteUrls ?\r\n                    currentFileInfo.currentDirectory : currentFileInfo.entryPath;\r\n                var fragmentStart = filePath.indexOf('#');\r\n                var fragment = '';\r\n                if (fragmentStart !== -1) {\r\n                    fragment = filePath.slice(fragmentStart);\r\n                    filePath = filePath.slice(0, fragmentStart);\r\n                }\r\n                var context = clone(this.context);\r\n                context.rawBuffer = true;\r\n                var fileManager = environment.getFileManager(filePath, currentDirectory, context, environment, true);\r\n                if (!fileManager) {\r\n                    return fallback(this, filePathNode);\r\n                }\r\n                var useBase64 = false;\r\n                // detect the mimetype if not given\r\n                if (!mimetypeNode) {\r\n                    mimetype = environment.mimeLookup(filePath);\r\n                    if (mimetype === 'image/svg+xml') {\r\n                        useBase64 = false;\r\n                    }\r\n                    else {\r\n                        // use base 64 unless it's an ASCII or UTF-8 format\r\n                        var charset = environment.charsetLookup(mimetype);\r\n                        useBase64 = ['US-ASCII', 'UTF-8'].indexOf(charset) < 0;\r\n                    }\r\n                    if (useBase64) {\r\n                        mimetype += ';base64';\r\n                    }\r\n                }\r\n                else {\r\n                    useBase64 = /;base64$/.test(mimetype);\r\n                }\r\n                var fileSync = fileManager.loadFileSync(filePath, currentDirectory, context, environment);\r\n                if (!fileSync.contents) {\r\n                    logger$1.warn(\"Skipped data-uri embedding of \" + filePath + \" because file not found\");\r\n                    return fallback(this, filePathNode || mimetypeNode);\r\n                }\r\n                var buf = fileSync.contents;\r\n                if (useBase64 && !environment.encodeBase64) {\r\n                    return fallback(this, filePathNode);\r\n                }\r\n                buf = useBase64 ? environment.encodeBase64(buf) : encodeURIComponent(buf);\r\n                var uri = \"data:\" + mimetype + \",\" + buf + fragment;\r\n                return new URL(new Quoted(\"\\\"\" + uri + \"\\\"\", uri, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\r\n            } };\r\n    });\n\n    var getItemsFromNode = function (node) {\r\n        // handle non-array values as an array of length 1\r\n        // return 'undefined' if index is invalid\r\n        var items = Array.isArray(node.value) ?\r\n            node.value : Array(node);\r\n        return items;\r\n    };\r\n    var list = {\r\n        _SELF: function (n) {\r\n            return n;\r\n        },\r\n        '~': function () {\r\n            var expr = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                expr[_i] = arguments[_i];\r\n            }\r\n            if (expr.length === 1) {\r\n                return expr[0];\r\n            }\r\n            return new Value(expr);\r\n        },\r\n        extract: function (values, index) {\r\n            // (1-based index)\r\n            index = index.value - 1;\r\n            return getItemsFromNode(values)[index];\r\n        },\r\n        length: function (values) {\r\n            return new Dimension(getItemsFromNode(values).length);\r\n        },\r\n        /**\r\n         * Creates a Less list of incremental values.\r\n         * Modeled after Lodash's range function, also exists natively in PHP\r\n         *\r\n         * @param {Dimension} [start=1]\r\n         * @param {Dimension} end  - e.g. 10 or 10px - unit is added to output\r\n         * @param {Dimension} [step=1]\r\n         */\r\n        range: function (start, end, step) {\r\n            var from;\r\n            var to;\r\n            var stepValue = 1;\r\n            var list = [];\r\n            if (end) {\r\n                to = end;\r\n                from = start.value;\r\n                if (step) {\r\n                    stepValue = step.value;\r\n                }\r\n            }\r\n            else {\r\n                from = 1;\r\n                to = start;\r\n            }\r\n            for (var i = from; i <= to.value; i += stepValue) {\r\n                list.push(new Dimension(i, to.unit));\r\n            }\r\n            return new Expression(list);\r\n        },\r\n        each: function (list, rs) {\r\n            var _this = this;\r\n            var rules = [];\r\n            var newRules;\r\n            var iterator;\r\n            var tryEval = function (val) {\r\n                if (val instanceof Node) {\r\n                    return val.eval(_this.context);\r\n                }\r\n                return val;\r\n            };\r\n            if (list.value && !(list instanceof Quoted)) {\r\n                if (Array.isArray(list.value)) {\r\n                    iterator = list.value.map(tryEval);\r\n                }\r\n                else {\r\n                    iterator = [tryEval(list.value)];\r\n                }\r\n            }\r\n            else if (list.ruleset) {\r\n                iterator = tryEval(list.ruleset).rules;\r\n            }\r\n            else if (list.rules) {\r\n                iterator = list.rules.map(tryEval);\r\n            }\r\n            else if (Array.isArray(list)) {\r\n                iterator = list.map(tryEval);\r\n            }\r\n            else {\r\n                iterator = [tryEval(list)];\r\n            }\r\n            var valueName = '@value';\r\n            var keyName = '@key';\r\n            var indexName = '@index';\r\n            if (rs.params) {\r\n                valueName = rs.params[0] && rs.params[0].name;\r\n                keyName = rs.params[1] && rs.params[1].name;\r\n                indexName = rs.params[2] && rs.params[2].name;\r\n                rs = rs.rules;\r\n            }\r\n            else {\r\n                rs = rs.ruleset;\r\n            }\r\n            for (var i = 0; i < iterator.length; i++) {\r\n                var key = void 0;\r\n                var value = void 0;\r\n                var item = iterator[i];\r\n                if (item instanceof Declaration) {\r\n                    key = typeof item.name === 'string' ? item.name : item.name[0].value;\r\n                    value = item.value;\r\n                }\r\n                else {\r\n                    key = new Dimension(i + 1);\r\n                    value = item;\r\n                }\r\n                if (item instanceof Comment) {\r\n                    continue;\r\n                }\r\n                newRules = rs.rules.slice(0);\r\n                if (valueName) {\r\n                    newRules.push(new Declaration(valueName, value, false, false, this.index, this.currentFileInfo));\r\n                }\r\n                if (indexName) {\r\n                    newRules.push(new Declaration(indexName, new Dimension(i + 1), false, false, this.index, this.currentFileInfo));\r\n                }\r\n                if (keyName) {\r\n                    newRules.push(new Declaration(keyName, key, false, false, this.index, this.currentFileInfo));\r\n                }\r\n                rules.push(new Ruleset([new (Selector)([new Element(\"\", '&')])], newRules, rs.strictImports, rs.visibilityInfo()));\r\n            }\r\n            return new Ruleset([new (Selector)([new Element(\"\", '&')])], rules, rs.strictImports, rs.visibilityInfo()).eval(this.context);\r\n        }\r\n    };\n\n    var MathHelper = function (fn, unit, n) {\r\n        if (!(n instanceof Dimension)) {\r\n            throw { type: 'Argument', message: 'argument must be a number' };\r\n        }\r\n        if (unit == null) {\r\n            unit = n.unit;\r\n        }\r\n        else {\r\n            n = n.unify();\r\n        }\r\n        return new Dimension(fn(parseFloat(n.value)), unit);\r\n    };\n\n    var mathFunctions = {\r\n        // name,  unit\r\n        ceil: null,\r\n        floor: null,\r\n        sqrt: null,\r\n        abs: null,\r\n        tan: '',\r\n        sin: '',\r\n        cos: '',\r\n        atan: 'rad',\r\n        asin: 'rad',\r\n        acos: 'rad'\r\n    };\r\n    for (var f in mathFunctions) {\r\n        if (mathFunctions.hasOwnProperty(f)) {\r\n            mathFunctions[f] = MathHelper.bind(null, Math[f], mathFunctions[f]);\r\n        }\r\n    }\r\n    mathFunctions.round = function (n, f) {\r\n        var fraction = typeof f === 'undefined' ? 0 : f.value;\r\n        return MathHelper(function (num) { return num.toFixed(fraction); }, null, n);\r\n    };\n\n    var minMax = function (isMin, args) {\r\n        args = Array.prototype.slice.call(args);\r\n        switch (args.length) {\r\n            case 0: throw { type: 'Argument', message: 'one or more arguments required' };\r\n        }\r\n        var i; // key is the unit.toString() for unified Dimension values,\r\n        var j;\r\n        var current;\r\n        var currentUnified;\r\n        var referenceUnified;\r\n        var unit;\r\n        var unitStatic;\r\n        var unitClone;\r\n        var // elems only contains original argument values.\r\n        order = [];\r\n        var values = {};\r\n        // value is the index into the order array.\r\n        for (i = 0; i < args.length; i++) {\r\n            current = args[i];\r\n            if (!(current instanceof Dimension)) {\r\n                if (Array.isArray(args[i].value)) {\r\n                    Array.prototype.push.apply(args, Array.prototype.slice.call(args[i].value));\r\n                }\r\n                continue;\r\n            }\r\n            currentUnified = current.unit.toString() === '' && unitClone !== undefined ? new Dimension(current.value, unitClone).unify() : current.unify();\r\n            unit = currentUnified.unit.toString() === '' && unitStatic !== undefined ? unitStatic : currentUnified.unit.toString();\r\n            unitStatic = unit !== '' && unitStatic === undefined || unit !== '' && order[0].unify().unit.toString() === '' ? unit : unitStatic;\r\n            unitClone = unit !== '' && unitClone === undefined ? current.unit.toString() : unitClone;\r\n            j = values[''] !== undefined && unit !== '' && unit === unitStatic ? values[''] : values[unit];\r\n            if (j === undefined) {\r\n                if (unitStatic !== undefined && unit !== unitStatic) {\r\n                    throw { type: 'Argument', message: 'incompatible types' };\r\n                }\r\n                values[unit] = order.length;\r\n                order.push(current);\r\n                continue;\r\n            }\r\n            referenceUnified = order[j].unit.toString() === '' && unitClone !== undefined ? new Dimension(order[j].value, unitClone).unify() : order[j].unify();\r\n            if (isMin && currentUnified.value < referenceUnified.value ||\r\n                !isMin && currentUnified.value > referenceUnified.value) {\r\n                order[j] = current;\r\n            }\r\n        }\r\n        if (order.length == 1) {\r\n            return order[0];\r\n        }\r\n        args = order.map(function (a) { return a.toCSS(this.context); }).join(this.context.compress ? ',' : ', ');\r\n        return new Anonymous((isMin ? 'min' : 'max') + \"(\" + args + \")\");\r\n    };\r\n    var number = {\r\n        min: function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            try {\r\n                return minMax(true, args);\r\n            }\r\n            catch (e) { }\r\n        },\r\n        max: function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            try {\r\n                return minMax(false, args);\r\n            }\r\n            catch (e) { }\r\n        },\r\n        convert: function (val, unit) {\r\n            return val.convertTo(unit.value);\r\n        },\r\n        pi: function () {\r\n            return new Dimension(Math.PI);\r\n        },\r\n        mod: function (a, b) {\r\n            return new Dimension(a.value % b.value, a.unit);\r\n        },\r\n        pow: function (x, y) {\r\n            if (typeof x === 'number' && typeof y === 'number') {\r\n                x = new Dimension(x);\r\n                y = new Dimension(y);\r\n            }\r\n            else if (!(x instanceof Dimension) || !(y instanceof Dimension)) {\r\n                throw { type: 'Argument', message: 'arguments must be numbers' };\r\n            }\r\n            return new Dimension(Math.pow(x.value, y.value), x.unit);\r\n        },\r\n        percentage: function (n) {\r\n            var result = MathHelper(function (num) { return num * 100; }, '%', n);\r\n            return result;\r\n        }\r\n    };\n\n    var string = {\r\n        e: function (str) {\r\n            return new Quoted('\"', str instanceof JavaScript ? str.evaluated : str.value, true);\r\n        },\r\n        escape: function (str) {\r\n            return new Anonymous(encodeURI(str.value).replace(/=/g, '%3D').replace(/:/g, '%3A').replace(/#/g, '%23').replace(/;/g, '%3B')\r\n                .replace(/\\(/g, '%28').replace(/\\)/g, '%29'));\r\n        },\r\n        replace: function (string, pattern, replacement, flags) {\r\n            var result = string.value;\r\n            replacement = (replacement.type === 'Quoted') ?\r\n                replacement.value : replacement.toCSS();\r\n            result = result.replace(new RegExp(pattern.value, flags ? flags.value : ''), replacement);\r\n            return new Quoted(string.quote || '', result, string.escaped);\r\n        },\r\n        '%': function (string /* arg, arg, ... */) {\r\n            var args = Array.prototype.slice.call(arguments, 1);\r\n            var result = string.value;\r\n            var _loop_1 = function (i) {\r\n                /* jshint loopfunc:true */\r\n                result = result.replace(/%[sda]/i, function (token) {\r\n                    var value = ((args[i].type === 'Quoted') &&\r\n                        token.match(/s/i)) ? args[i].value : args[i].toCSS();\r\n                    return token.match(/[A-Z]$/) ? encodeURIComponent(value) : value;\r\n                });\r\n            };\r\n            for (var i = 0; i < args.length; i++) {\r\n                _loop_1(i);\r\n            }\r\n            result = result.replace(/%%/g, '%');\r\n            return new Quoted(string.quote || '', result, string.escaped);\r\n        }\r\n    };\n\n    var svg = (function (environment) {\r\n        return { 'svg-gradient': function (direction) {\r\n                var stops;\r\n                var gradientDirectionSvg;\r\n                var gradientType = 'linear';\r\n                var rectangleDimension = 'x=\"0\" y=\"0\" width=\"1\" height=\"1\"';\r\n                var renderEnv = { compress: false };\r\n                var returner;\r\n                var directionValue = direction.toCSS(renderEnv);\r\n                var i;\r\n                var color;\r\n                var position;\r\n                var positionValue;\r\n                var alpha;\r\n                function throwArgumentDescriptor() {\r\n                    throw { type: 'Argument',\r\n                        message: 'svg-gradient expects direction, start_color [start_position], [color position,]...,' +\r\n                            ' end_color [end_position] or direction, color list' };\r\n                }\r\n                if (arguments.length == 2) {\r\n                    if (arguments[1].value.length < 2) {\r\n                        throwArgumentDescriptor();\r\n                    }\r\n                    stops = arguments[1].value;\r\n                }\r\n                else if (arguments.length < 3) {\r\n                    throwArgumentDescriptor();\r\n                }\r\n                else {\r\n                    stops = Array.prototype.slice.call(arguments, 1);\r\n                }\r\n                switch (directionValue) {\r\n                    case 'to bottom':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"';\r\n                        break;\r\n                    case 'to right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"';\r\n                        break;\r\n                    case 'to bottom right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"';\r\n                        break;\r\n                    case 'to top right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\"';\r\n                        break;\r\n                    case 'ellipse':\r\n                    case 'ellipse at center':\r\n                        gradientType = 'radial';\r\n                        gradientDirectionSvg = 'cx=\"50%\" cy=\"50%\" r=\"75%\"';\r\n                        rectangleDimension = 'x=\"-50\" y=\"-50\" width=\"101\" height=\"101\"';\r\n                        break;\r\n                    default:\r\n                        throw { type: 'Argument', message: 'svg-gradient direction must be \\'to bottom\\', \\'to right\\',' +\r\n                                ' \\'to bottom right\\', \\'to top right\\' or \\'ellipse at center\\'' };\r\n                }\r\n                returner = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 1 1\\\"><\" + gradientType + \"Gradient id=\\\"g\\\" \" + gradientDirectionSvg + \">\";\r\n                for (i = 0; i < stops.length; i += 1) {\r\n                    if (stops[i] instanceof Expression) {\r\n                        color = stops[i].value[0];\r\n                        position = stops[i].value[1];\r\n                    }\r\n                    else {\r\n                        color = stops[i];\r\n                        position = undefined;\r\n                    }\r\n                    if (!(color instanceof Color) || (!((i === 0 || i + 1 === stops.length) && position === undefined) && !(position instanceof Dimension))) {\r\n                        throwArgumentDescriptor();\r\n                    }\r\n                    positionValue = position ? position.toCSS(renderEnv) : i === 0 ? '0%' : '100%';\r\n                    alpha = color.alpha;\r\n                    returner += \"<stop offset=\\\"\" + positionValue + \"\\\" stop-color=\\\"\" + color.toRGB() + \"\\\"\" + (alpha < 1 ? \" stop-opacity=\\\"\" + alpha + \"\\\"\" : '') + \"/>\";\r\n                }\r\n                returner += \"</\" + gradientType + \"Gradient><rect \" + rectangleDimension + \" fill=\\\"url(#g)\\\" /></svg>\";\r\n                returner = encodeURIComponent(returner);\r\n                returner = \"data:image/svg+xml,\" + returner;\r\n                return new URL(new Quoted(\"'\" + returner + \"'\", returner, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\r\n            } };\r\n    });\n\n    var isa = function (n, Type) { return (n instanceof Type) ? Keyword.True : Keyword.False; };\r\n    var isunit = function (n, unit) {\r\n        if (unit === undefined) {\r\n            throw { type: 'Argument', message: 'missing the required second argument to isunit.' };\r\n        }\r\n        unit = typeof unit.value === 'string' ? unit.value : unit;\r\n        if (typeof unit !== 'string') {\r\n            throw { type: 'Argument', message: 'Second argument to isunit should be a unit or a string.' };\r\n        }\r\n        return (n instanceof Dimension) && n.unit.is(unit) ? Keyword.True : Keyword.False;\r\n    };\r\n    var types = {\r\n        isruleset: function (n) {\r\n            return isa(n, DetachedRuleset);\r\n        },\r\n        iscolor: function (n) {\r\n            return isa(n, Color);\r\n        },\r\n        isnumber: function (n) {\r\n            return isa(n, Dimension);\r\n        },\r\n        isstring: function (n) {\r\n            return isa(n, Quoted);\r\n        },\r\n        iskeyword: function (n) {\r\n            return isa(n, Keyword);\r\n        },\r\n        isurl: function (n) {\r\n            return isa(n, URL);\r\n        },\r\n        ispixel: function (n) {\r\n            return isunit(n, 'px');\r\n        },\r\n        ispercentage: function (n) {\r\n            return isunit(n, '%');\r\n        },\r\n        isem: function (n) {\r\n            return isunit(n, 'em');\r\n        },\r\n        isunit: isunit,\r\n        unit: function (val, unit) {\r\n            if (!(val instanceof Dimension)) {\r\n                throw { type: 'Argument',\r\n                    message: \"the first argument to unit must be a number\" + (val instanceof Operation ? '. Have you forgotten parenthesis?' : '') };\r\n            }\r\n            if (unit) {\r\n                if (unit instanceof Keyword) {\r\n                    unit = unit.value;\r\n                }\r\n                else {\r\n                    unit = unit.toCSS();\r\n                }\r\n            }\r\n            else {\r\n                unit = '';\r\n            }\r\n            return new Dimension(val.value, unit);\r\n        },\r\n        'get-unit': function (n) {\r\n            return new Anonymous(n.unit);\r\n        }\r\n    };\n\n    var functions = (function (environment) {\r\n        var functions = { functionRegistry: functionRegistry, functionCaller: functionCaller };\r\n        // register functions\r\n        functionRegistry.addMultiple(boolean$1);\r\n        functionRegistry.add('default', defaultFunc.eval.bind(defaultFunc));\r\n        functionRegistry.addMultiple(color);\r\n        functionRegistry.addMultiple(colorBlend);\r\n        functionRegistry.addMultiple(dataUri(environment));\r\n        functionRegistry.addMultiple(list);\r\n        functionRegistry.addMultiple(mathFunctions);\r\n        functionRegistry.addMultiple(number);\r\n        functionRegistry.addMultiple(string);\r\n        functionRegistry.addMultiple(svg());\r\n        functionRegistry.addMultiple(types);\r\n        return functions;\r\n    });\n\n    function transformTree (root, options) {\r\n        options = options || {};\r\n        var evaldRoot;\r\n        var variables = options.variables;\r\n        var evalEnv = new contexts.Eval(options);\r\n        //\r\n        // Allows setting variables with a hash, so:\r\n        //\r\n        //   `{ color: new tree.Color('#f01') }` will become:\r\n        //\r\n        //   new tree.Declaration('@color',\r\n        //     new tree.Value([\r\n        //       new tree.Expression([\r\n        //         new tree.Color('#f01')\r\n        //       ])\r\n        //     ])\r\n        //   )\r\n        //\r\n        if (typeof variables === 'object' && !Array.isArray(variables)) {\r\n            variables = Object.keys(variables).map(function (k) {\r\n                var value = variables[k];\r\n                if (!(value instanceof tree.Value)) {\r\n                    if (!(value instanceof tree.Expression)) {\r\n                        value = new tree.Expression([value]);\r\n                    }\r\n                    value = new tree.Value([value]);\r\n                }\r\n                return new tree.Declaration(\"@\" + k, value, false, null, 0);\r\n            });\r\n            evalEnv.frames = [new tree.Ruleset(null, variables)];\r\n        }\r\n        var visitors$1 = [\r\n            new visitors.JoinSelectorVisitor(),\r\n            new visitors.MarkVisibleSelectorsVisitor(true),\r\n            new visitors.ExtendVisitor(),\r\n            new visitors.ToCSSVisitor({ compress: Boolean(options.compress) })\r\n        ];\r\n        var preEvalVisitors = [];\r\n        var v;\r\n        var visitorIterator;\r\n        /**\r\n         * first() / get() allows visitors to be added while visiting\r\n         *\r\n         * @todo Add scoping for visitors just like functions for @plugin; right now they're global\r\n         */\r\n        if (options.pluginManager) {\r\n            visitorIterator = options.pluginManager.visitor();\r\n            for (var i = 0; i < 2; i++) {\r\n                visitorIterator.first();\r\n                while ((v = visitorIterator.get())) {\r\n                    if (v.isPreEvalVisitor) {\r\n                        if (i === 0 || preEvalVisitors.indexOf(v) === -1) {\r\n                            preEvalVisitors.push(v);\r\n                            v.run(root);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (i === 0 || visitors$1.indexOf(v) === -1) {\r\n                            if (v.isPreVisitor) {\r\n                                visitors$1.unshift(v);\r\n                            }\r\n                            else {\r\n                                visitors$1.push(v);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        evaldRoot = root.eval(evalEnv);\r\n        for (var i = 0; i < visitors$1.length; i++) {\r\n            visitors$1[i].run(evaldRoot);\r\n        }\r\n        // Run any remaining visitors added after eval pass\r\n        if (options.pluginManager) {\r\n            visitorIterator.first();\r\n            while ((v = visitorIterator.get())) {\r\n                if (visitors$1.indexOf(v) === -1 && preEvalVisitors.indexOf(v) === -1) {\r\n                    v.run(evaldRoot);\r\n                }\r\n            }\r\n        }\r\n        return evaldRoot;\r\n    }\n\n    /**\r\n     * Plugin Manager\r\n     */\r\n    var PluginManager = /** @class */ (function () {\r\n        function PluginManager(less) {\r\n            this.less = less;\r\n            this.visitors = [];\r\n            this.preProcessors = [];\r\n            this.postProcessors = [];\r\n            this.installedPlugins = [];\r\n            this.fileManagers = [];\r\n            this.iterator = -1;\r\n            this.pluginCache = {};\r\n            this.Loader = new less.PluginLoader(less);\r\n        }\r\n        /**\r\n         * Adds all the plugins in the array\r\n         * @param {Array} plugins\r\n         */\r\n        PluginManager.prototype.addPlugins = function (plugins) {\r\n            if (plugins) {\r\n                for (var i = 0; i < plugins.length; i++) {\r\n                    this.addPlugin(plugins[i]);\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         *\r\n         * @param plugin\r\n         * @param {String} filename\r\n         */\r\n        PluginManager.prototype.addPlugin = function (plugin, filename, functionRegistry) {\r\n            this.installedPlugins.push(plugin);\r\n            if (filename) {\r\n                this.pluginCache[filename] = plugin;\r\n            }\r\n            if (plugin.install) {\r\n                plugin.install(this.less, this, functionRegistry || this.less.functions.functionRegistry);\r\n            }\r\n        };\r\n        /**\r\n         *\r\n         * @param filename\r\n         */\r\n        PluginManager.prototype.get = function (filename) {\r\n            return this.pluginCache[filename];\r\n        };\r\n        /**\r\n         * Adds a visitor. The visitor object has options on itself to determine\r\n         * when it should run.\r\n         * @param visitor\r\n         */\r\n        PluginManager.prototype.addVisitor = function (visitor) {\r\n            this.visitors.push(visitor);\r\n        };\r\n        /**\r\n         * Adds a pre processor object\r\n         * @param {object} preProcessor\r\n         * @param {number} priority - guidelines 1 = before import, 1000 = import, 2000 = after import\r\n         */\r\n        PluginManager.prototype.addPreProcessor = function (preProcessor, priority) {\r\n            var indexToInsertAt;\r\n            for (indexToInsertAt = 0; indexToInsertAt < this.preProcessors.length; indexToInsertAt++) {\r\n                if (this.preProcessors[indexToInsertAt].priority >= priority) {\r\n                    break;\r\n                }\r\n            }\r\n            this.preProcessors.splice(indexToInsertAt, 0, { preProcessor: preProcessor, priority: priority });\r\n        };\r\n        /**\r\n         * Adds a post processor object\r\n         * @param {object} postProcessor\r\n         * @param {number} priority - guidelines 1 = before compression, 1000 = compression, 2000 = after compression\r\n         */\r\n        PluginManager.prototype.addPostProcessor = function (postProcessor, priority) {\r\n            var indexToInsertAt;\r\n            for (indexToInsertAt = 0; indexToInsertAt < this.postProcessors.length; indexToInsertAt++) {\r\n                if (this.postProcessors[indexToInsertAt].priority >= priority) {\r\n                    break;\r\n                }\r\n            }\r\n            this.postProcessors.splice(indexToInsertAt, 0, { postProcessor: postProcessor, priority: priority });\r\n        };\r\n        /**\r\n         *\r\n         * @param manager\r\n         */\r\n        PluginManager.prototype.addFileManager = function (manager) {\r\n            this.fileManagers.push(manager);\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getPreProcessors = function () {\r\n            var preProcessors = [];\r\n            for (var i = 0; i < this.preProcessors.length; i++) {\r\n                preProcessors.push(this.preProcessors[i].preProcessor);\r\n            }\r\n            return preProcessors;\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getPostProcessors = function () {\r\n            var postProcessors = [];\r\n            for (var i = 0; i < this.postProcessors.length; i++) {\r\n                postProcessors.push(this.postProcessors[i].postProcessor);\r\n            }\r\n            return postProcessors;\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getVisitors = function () {\r\n            return this.visitors;\r\n        };\r\n        PluginManager.prototype.visitor = function () {\r\n            var self = this;\r\n            return {\r\n                first: function () {\r\n                    self.iterator = -1;\r\n                    return self.visitors[self.iterator];\r\n                },\r\n                get: function () {\r\n                    self.iterator += 1;\r\n                    return self.visitors[self.iterator];\r\n                }\r\n            };\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getFileManagers = function () {\r\n            return this.fileManagers;\r\n        };\r\n        return PluginManager;\r\n    }());\r\n    var pm;\r\n    var PluginManagerFactory = function (less, newFactory) {\r\n        if (newFactory || !pm) {\r\n            pm = new PluginManager(less);\r\n        }\r\n        return pm;\r\n    };\n\n    function SourceMapOutput (environment) {\r\n        var SourceMapOutput = /** @class */ (function () {\r\n            function SourceMapOutput(options) {\r\n                this._css = [];\r\n                this._rootNode = options.rootNode;\r\n                this._contentsMap = options.contentsMap;\r\n                this._contentsIgnoredCharsMap = options.contentsIgnoredCharsMap;\r\n                if (options.sourceMapFilename) {\r\n                    this._sourceMapFilename = options.sourceMapFilename.replace(/\\\\/g, '/');\r\n                }\r\n                this._outputFilename = options.outputFilename;\r\n                this.sourceMapURL = options.sourceMapURL;\r\n                if (options.sourceMapBasepath) {\r\n                    this._sourceMapBasepath = options.sourceMapBasepath.replace(/\\\\/g, '/');\r\n                }\r\n                if (options.sourceMapRootpath) {\r\n                    this._sourceMapRootpath = options.sourceMapRootpath.replace(/\\\\/g, '/');\r\n                    if (this._sourceMapRootpath.charAt(this._sourceMapRootpath.length - 1) !== '/') {\r\n                        this._sourceMapRootpath += '/';\r\n                    }\r\n                }\r\n                else {\r\n                    this._sourceMapRootpath = '';\r\n                }\r\n                this._outputSourceFiles = options.outputSourceFiles;\r\n                this._sourceMapGeneratorConstructor = environment.getSourceMapGenerator();\r\n                this._lineNumber = 0;\r\n                this._column = 0;\r\n            }\r\n            SourceMapOutput.prototype.removeBasepath = function (path) {\r\n                if (this._sourceMapBasepath && path.indexOf(this._sourceMapBasepath) === 0) {\r\n                    path = path.substring(this._sourceMapBasepath.length);\r\n                    if (path.charAt(0) === '\\\\' || path.charAt(0) === '/') {\r\n                        path = path.substring(1);\r\n                    }\r\n                }\r\n                return path;\r\n            };\r\n            SourceMapOutput.prototype.normalizeFilename = function (filename) {\r\n                filename = filename.replace(/\\\\/g, '/');\r\n                filename = this.removeBasepath(filename);\r\n                return (this._sourceMapRootpath || '') + filename;\r\n            };\r\n            SourceMapOutput.prototype.add = function (chunk, fileInfo, index, mapLines) {\r\n                // ignore adding empty strings\r\n                if (!chunk) {\r\n                    return;\r\n                }\r\n                var lines, sourceLines, columns, sourceColumns, i;\r\n                if (fileInfo && fileInfo.filename) {\r\n                    var inputSource = this._contentsMap[fileInfo.filename];\r\n                    // remove vars/banner added to the top of the file\r\n                    if (this._contentsIgnoredCharsMap[fileInfo.filename]) {\r\n                        // adjust the index\r\n                        index -= this._contentsIgnoredCharsMap[fileInfo.filename];\r\n                        if (index < 0) {\r\n                            index = 0;\r\n                        }\r\n                        // adjust the source\r\n                        inputSource = inputSource.slice(this._contentsIgnoredCharsMap[fileInfo.filename]);\r\n                    }\r\n                    /**\r\n                     * ignore empty content, or failsafe\r\n                     * if contents map is incorrect\r\n                     */\r\n                    if (inputSource === undefined) {\r\n                        this._css.push(chunk);\r\n                        return;\r\n                    }\r\n                    inputSource = inputSource.substring(0, index);\r\n                    sourceLines = inputSource.split('\\n');\r\n                    sourceColumns = sourceLines[sourceLines.length - 1];\r\n                }\r\n                lines = chunk.split('\\n');\r\n                columns = lines[lines.length - 1];\r\n                if (fileInfo && fileInfo.filename) {\r\n                    if (!mapLines) {\r\n                        this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + 1, column: this._column },\r\n                            original: { line: sourceLines.length, column: sourceColumns.length },\r\n                            source: this.normalizeFilename(fileInfo.filename) });\r\n                    }\r\n                    else {\r\n                        for (i = 0; i < lines.length; i++) {\r\n                            this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + i + 1, column: i === 0 ? this._column : 0 },\r\n                                original: { line: sourceLines.length + i, column: i === 0 ? sourceColumns.length : 0 },\r\n                                source: this.normalizeFilename(fileInfo.filename) });\r\n                        }\r\n                    }\r\n                }\r\n                if (lines.length === 1) {\r\n                    this._column += columns.length;\r\n                }\r\n                else {\r\n                    this._lineNumber += lines.length - 1;\r\n                    this._column = columns.length;\r\n                }\r\n                this._css.push(chunk);\r\n            };\r\n            SourceMapOutput.prototype.isEmpty = function () {\r\n                return this._css.length === 0;\r\n            };\r\n            SourceMapOutput.prototype.toCSS = function (context) {\r\n                this._sourceMapGenerator = new this._sourceMapGeneratorConstructor({ file: this._outputFilename, sourceRoot: null });\r\n                if (this._outputSourceFiles) {\r\n                    for (var filename in this._contentsMap) {\r\n                        if (this._contentsMap.hasOwnProperty(filename)) {\r\n                            var source = this._contentsMap[filename];\r\n                            if (this._contentsIgnoredCharsMap[filename]) {\r\n                                source = source.slice(this._contentsIgnoredCharsMap[filename]);\r\n                            }\r\n                            this._sourceMapGenerator.setSourceContent(this.normalizeFilename(filename), source);\r\n                        }\r\n                    }\r\n                }\r\n                this._rootNode.genCSS(context, this);\r\n                if (this._css.length > 0) {\r\n                    var sourceMapURL = void 0;\r\n                    var sourceMapContent = JSON.stringify(this._sourceMapGenerator.toJSON());\r\n                    if (this.sourceMapURL) {\r\n                        sourceMapURL = this.sourceMapURL;\r\n                    }\r\n                    else if (this._sourceMapFilename) {\r\n                        sourceMapURL = this._sourceMapFilename;\r\n                    }\r\n                    this.sourceMapURL = sourceMapURL;\r\n                    this.sourceMap = sourceMapContent;\r\n                }\r\n                return this._css.join('');\r\n            };\r\n            return SourceMapOutput;\r\n        }());\r\n        return SourceMapOutput;\r\n    }\n\n    function SourceMapBuilder (SourceMapOutput, environment) {\r\n        var SourceMapBuilder = /** @class */ (function () {\r\n            function SourceMapBuilder(options) {\r\n                this.options = options;\r\n            }\r\n            SourceMapBuilder.prototype.toCSS = function (rootNode, options, imports) {\r\n                var sourceMapOutput = new SourceMapOutput({\r\n                    contentsIgnoredCharsMap: imports.contentsIgnoredChars,\r\n                    rootNode: rootNode,\r\n                    contentsMap: imports.contents,\r\n                    sourceMapFilename: this.options.sourceMapFilename,\r\n                    sourceMapURL: this.options.sourceMapURL,\r\n                    outputFilename: this.options.sourceMapOutputFilename,\r\n                    sourceMapBasepath: this.options.sourceMapBasepath,\r\n                    sourceMapRootpath: this.options.sourceMapRootpath,\r\n                    outputSourceFiles: this.options.outputSourceFiles,\r\n                    sourceMapGenerator: this.options.sourceMapGenerator,\r\n                    sourceMapFileInline: this.options.sourceMapFileInline,\r\n                    disableSourcemapAnnotation: this.options.disableSourcemapAnnotation\r\n                });\r\n                var css = sourceMapOutput.toCSS(options);\r\n                this.sourceMap = sourceMapOutput.sourceMap;\r\n                this.sourceMapURL = sourceMapOutput.sourceMapURL;\r\n                if (this.options.sourceMapInputFilename) {\r\n                    this.sourceMapInputFilename = sourceMapOutput.normalizeFilename(this.options.sourceMapInputFilename);\r\n                }\r\n                if (this.options.sourceMapBasepath !== undefined && this.sourceMapURL !== undefined) {\r\n                    this.sourceMapURL = sourceMapOutput.removeBasepath(this.sourceMapURL);\r\n                }\r\n                return css + this.getCSSAppendage();\r\n            };\r\n            SourceMapBuilder.prototype.getCSSAppendage = function () {\r\n                var sourceMapURL = this.sourceMapURL;\r\n                if (this.options.sourceMapFileInline) {\r\n                    if (this.sourceMap === undefined) {\r\n                        return '';\r\n                    }\r\n                    sourceMapURL = \"data:application/json;base64,\" + environment.encodeBase64(this.sourceMap);\r\n                }\r\n                if (this.options.disableSourcemapAnnotation) {\r\n                    return '';\r\n                }\r\n                if (sourceMapURL) {\r\n                    return \"/*# sourceMappingURL=\" + sourceMapURL + \" */\";\r\n                }\r\n                return '';\r\n            };\r\n            SourceMapBuilder.prototype.getExternalSourceMap = function () {\r\n                return this.sourceMap;\r\n            };\r\n            SourceMapBuilder.prototype.setExternalSourceMap = function (sourceMap) {\r\n                this.sourceMap = sourceMap;\r\n            };\r\n            SourceMapBuilder.prototype.isInline = function () {\r\n                return this.options.sourceMapFileInline;\r\n            };\r\n            SourceMapBuilder.prototype.getSourceMapURL = function () {\r\n                return this.sourceMapURL;\r\n            };\r\n            SourceMapBuilder.prototype.getOutputFilename = function () {\r\n                return this.options.sourceMapOutputFilename;\r\n            };\r\n            SourceMapBuilder.prototype.getInputFilename = function () {\r\n                return this.sourceMapInputFilename;\r\n            };\r\n            return SourceMapBuilder;\r\n        }());\r\n        return SourceMapBuilder;\r\n    }\n\n    function ParseTree (SourceMapBuilder) {\r\n        var ParseTree = /** @class */ (function () {\r\n            function ParseTree(root, imports) {\r\n                this.root = root;\r\n                this.imports = imports;\r\n            }\r\n            ParseTree.prototype.toCSS = function (options) {\r\n                var evaldRoot;\r\n                var result = {};\r\n                var sourceMapBuilder;\r\n                try {\r\n                    evaldRoot = transformTree(this.root, options);\r\n                }\r\n                catch (e) {\r\n                    throw new LessError(e, this.imports);\r\n                }\r\n                try {\r\n                    var compress = Boolean(options.compress);\r\n                    if (compress) {\r\n                        logger$1.warn('The compress option has been deprecated. ' +\r\n                            'We recommend you use a dedicated css minifier, for instance see less-plugin-clean-css.');\r\n                    }\r\n                    var toCSSOptions = {\r\n                        compress: compress,\r\n                        dumpLineNumbers: options.dumpLineNumbers,\r\n                        strictUnits: Boolean(options.strictUnits),\r\n                        numPrecision: 8\r\n                    };\r\n                    if (options.sourceMap) {\r\n                        sourceMapBuilder = new SourceMapBuilder(options.sourceMap);\r\n                        result.css = sourceMapBuilder.toCSS(evaldRoot, toCSSOptions, this.imports);\r\n                    }\r\n                    else {\r\n                        result.css = evaldRoot.toCSS(toCSSOptions);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    throw new LessError(e, this.imports);\r\n                }\r\n                if (options.pluginManager) {\r\n                    var postProcessors = options.pluginManager.getPostProcessors();\r\n                    for (var i = 0; i < postProcessors.length; i++) {\r\n                        result.css = postProcessors[i].process(result.css, { sourceMap: sourceMapBuilder, options: options, imports: this.imports });\r\n                    }\r\n                }\r\n                if (options.sourceMap) {\r\n                    result.map = sourceMapBuilder.getExternalSourceMap();\r\n                }\r\n                result.imports = [];\r\n                for (var file in this.imports.files) {\r\n                    if (this.imports.files.hasOwnProperty(file) && file !== this.imports.rootFilename) {\r\n                        result.imports.push(file);\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n            return ParseTree;\r\n        }());\r\n        return ParseTree;\r\n    }\n\n    function ImportManager (environment) {\r\n        // FileInfo = {\r\n        //  'rewriteUrls' - option - whether to adjust URL's to be relative\r\n        //  'filename' - full resolved filename of current file\r\n        //  'rootpath' - path to append to normal URLs for this node\r\n        //  'currentDirectory' - path to the current file, absolute\r\n        //  'rootFilename' - filename of the base file\r\n        //  'entryPath' - absolute path to the entry file\r\n        //  'reference' - whether the file should not be output and only output parts that are referenced\r\n        var ImportManager = /** @class */ (function () {\r\n            function ImportManager(less, context, rootFileInfo) {\r\n                this.less = less;\r\n                this.rootFilename = rootFileInfo.filename;\r\n                this.paths = context.paths || []; // Search paths, when importing\r\n                this.contents = {}; // map - filename to contents of all the files\r\n                this.contentsIgnoredChars = {}; // map - filename to lines at the beginning of each file to ignore\r\n                this.mime = context.mime;\r\n                this.error = null;\r\n                this.context = context;\r\n                // Deprecated? Unused outside of here, could be useful.\r\n                this.queue = []; // Files which haven't been imported yet\r\n                this.files = {}; // Holds the imported parse trees.\r\n            }\r\n            /**\r\n             * Add an import to be imported\r\n             * @param path - the raw path\r\n             * @param tryAppendExtension - whether to try appending a file extension (.less or .js if the path has no extension)\r\n             * @param currentFileInfo - the current file info (used for instance to work out relative paths)\r\n             * @param importOptions - import options\r\n             * @param callback - callback for when it is imported\r\n             */\r\n            ImportManager.prototype.push = function (path, tryAppendExtension, currentFileInfo, importOptions, callback) {\r\n                var importManager = this, pluginLoader = this.context.pluginManager.Loader;\r\n                this.queue.push(path);\r\n                var fileParsedFunc = function (e, root, fullPath) {\r\n                    importManager.queue.splice(importManager.queue.indexOf(path), 1); // Remove the path from the queue\r\n                    var importedEqualsRoot = fullPath === importManager.rootFilename;\r\n                    if (importOptions.optional && e) {\r\n                        callback(null, { rules: [] }, false, null);\r\n                        logger$1.info(\"The file \" + fullPath + \" was skipped because it was not found and the import was marked optional.\");\r\n                    }\r\n                    else {\r\n                        // Inline imports aren't cached here.\r\n                        // If we start to cache them, please make sure they won't conflict with non-inline imports of the\r\n                        // same name as they used to do before this comment and the condition below have been added.\r\n                        if (!importManager.files[fullPath] && !importOptions.inline) {\r\n                            importManager.files[fullPath] = { root: root, options: importOptions };\r\n                        }\r\n                        if (e && !importManager.error) {\r\n                            importManager.error = e;\r\n                        }\r\n                        callback(e, root, importedEqualsRoot, fullPath);\r\n                    }\r\n                };\r\n                var newFileInfo = {\r\n                    rewriteUrls: this.context.rewriteUrls,\r\n                    entryPath: currentFileInfo.entryPath,\r\n                    rootpath: currentFileInfo.rootpath,\r\n                    rootFilename: currentFileInfo.rootFilename\r\n                };\r\n                var fileManager = environment.getFileManager(path, currentFileInfo.currentDirectory, this.context, environment);\r\n                if (!fileManager) {\r\n                    fileParsedFunc({ message: \"Could not find a file-manager for \" + path });\r\n                    return;\r\n                }\r\n                var loadFileCallback = function (loadedFile) {\r\n                    var plugin;\r\n                    var resolvedFilename = loadedFile.filename;\r\n                    var contents = loadedFile.contents.replace(/^\\uFEFF/, '');\r\n                    // Pass on an updated rootpath if path of imported file is relative and file\r\n                    // is in a (sub|sup) directory\r\n                    //\r\n                    // Examples:\r\n                    // - If path of imported file is 'module/nav/nav.less' and rootpath is 'less/',\r\n                    //   then rootpath should become 'less/module/nav/'\r\n                    // - If path of imported file is '../mixins.less' and rootpath is 'less/',\r\n                    //   then rootpath should become 'less/../'\r\n                    newFileInfo.currentDirectory = fileManager.getPath(resolvedFilename);\r\n                    if (newFileInfo.rewriteUrls) {\r\n                        newFileInfo.rootpath = fileManager.join((importManager.context.rootpath || ''), fileManager.pathDiff(newFileInfo.currentDirectory, newFileInfo.entryPath));\r\n                        if (!fileManager.isPathAbsolute(newFileInfo.rootpath) && fileManager.alwaysMakePathsAbsolute()) {\r\n                            newFileInfo.rootpath = fileManager.join(newFileInfo.entryPath, newFileInfo.rootpath);\r\n                        }\r\n                    }\r\n                    newFileInfo.filename = resolvedFilename;\r\n                    var newEnv = new contexts.Parse(importManager.context);\r\n                    newEnv.processImports = false;\r\n                    importManager.contents[resolvedFilename] = contents;\r\n                    if (currentFileInfo.reference || importOptions.reference) {\r\n                        newFileInfo.reference = true;\r\n                    }\r\n                    if (importOptions.isPlugin) {\r\n                        plugin = pluginLoader.evalPlugin(contents, newEnv, importManager, importOptions.pluginArgs, newFileInfo);\r\n                        if (plugin instanceof LessError) {\r\n                            fileParsedFunc(plugin, null, resolvedFilename);\r\n                        }\r\n                        else {\r\n                            fileParsedFunc(null, plugin, resolvedFilename);\r\n                        }\r\n                    }\r\n                    else if (importOptions.inline) {\r\n                        fileParsedFunc(null, contents, resolvedFilename);\r\n                    }\r\n                    else {\r\n                        // import (multiple) parse trees apparently get altered and can't be cached.\r\n                        // TODO: investigate why this is\r\n                        if (importManager.files[resolvedFilename]\r\n                            && !importManager.files[resolvedFilename].options.multiple\r\n                            && !importOptions.multiple) {\r\n                            fileParsedFunc(null, importManager.files[resolvedFilename].root, resolvedFilename);\r\n                        }\r\n                        else {\r\n                            new Parser(newEnv, importManager, newFileInfo).parse(contents, function (e, root) {\r\n                                fileParsedFunc(e, root, resolvedFilename);\r\n                            });\r\n                        }\r\n                    }\r\n                };\r\n                var loadedFile;\r\n                var promise;\r\n                var context = clone(this.context);\r\n                if (tryAppendExtension) {\r\n                    context.ext = importOptions.isPlugin ? '.js' : '.less';\r\n                }\r\n                if (importOptions.isPlugin) {\r\n                    context.mime = 'application/javascript';\r\n                    if (context.syncImport) {\r\n                        loadedFile = pluginLoader.loadPluginSync(path, currentFileInfo.currentDirectory, context, environment, fileManager);\r\n                    }\r\n                    else {\r\n                        promise = pluginLoader.loadPlugin(path, currentFileInfo.currentDirectory, context, environment, fileManager);\r\n                    }\r\n                }\r\n                else {\r\n                    if (context.syncImport) {\r\n                        loadedFile = fileManager.loadFileSync(path, currentFileInfo.currentDirectory, context, environment);\r\n                    }\r\n                    else {\r\n                        promise = fileManager.loadFile(path, currentFileInfo.currentDirectory, context, environment, function (err, loadedFile) {\r\n                            if (err) {\r\n                                fileParsedFunc(err);\r\n                            }\r\n                            else {\r\n                                loadFileCallback(loadedFile);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                if (loadedFile) {\r\n                    if (!loadedFile.filename) {\r\n                        fileParsedFunc(loadedFile);\r\n                    }\r\n                    else {\r\n                        loadFileCallback(loadedFile);\r\n                    }\r\n                }\r\n                else if (promise) {\r\n                    promise.then(loadFileCallback, fileParsedFunc);\r\n                }\r\n            };\r\n            return ImportManager;\r\n        }());\r\n        return ImportManager;\r\n    }\n\n    function Parse (environment, ParseTree, ImportManager) {\r\n        var parse = function (input, options, callback) {\r\n            if (typeof options === 'function') {\r\n                callback = options;\r\n                options = copyOptions(this.options, {});\r\n            }\r\n            else {\r\n                options = copyOptions(this.options, options || {});\r\n            }\r\n            if (!callback) {\r\n                var self_1 = this;\r\n                return new Promise(function (resolve, reject) {\r\n                    parse.call(self_1, input, options, function (err, output) {\r\n                        if (err) {\r\n                            reject(err);\r\n                        }\r\n                        else {\r\n                            resolve(output);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                var context_1;\r\n                var rootFileInfo = void 0;\r\n                var pluginManager_1 = new PluginManagerFactory(this, !options.reUsePluginManager);\r\n                options.pluginManager = pluginManager_1;\r\n                context_1 = new contexts.Parse(options);\r\n                if (options.rootFileInfo) {\r\n                    rootFileInfo = options.rootFileInfo;\r\n                }\r\n                else {\r\n                    var filename = options.filename || 'input';\r\n                    var entryPath = filename.replace(/[^\\/\\\\]*$/, '');\r\n                    rootFileInfo = {\r\n                        filename: filename,\r\n                        rewriteUrls: context_1.rewriteUrls,\r\n                        rootpath: context_1.rootpath || '',\r\n                        currentDirectory: entryPath,\r\n                        entryPath: entryPath,\r\n                        rootFilename: filename\r\n                    };\r\n                    // add in a missing trailing slash\r\n                    if (rootFileInfo.rootpath && rootFileInfo.rootpath.slice(-1) !== '/') {\r\n                        rootFileInfo.rootpath += '/';\r\n                    }\r\n                }\r\n                var imports_1 = new ImportManager(this, context_1, rootFileInfo);\r\n                this.importManager = imports_1;\r\n                // TODO: allow the plugins to be just a list of paths or names\r\n                // Do an async plugin queue like lessc\r\n                if (options.plugins) {\r\n                    options.plugins.forEach(function (plugin) {\r\n                        var evalResult, contents;\r\n                        if (plugin.fileContent) {\r\n                            contents = plugin.fileContent.replace(/^\\uFEFF/, '');\r\n                            evalResult = pluginManager_1.Loader.evalPlugin(contents, context_1, imports_1, plugin.options, plugin.filename);\r\n                            if (evalResult instanceof LessError) {\r\n                                return callback(evalResult);\r\n                            }\r\n                        }\r\n                        else {\r\n                            pluginManager_1.addPlugin(plugin);\r\n                        }\r\n                    });\r\n                }\r\n                new Parser(context_1, imports_1, rootFileInfo)\r\n                    .parse(input, function (e, root) {\r\n                    if (e) {\r\n                        return callback(e);\r\n                    }\r\n                    callback(null, root, imports_1, options);\r\n                }, options);\r\n            }\r\n        };\r\n        return parse;\r\n    }\n\n    function Render (environment, ParseTree, ImportManager) {\r\n        var render = function (input, options, callback) {\r\n            if (typeof options === 'function') {\r\n                callback = options;\r\n                options = copyOptions(this.options, {});\r\n            }\r\n            else {\r\n                options = copyOptions(this.options, options || {});\r\n            }\r\n            if (!callback) {\r\n                var self_1 = this;\r\n                return new Promise(function (resolve, reject) {\r\n                    render.call(self_1, input, options, function (err, output) {\r\n                        if (err) {\r\n                            reject(err);\r\n                        }\r\n                        else {\r\n                            resolve(output);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                this.parse(input, options, function (err, root, imports, options) {\r\n                    if (err) {\r\n                        return callback(err);\r\n                    }\r\n                    var result;\r\n                    try {\r\n                        var parseTree = new ParseTree(root, imports);\r\n                        result = parseTree.toCSS(options);\r\n                    }\r\n                    catch (err) {\r\n                        return callback(err);\r\n                    }\r\n                    callback(null, result);\r\n                });\r\n            }\r\n        };\r\n        return render;\r\n    }\n\n    var version = \"4.1.3\";\n\n    function parseNodeVersion(version) {\n      var match = version.match(/^v(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,2})(?:-([0-9A-Za-z-.]+))?(?:\\+([0-9A-Za-z-.]+))?$/); // eslint-disable-line max-len\n      if (!match) {\n        throw new Error('Unable to parse: ' + version);\n      }\n\n      var res = {\n        major: parseInt(match[1], 10),\n        minor: parseInt(match[2], 10),\n        patch: parseInt(match[3], 10),\n        pre: match[4] || '',\n        build: match[5] || '',\n      };\n\n      return res;\n    }\n\n    var parseNodeVersion_1 = parseNodeVersion;\n\n    function lessRoot (environment, fileManagers) {\r\n        var sourceMapOutput, sourceMapBuilder, parseTree, importManager;\r\n        environment = new Environment(environment, fileManagers);\r\n        sourceMapOutput = SourceMapOutput(environment);\r\n        sourceMapBuilder = SourceMapBuilder(sourceMapOutput, environment);\r\n        parseTree = ParseTree(sourceMapBuilder);\r\n        importManager = ImportManager(environment);\r\n        var render = Render(environment, parseTree);\r\n        var parse = Parse(environment, parseTree, importManager);\r\n        var v = parseNodeVersion_1(\"v\" + version);\r\n        var initial = {\r\n            version: [v.major, v.minor, v.patch],\r\n            data: data,\r\n            tree: tree,\r\n            Environment: Environment,\r\n            AbstractFileManager: AbstractFileManager,\r\n            AbstractPluginLoader: AbstractPluginLoader,\r\n            environment: environment,\r\n            visitors: visitors,\r\n            Parser: Parser,\r\n            functions: functions(environment),\r\n            contexts: contexts,\r\n            SourceMapOutput: sourceMapOutput,\r\n            SourceMapBuilder: sourceMapBuilder,\r\n            ParseTree: parseTree,\r\n            ImportManager: importManager,\r\n            render: render,\r\n            parse: parse,\r\n            LessError: LessError,\r\n            transformTree: transformTree,\r\n            utils: utils,\r\n            PluginManager: PluginManagerFactory,\r\n            logger: logger$1\r\n        };\r\n        // Create a public API\r\n        var ctor = function (t) {\r\n            return function () {\r\n                var obj = Object.create(t.prototype);\r\n                t.apply(obj, Array.prototype.slice.call(arguments, 0));\r\n                return obj;\r\n            };\r\n        };\r\n        var t;\r\n        var api = Object.create(initial);\r\n        for (var n in initial.tree) {\r\n            /* eslint guard-for-in: 0 */\r\n            t = initial.tree[n];\r\n            if (typeof t === 'function') {\r\n                api[n.toLowerCase()] = ctor(t);\r\n            }\r\n            else {\r\n                api[n] = Object.create(null);\r\n                for (var o in t) {\r\n                    /* eslint guard-for-in: 0 */\r\n                    api[n][o.toLowerCase()] = ctor(t[o]);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Some of the functions assume a `this` context of the API object,\r\n         * which causes it to fail when wrapped for ES6 imports.\r\n         *\r\n         * An assumed `this` should be removed in the future.\r\n         */\r\n        initial.parse = initial.parse.bind(api);\r\n        initial.render = initial.render.bind(api);\r\n        return api;\r\n    }\n\n    /* global window, XMLHttpRequest */\r\n    var options$1;\r\n    var logger;\r\n    var fileCache = {};\r\n    // TODOS - move log somewhere. pathDiff and doing something similar in node. use pathDiff in the other browser file for the initial load\r\n    var FileManager = function () { };\r\n    FileManager.prototype = Object.assign(new AbstractFileManager(), {\r\n        alwaysMakePathsAbsolute: function () {\r\n            return true;\r\n        },\r\n        join: function (basePath, laterPath) {\r\n            if (!basePath) {\r\n                return laterPath;\r\n            }\r\n            return this.extractUrlParts(laterPath, basePath).path;\r\n        },\r\n        doXHR: function (url, type, callback, errback) {\r\n            var xhr = new XMLHttpRequest();\r\n            var async = options$1.isFileProtocol ? options$1.fileAsync : true;\r\n            if (typeof xhr.overrideMimeType === 'function') {\r\n                xhr.overrideMimeType('text/css');\r\n            }\r\n            logger.debug(\"XHR: Getting '\" + url + \"'\");\r\n            xhr.open('GET', url, async);\r\n            xhr.setRequestHeader('Accept', type || 'text/x-less, text/css; q=0.9, */*; q=0.5');\r\n            xhr.send(null);\r\n            function handleResponse(xhr, callback, errback) {\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    callback(xhr.responseText, xhr.getResponseHeader('Last-Modified'));\r\n                }\r\n                else if (typeof errback === 'function') {\r\n                    errback(xhr.status, url);\r\n                }\r\n            }\r\n            if (options$1.isFileProtocol && !options$1.fileAsync) {\r\n                if (xhr.status === 0 || (xhr.status >= 200 && xhr.status < 300)) {\r\n                    callback(xhr.responseText);\r\n                }\r\n                else {\r\n                    errback(xhr.status, url);\r\n                }\r\n            }\r\n            else if (async) {\r\n                xhr.onreadystatechange = function () {\r\n                    if (xhr.readyState == 4) {\r\n                        handleResponse(xhr, callback, errback);\r\n                    }\r\n                };\r\n            }\r\n            else {\r\n                handleResponse(xhr, callback, errback);\r\n            }\r\n        },\r\n        supports: function () {\r\n            return true;\r\n        },\r\n        clearFileCache: function () {\r\n            fileCache = {};\r\n        },\r\n        loadFile: function (filename, currentDirectory, options, environment) {\r\n            // TODO: Add prefix support like less-node?\r\n            // What about multiple paths?\r\n            if (currentDirectory && !this.isPathAbsolute(filename)) {\r\n                filename = currentDirectory + filename;\r\n            }\r\n            filename = options.ext ? this.tryAppendExtension(filename, options.ext) : filename;\r\n            options = options || {};\r\n            // sheet may be set to the stylesheet for the initial load or a collection of properties including\r\n            // some context variables for imports\r\n            var hrefParts = this.extractUrlParts(filename, window.location.href);\r\n            var href = hrefParts.url;\r\n            var self = this;\r\n            return new Promise(function (resolve, reject) {\r\n                if (options.useFileCache && fileCache[href]) {\r\n                    try {\r\n                        var lessText = fileCache[href];\r\n                        return resolve({ contents: lessText, filename: href, webInfo: { lastModified: new Date() } });\r\n                    }\r\n                    catch (e) {\r\n                        return reject({ filename: href, message: \"Error loading file \" + href + \" error was \" + e.message });\r\n                    }\r\n                }\r\n                self.doXHR(href, options.mime, function doXHRCallback(data, lastModified) {\r\n                    // per file cache\r\n                    fileCache[href] = data;\r\n                    // Use remote copy (re-parse)\r\n                    resolve({ contents: data, filename: href, webInfo: { lastModified: lastModified } });\r\n                }, function doXHRError(status, url) {\r\n                    reject({ type: 'File', message: \"'\" + url + \"' wasn't found (\" + status + \")\", href: href });\r\n                });\r\n            });\r\n        }\r\n    });\r\n    var FM = (function (opts, log) {\r\n        options$1 = opts;\r\n        logger = log;\r\n        return FileManager;\r\n    });\n\n    // TODO: Add tests for browser @plugin\r\n    /**\r\n     * Browser Plugin Loader\r\n     */\r\n    var PluginLoader = function (less) {\r\n        this.less = less;\r\n        // Should we shim this.require for browser? Probably not?\r\n    };\r\n    PluginLoader.prototype = Object.assign(new AbstractPluginLoader(), {\r\n        loadPlugin: function (filename, basePath, context, environment, fileManager) {\r\n            return new Promise(function (fulfill, reject) {\r\n                fileManager.loadFile(filename, basePath, context, environment)\r\n                    .then(fulfill).catch(reject);\r\n            });\r\n        }\r\n    });\n\n    var LogListener = (function (less, options) {\r\n        var logLevel_debug = 4;\r\n        var logLevel_info = 3;\r\n        var logLevel_warn = 2;\r\n        var logLevel_error = 1;\r\n        // The amount of logging in the javascript console.\r\n        // 3 - Debug, information and errors\r\n        // 2 - Information and errors\r\n        // 1 - Errors\r\n        // 0 - None\r\n        // Defaults to 2\r\n        options.logLevel = typeof options.logLevel !== 'undefined' ? options.logLevel : (options.env === 'development' ? logLevel_info : logLevel_error);\r\n        if (!options.loggers) {\r\n            options.loggers = [{\r\n                    debug: function (msg) {\r\n                        if (options.logLevel >= logLevel_debug) {\r\n                            console.log(msg);\r\n                        }\r\n                    },\r\n                    info: function (msg) {\r\n                        if (options.logLevel >= logLevel_info) {\r\n                            console.log(msg);\r\n                        }\r\n                    },\r\n                    warn: function (msg) {\r\n                        if (options.logLevel >= logLevel_warn) {\r\n                            console.warn(msg);\r\n                        }\r\n                    },\r\n                    error: function (msg) {\r\n                        if (options.logLevel >= logLevel_error) {\r\n                            console.error(msg);\r\n                        }\r\n                    }\r\n                }];\r\n        }\r\n        for (var i = 0; i < options.loggers.length; i++) {\r\n            less.logger.addListener(options.loggers[i]);\r\n        }\r\n    });\n\n    var ErrorReporting = (function (window, less, options) {\r\n        function errorHTML(e, rootHref) {\r\n            var id = \"less-error-message:\" + extractId(rootHref || '');\r\n            var template = '<li><label>{line}</label><pre class=\"{class}\">{content}</pre></li>';\r\n            var elem = window.document.createElement('div');\r\n            var timer;\r\n            var content;\r\n            var errors = [];\r\n            var filename = e.filename || rootHref;\r\n            var filenameNoPath = filename.match(/([^\\/]+(\\?.*)?)$/)[1];\r\n            elem.id = id;\r\n            elem.className = 'less-error-message';\r\n            content = \"<h3>\" + (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') +\r\n                (\"</h3><p>in <a href=\\\"\" + filename + \"\\\">\" + filenameNoPath + \"</a> \");\r\n            var errorline = function (e, i, classname) {\r\n                if (e.extract[i] !== undefined) {\r\n                    errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\r\n                        .replace(/\\{class\\}/, classname)\r\n                        .replace(/\\{content\\}/, e.extract[i]));\r\n                }\r\n            };\r\n            if (e.line) {\r\n                errorline(e, 0, '');\r\n                errorline(e, 1, 'line');\r\n                errorline(e, 2, '');\r\n                content += \"on line \" + e.line + \", column \" + (e.column + 1) + \":</p><ul>\" + errors.join('') + \"</ul>\";\r\n            }\r\n            if (e.stack && (e.extract || options.logLevel >= 4)) {\r\n                content += \"<br/>Stack Trace</br />\" + e.stack.split('\\n').slice(1).join('<br/>');\r\n            }\r\n            elem.innerHTML = content;\r\n            // CSS for error messages\r\n            browser.createCSS(window.document, [\r\n                '.less-error-message ul, .less-error-message li {',\r\n                'list-style-type: none;',\r\n                'margin-right: 15px;',\r\n                'padding: 4px 0;',\r\n                'margin: 0;',\r\n                '}',\r\n                '.less-error-message label {',\r\n                'font-size: 12px;',\r\n                'margin-right: 15px;',\r\n                'padding: 4px 0;',\r\n                'color: #cc7777;',\r\n                '}',\r\n                '.less-error-message pre {',\r\n                'color: #dd6666;',\r\n                'padding: 4px 0;',\r\n                'margin: 0;',\r\n                'display: inline-block;',\r\n                '}',\r\n                '.less-error-message pre.line {',\r\n                'color: #ff0000;',\r\n                '}',\r\n                '.less-error-message h3 {',\r\n                'font-size: 20px;',\r\n                'font-weight: bold;',\r\n                'padding: 15px 0 5px 0;',\r\n                'margin: 0;',\r\n                '}',\r\n                '.less-error-message a {',\r\n                'color: #10a',\r\n                '}',\r\n                '.less-error-message .error {',\r\n                'color: red;',\r\n                'font-weight: bold;',\r\n                'padding-bottom: 2px;',\r\n                'border-bottom: 1px dashed red;',\r\n                '}'\r\n            ].join('\\n'), { title: 'error-message' });\r\n            elem.style.cssText = [\r\n                'font-family: Arial, sans-serif',\r\n                'border: 1px solid #e00',\r\n                'background-color: #eee',\r\n                'border-radius: 5px',\r\n                '-webkit-border-radius: 5px',\r\n                '-moz-border-radius: 5px',\r\n                'color: #e00',\r\n                'padding: 15px',\r\n                'margin-bottom: 15px'\r\n            ].join(';');\r\n            if (options.env === 'development') {\r\n                timer = setInterval(function () {\r\n                    var document = window.document;\r\n                    var body = document.body;\r\n                    if (body) {\r\n                        if (document.getElementById(id)) {\r\n                            body.replaceChild(elem, document.getElementById(id));\r\n                        }\r\n                        else {\r\n                            body.insertBefore(elem, body.firstChild);\r\n                        }\r\n                        clearInterval(timer);\r\n                    }\r\n                }, 10);\r\n            }\r\n        }\r\n        function removeErrorHTML(path) {\r\n            var node = window.document.getElementById(\"less-error-message:\" + extractId(path));\r\n            if (node) {\r\n                node.parentNode.removeChild(node);\r\n            }\r\n        }\r\n        function removeError(path) {\r\n            if (!options.errorReporting || options.errorReporting === 'html') {\r\n                removeErrorHTML(path);\r\n            }\r\n            else if (options.errorReporting === 'console') ;\r\n            else if (typeof options.errorReporting === 'function') {\r\n                options.errorReporting('remove', path);\r\n            }\r\n        }\r\n        function errorConsole(e, rootHref) {\r\n            var template = '{line} {content}';\r\n            var filename = e.filename || rootHref;\r\n            var errors = [];\r\n            var content = (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') + \" in \" + filename;\r\n            var errorline = function (e, i, classname) {\r\n                if (e.extract[i] !== undefined) {\r\n                    errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\r\n                        .replace(/\\{class\\}/, classname)\r\n                        .replace(/\\{content\\}/, e.extract[i]));\r\n                }\r\n            };\r\n            if (e.line) {\r\n                errorline(e, 0, '');\r\n                errorline(e, 1, 'line');\r\n                errorline(e, 2, '');\r\n                content += \" on line \" + e.line + \", column \" + (e.column + 1) + \":\\n\" + errors.join('\\n');\r\n            }\r\n            if (e.stack && (e.extract || options.logLevel >= 4)) {\r\n                content += \"\\nStack Trace\\n\" + e.stack;\r\n            }\r\n            less.logger.error(content);\r\n        }\r\n        function error(e, rootHref) {\r\n            if (!options.errorReporting || options.errorReporting === 'html') {\r\n                errorHTML(e, rootHref);\r\n            }\r\n            else if (options.errorReporting === 'console') {\r\n                errorConsole(e, rootHref);\r\n            }\r\n            else if (typeof options.errorReporting === 'function') {\r\n                options.errorReporting('add', e, rootHref);\r\n            }\r\n        }\r\n        return {\r\n            add: error,\r\n            remove: removeError\r\n        };\r\n    });\n\n    // Cache system is a bit outdated and could do with work\r\n    var Cache = (function (window, options, logger) {\r\n        var cache = null;\r\n        if (options.env !== 'development') {\r\n            try {\r\n                cache = (typeof window.localStorage === 'undefined') ? null : window.localStorage;\r\n            }\r\n            catch (_) { }\r\n        }\r\n        return {\r\n            setCSS: function (path, lastModified, modifyVars, styles) {\r\n                if (cache) {\r\n                    logger.info(\"saving \" + path + \" to cache.\");\r\n                    try {\r\n                        cache.setItem(path, styles);\r\n                        cache.setItem(path + \":timestamp\", lastModified);\r\n                        if (modifyVars) {\r\n                            cache.setItem(path + \":vars\", JSON.stringify(modifyVars));\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // TODO - could do with adding more robust error handling\r\n                        logger.error(\"failed to save \\\"\" + path + \"\\\" to local storage for caching.\");\r\n                    }\r\n                }\r\n            },\r\n            getCSS: function (path, webInfo, modifyVars) {\r\n                var css = cache && cache.getItem(path);\r\n                var timestamp = cache && cache.getItem(path + \":timestamp\");\r\n                var vars = cache && cache.getItem(path + \":vars\");\r\n                modifyVars = modifyVars || {};\r\n                vars = vars || \"{}\"; // if not set, treat as the JSON representation of an empty object\r\n                if (timestamp && webInfo.lastModified &&\r\n                    (new Date(webInfo.lastModified).valueOf() ===\r\n                        new Date(timestamp).valueOf()) &&\r\n                    JSON.stringify(modifyVars) === vars) {\r\n                    // Use local copy\r\n                    return css;\r\n                }\r\n            }\r\n        };\r\n    });\n\n    var ImageSize = (function () {\r\n        function imageSize() {\r\n            throw {\r\n                type: 'Runtime',\r\n                message: 'Image size functions are not supported in browser version of less'\r\n            };\r\n        }\r\n        var imageFunctions = {\r\n            'image-size': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            },\r\n            'image-width': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            },\r\n            'image-height': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            }\r\n        };\r\n        functionRegistry.addMultiple(imageFunctions);\r\n    });\n\n    //\r\n    var root = (function (window, options) {\r\n        var document = window.document;\r\n        var less = lessRoot();\r\n        less.options = options;\r\n        var environment = less.environment;\r\n        var FileManager = FM(options, less.logger);\r\n        var fileManager = new FileManager();\r\n        environment.addFileManager(fileManager);\r\n        less.FileManager = FileManager;\r\n        less.PluginLoader = PluginLoader;\r\n        LogListener(less, options);\r\n        var errors = ErrorReporting(window, less, options);\r\n        var cache = less.cache = options.cache || Cache(window, options, less.logger);\r\n        ImageSize(less.environment);\r\n        // Setup user functions - Deprecate?\r\n        if (options.functions) {\r\n            less.functions.functionRegistry.addMultiple(options.functions);\r\n        }\r\n        var typePattern = /^text\\/(x-)?less$/;\r\n        function clone(obj) {\r\n            var cloned = {};\r\n            for (var prop in obj) {\r\n                if (obj.hasOwnProperty(prop)) {\r\n                    cloned[prop] = obj[prop];\r\n                }\r\n            }\r\n            return cloned;\r\n        }\r\n        // only really needed for phantom\r\n        function bind(func, thisArg) {\r\n            var curryArgs = Array.prototype.slice.call(arguments, 2);\r\n            return function () {\r\n                var args = curryArgs.concat(Array.prototype.slice.call(arguments, 0));\r\n                return func.apply(thisArg, args);\r\n            };\r\n        }\r\n        function loadStyles(modifyVars) {\r\n            var styles = document.getElementsByTagName('style');\r\n            var style;\r\n            for (var i = 0; i < styles.length; i++) {\r\n                style = styles[i];\r\n                if (style.type.match(typePattern)) {\r\n                    var instanceOptions = clone(options);\r\n                    instanceOptions.modifyVars = modifyVars;\r\n                    var lessText = style.innerHTML || '';\r\n                    instanceOptions.filename = document.location.href.replace(/#.*$/, '');\r\n                    /* jshint loopfunc:true */\r\n                    // use closure to store current style\r\n                    less.render(lessText, instanceOptions, bind(function (style, e, result) {\r\n                        if (e) {\r\n                            errors.add(e, 'inline');\r\n                        }\r\n                        else {\r\n                            style.type = 'text/css';\r\n                            if (style.styleSheet) {\r\n                                style.styleSheet.cssText = result.css;\r\n                            }\r\n                            else {\r\n                                style.innerHTML = result.css;\r\n                            }\r\n                        }\r\n                    }, null, style));\r\n                }\r\n            }\r\n        }\r\n        function loadStyleSheet(sheet, callback, reload, remaining, modifyVars) {\r\n            var instanceOptions = clone(options);\r\n            addDataAttr(instanceOptions, sheet);\r\n            instanceOptions.mime = sheet.type;\r\n            if (modifyVars) {\r\n                instanceOptions.modifyVars = modifyVars;\r\n            }\r\n            function loadInitialFileCallback(loadedFile) {\r\n                var data = loadedFile.contents;\r\n                var path = loadedFile.filename;\r\n                var webInfo = loadedFile.webInfo;\r\n                var newFileInfo = {\r\n                    currentDirectory: fileManager.getPath(path),\r\n                    filename: path,\r\n                    rootFilename: path,\r\n                    rewriteUrls: instanceOptions.rewriteUrls\r\n                };\r\n                newFileInfo.entryPath = newFileInfo.currentDirectory;\r\n                newFileInfo.rootpath = instanceOptions.rootpath || newFileInfo.currentDirectory;\r\n                if (webInfo) {\r\n                    webInfo.remaining = remaining;\r\n                    var css = cache.getCSS(path, webInfo, instanceOptions.modifyVars);\r\n                    if (!reload && css) {\r\n                        webInfo.local = true;\r\n                        callback(null, css, data, sheet, webInfo, path);\r\n                        return;\r\n                    }\r\n                }\r\n                // TODO add tests around how this behaves when reloading\r\n                errors.remove(path);\r\n                instanceOptions.rootFileInfo = newFileInfo;\r\n                less.render(data, instanceOptions, function (e, result) {\r\n                    if (e) {\r\n                        e.href = path;\r\n                        callback(e);\r\n                    }\r\n                    else {\r\n                        cache.setCSS(sheet.href, webInfo.lastModified, instanceOptions.modifyVars, result.css);\r\n                        callback(null, result.css, data, sheet, webInfo, path);\r\n                    }\r\n                });\r\n            }\r\n            fileManager.loadFile(sheet.href, null, instanceOptions, environment)\r\n                .then(function (loadedFile) {\r\n                loadInitialFileCallback(loadedFile);\r\n            }).catch(function (err) {\r\n                console.log(err);\r\n                callback(err);\r\n            });\r\n        }\r\n        function loadStyleSheets(callback, reload, modifyVars) {\r\n            for (var i = 0; i < less.sheets.length; i++) {\r\n                loadStyleSheet(less.sheets[i], callback, reload, less.sheets.length - (i + 1), modifyVars);\r\n            }\r\n        }\r\n        function initRunningMode() {\r\n            if (less.env === 'development') {\r\n                less.watchTimer = setInterval(function () {\r\n                    if (less.watchMode) {\r\n                        fileManager.clearFileCache();\r\n                        loadStyleSheets(function (e, css, _, sheet, webInfo) {\r\n                            if (e) {\r\n                                errors.add(e, e.href || sheet.href);\r\n                            }\r\n                            else if (css) {\r\n                                browser.createCSS(window.document, css, sheet);\r\n                            }\r\n                        });\r\n                    }\r\n                }, options.poll);\r\n            }\r\n        }\r\n        //\r\n        // Watch mode\r\n        //\r\n        less.watch = function () {\r\n            if (!less.watchMode) {\r\n                less.env = 'development';\r\n                initRunningMode();\r\n            }\r\n            this.watchMode = true;\r\n            return true;\r\n        };\r\n        less.unwatch = function () { clearInterval(less.watchTimer); this.watchMode = false; return false; };\r\n        //\r\n        // Synchronously get all <link> tags with the 'rel' attribute set to\r\n        // \"stylesheet/less\".\r\n        //\r\n        less.registerStylesheetsImmediately = function () {\r\n            var links = document.getElementsByTagName('link');\r\n            less.sheets = [];\r\n            for (var i = 0; i < links.length; i++) {\r\n                if (links[i].rel === 'stylesheet/less' || (links[i].rel.match(/stylesheet/) &&\r\n                    (links[i].type.match(typePattern)))) {\r\n                    less.sheets.push(links[i]);\r\n                }\r\n            }\r\n        };\r\n        //\r\n        // Asynchronously get all <link> tags with the 'rel' attribute set to\r\n        // \"stylesheet/less\", returning a Promise.\r\n        //\r\n        less.registerStylesheets = function () { return new Promise(function (resolve, reject) {\r\n            less.registerStylesheetsImmediately();\r\n            resolve();\r\n        }); };\r\n        //\r\n        // With this function, it's possible to alter variables and re-render\r\n        // CSS without reloading less-files\r\n        //\r\n        less.modifyVars = function (record) { return less.refresh(true, record, false); };\r\n        less.refresh = function (reload, modifyVars, clearFileCache) {\r\n            if ((reload || clearFileCache) && clearFileCache !== false) {\r\n                fileManager.clearFileCache();\r\n            }\r\n            return new Promise(function (resolve, reject) {\r\n                var startTime;\r\n                var endTime;\r\n                var totalMilliseconds;\r\n                var remainingSheets;\r\n                startTime = endTime = new Date();\r\n                // Set counter for remaining unprocessed sheets\r\n                remainingSheets = less.sheets.length;\r\n                if (remainingSheets === 0) {\r\n                    endTime = new Date();\r\n                    totalMilliseconds = endTime - startTime;\r\n                    less.logger.info('Less has finished and no sheets were loaded.');\r\n                    resolve({\r\n                        startTime: startTime,\r\n                        endTime: endTime,\r\n                        totalMilliseconds: totalMilliseconds,\r\n                        sheets: less.sheets.length\r\n                    });\r\n                }\r\n                else {\r\n                    // Relies on less.sheets array, callback seems to be guaranteed to be called for every element of the array\r\n                    loadStyleSheets(function (e, css, _, sheet, webInfo) {\r\n                        if (e) {\r\n                            errors.add(e, e.href || sheet.href);\r\n                            reject(e);\r\n                            return;\r\n                        }\r\n                        if (webInfo.local) {\r\n                            less.logger.info(\"Loading \" + sheet.href + \" from cache.\");\r\n                        }\r\n                        else {\r\n                            less.logger.info(\"Rendered \" + sheet.href + \" successfully.\");\r\n                        }\r\n                        browser.createCSS(window.document, css, sheet);\r\n                        less.logger.info(\"CSS for \" + sheet.href + \" generated in \" + (new Date() - endTime) + \"ms\");\r\n                        // Count completed sheet\r\n                        remainingSheets--;\r\n                        // Check if the last remaining sheet was processed and then call the promise\r\n                        if (remainingSheets === 0) {\r\n                            totalMilliseconds = new Date() - startTime;\r\n                            less.logger.info(\"Less has finished. CSS generated in \" + totalMilliseconds + \"ms\");\r\n                            resolve({\r\n                                startTime: startTime,\r\n                                endTime: endTime,\r\n                                totalMilliseconds: totalMilliseconds,\r\n                                sheets: less.sheets.length\r\n                            });\r\n                        }\r\n                        endTime = new Date();\r\n                    }, reload, modifyVars);\r\n                }\r\n                loadStyles(modifyVars);\r\n            });\r\n        };\r\n        less.refreshStyles = loadStyles;\r\n        return less;\r\n    });\n\n    /**\r\n     * Kicks off less and compiles any stylesheets\r\n     * used in the browser distributed version of less\r\n     * to kick-start less using the browser api\r\n     */\r\n    var options = defaultOptions();\r\n    if (window.less) {\r\n        for (var key in window.less) {\r\n            if (window.less.hasOwnProperty(key)) {\r\n                options[key] = window.less[key];\r\n            }\r\n        }\r\n    }\r\n    addDefaultOptions(window, options);\r\n    options.plugins = options.plugins || [];\r\n    if (window.LESS_PLUGINS) {\r\n        options.plugins = options.plugins.concat(window.LESS_PLUGINS);\r\n    }\r\n    var less = root(window, options);\r\n    window.less = less;\r\n    var css;\r\n    var head;\r\n    var style;\r\n    // Always restore page visibility\r\n    function resolveOrReject(data) {\r\n        if (data.filename) {\r\n            console.warn(data);\r\n        }\r\n        if (!options.async) {\r\n            head.removeChild(style);\r\n        }\r\n    }\r\n    if (options.onReady) {\r\n        if (/!watch/.test(window.location.hash)) {\r\n            less.watch();\r\n        }\r\n        // Simulate synchronous stylesheet loading by hiding page rendering\r\n        if (!options.async) {\r\n            css = 'body { display: none !important }';\r\n            head = document.head || document.getElementsByTagName('head')[0];\r\n            style = document.createElement('style');\r\n            style.type = 'text/css';\r\n            if (style.styleSheet) {\r\n                style.styleSheet.cssText = css;\r\n            }\r\n            else {\r\n                style.appendChild(document.createTextNode(css));\r\n            }\r\n            head.appendChild(style);\r\n        }\r\n        less.registerStylesheetsImmediately();\r\n        less.pageLoadFinished = less.refresh(less.env === 'development').then(resolveOrReject, resolveOrReject);\r\n    }\n\n    return less;\n\n})));\n"],"names":["baseUrl","dev","pro","config","HttpRequest","constructor","this","getInsideConfig","header","interceptors","instance","request","use","error","Promise","reject","response","options","axios","getMenu","param","url","method","data","getData","getUser","params","global","factory","module","exports","defaultOptions","javascriptEnabled","depends","compress","lint","paths","color","strictImports","insecure","rootpath","rewriteUrls","math","strictUnits","globalVars","modifyVars","urlArgs","extractId","href","replace","addDataAttr","tag","opt","dataset","hasOwnProperty","JSON","parse","_","browser","createCSS","document","styles","sheet","id","title","oldStyleNode","getElementById","keepOldStyleNode","styleNode","createElement","setAttribute","media","styleSheet","appendChild","createTextNode","childNodes","length","firstChild","nodeValue","head","getElementsByTagName","nextEl","nextSibling","parentNode","insertBefore","removeChild","cssText","e","Error","currentScript","window","scripts","addDefaultOptions","undefined","isFileProtocol","test","location","protocol","async","fileAsync","poll","env","hostname","port","dumpLineNumbers","exec","hash","useFileCache","onReady","relativeUrls","logger$1","msg","_fireEvent","warn","info","debug","addListener","listener","_listeners","push","removeListener","i","splice","type","logFunction","Environment","externalEnvironment","fileManagers","optionalFunctions","requiredFunctions","functions","concat","propName","environmentFunc","bind","prototype","getFileManager","filename","currentDirectory","environment","isSync","pluginManager","getFileManagers","fileManager","addFileManager","clearFileManagers","colors","unitConversions","duration","angle","Math","PI","Node","parent","visibilityBlocks","nodeVisible","rootNode","parsed","Object","defineProperty","get","fileInfo","enumerable","configurable","getIndex","setParent","nodes","set","node","Array","isArray","forEach","_index","_fileInfo","isRulesetLike","toCSS","context","strs","genCSS","add","chunk","index","isEmpty","join","output","value","accept","visitor","visit","eval","_operate","op","a","b","fround","precision","numPrecision","Number","toFixed","compare","numericCompare","blocksVisibility","addVisibilityBlock","removeVisibilityBlock","ensureVisibility","ensureInvisibility","isVisible","visibilityInfo","copyVisibilityInfo","Color","rgb","originalForm","self","match","map","c","parseInt","alpha","split","clamp$1","v","max","min","toHex","round","toString","assign","luma","r","g","pow","doNotCompress","colorFunction","args","indexOf","toHSL","h","s","l","toRGB","splitcolor","operate","other","d","toHSV","toARGB","x","fromKeyword","keyword","key","toLowerCase","slice","Paren","_noSpaceCombinators","Combinator","emptyOrWhitespace","trim","spaceOrEmpty","Element","combinator","isVariable","currentFileInfo","clone","firstSelector","charAt","Math$1","ALWAYS","PARENS_DIVISION","PARENS","RewriteUrls","OFF","LOCAL","ALL","getType","payload","call","isPlainObject","getPrototypeOf","__spreadArrays","il","arguments","k","j","jl","assignProp","carry","newVal","originalObject","includeNonenumerable","propType","propertyIsEnumerable","writable","copy","target","props","getOwnPropertyNames","symbols","getOwnPropertySymbols","reduce","includes","val","nonenumerable","getLocation","inputStream","n","line","column","copyArray","arr","obj","cloned","prop","defaults","obj1","obj2","newObj","_defaults","defaults_1","copyOptions","opts","strictMath","merge","flattenArray","result","length_1","utils","freeze","__proto__","anonymousFunc","LessError","fileContentMap","currentFilename","message","stack","input","contents","loc","col","callLine","lines","found","func","Function","lineAdjust","callExtract","extract","create","F","stylize","str","errorTxt","substr","Selector","elements","extendList","condition","evaldCondition","getElements","mixinElements_","visitArray","createDerived","newSelector","mediaEmpty","els","parseNode","err","imports","createEmptySelectors","el","sels","olen","len","mixinElements","shift","isJustParentSelector","extend","element","getIsOutput","Value","Keyword","True","False","Anonymous","mapLines","rulesetLike","allowRoot","Boolean","MATH$1","evalName","name","Declaration","important","inline","variable","asComment","ctx","debugInfo","lineNumber","fileName","asMediaQuery","filenameWithProtocol","lineSeparator","lastRule","prevMath","evaldValue","mathBypass","importantScope","importantResult","pop","makeImportant","Comment","isLineComment","isSilent","isCompressed","contexts","copyFromOriginal","original","destination","propertiesToCopy","parseCopyProperties","Parse","evalCopyProperties","isPathRelative","path","isPathLocalRelative","makeRegistry","base","_data","addMultiple","_this","keys","getLocalFunctions","inherit","Eval","frames","enterCalc","calcStack","inCalc","exitCalc","inParenthesis","parensStack","outOfParenthesis","mathOn","isMathOn","pathRequiresRewrite","isRelative","rewritePath","newPath","normalizePath","segment","segments","reverse","functionRegistry","defaultFunc","value_","error_","reset","Ruleset","selectors","rules","_lookups","_variables","_properties","isRuleset","selCnt","selector","hasVariable","hasOnePassingSelector","toParseSelectors","rule","subRule","ruleset","originalRuleset","root","firstRoot","allowImports","ctxFrames","unshift","ctxSelectors","evalImports","rsRules","evalFirst","mediaBlockCount","mediaBlocks","filter","apply","resetCache","bubbleSelectors","importRules","matchArgs","matchCondition","lastSelector","_rulesets","variables","vars","name_1","properties","name_2","decl","parseValue","property","lastDeclaration","toParse","transformDeclaration","nodes_1","rulesets","filtRules","prependRule","find","foundMixins","debugInfo$1","charsetRuleNodes","ruleNodes","tabLevel","sep","tabRuleStr","tabSetStr","charsetNodeIndex","importNodeIndex","isCharset","pathCnt","pathSubCnt","currentLastRule","joinSelectors","joinSelector","createParenthesis","elementsToPak","originalElement","replacementParen","insideParent","createSelector","containedElement","addReplacementIntoPath","beginningPath","addPath","replacedElement","originalSelector","newSelectorPath","newJoinedSelector","parentEl","restOfPath","addAllReplacementsIntoPath","addPaths","mergeElementsOnToSelectors","sel","replaceParentSelector","inSelector","currentElements","newSelectors","selectorsMultiplied","hadParentSelector","findNestedSelector","maybeSelector","nestedSelector","nestedPaths","replaced","replacedNewSelectors","replacementSelector","deriveSelector","deriveFrom","newPaths","concatenated","AtRule","isRooted","outputRuleset","mediaPathBackup","mediaBlocksBackup","mediaPath","ruleCnt","DetachedRuleset","callEval","Unit","numerator","denominator","backupUnit","sort","returnStr","is","unitString","toUpperCase","isLength","RegExp","isSingular","callback","usedUnits","group","mapUnit","groupName","atomicUnit","cancel","counter","count","Dimension","unit","parseFloat","isNaN","toColor","strValue","String","convertTo","unify","conversions","targetUnit","applyUnit","derivedConversions","MATH","Operation","operands","isSpaced","__spreadArray","to","from","pack","ar","Expression","noSpacing","returnValue","parens","doubleParen","parensInOp","throwAwayComments","functionCaller","isValid","evalArgs","commentFilter","item","subNodes","Call","calc","currentMathContext","funcCaller","columnNumber","Variable","evaluating","frame","fun","Property","mergeRules","less","visitors","ToCSSVisitor","_mergeRules","vArr","Attribute","cif","Quoted","content","escaped","quote","variableRegex","propRegex","escapePath","containsVariables","that","variableReplacement","propertyReplacement","iterativeReplace","regexp","replacementFnc","evaluatedValue","URL","isEvald","delimiter","Media","features","evalTop","evalNested","multiMedia","permute","fragment","rest","Import","css","pathValue","getPath","isPlugin","reference","isVariableImport","evalForImport","evalPath","doEval","registry","skip","importedFilename","newImport","JsEvalNode","evaluateJavaScript","expression","evalContext","jsify","toJS","JavaScript","string","Assignment","Condition","negate","lvalue","rvalue","UnicodeDescriptor","Negative","Extend","option","object_id","next_id","parent_ids","allowBefore","allowAfter","findSelfSelectors","selectorElements","selfElements","selfSelectors","VariableCall","detachedRuleset","NamespaceValue","ruleCall","lookups","substring","Definition","variadic","arity","optionalParameters","required","p","evalParams","mixinEnv","evaldArguments","varargs","arg","isNamedFound","argIndex","argsLength","evalCall","_arguments","mixinFrames","allArgsCnt","requiredArgsCnt","MixinCall","mixins","mixin","mixinPath","argValue","m","f","isRecursive","isOneFound","candidate","defaultResult","noArgumentsFilter","candidates","conditionResult","defFalseEitherCase","defNone","defTrue","defFalse","calcDefGroup","namespace","expand","format","newRules","_setVisibilityToReplacement","replacement","tree","AbstractFileManager","lastIndexOf","tryAppendExtension","ext","tryAppendLessExtension","supportsSync","alwaysMakePathsAbsolute","isPathAbsolute","basePath","laterPath","pathDiff","urlDirectories","baseUrlDirectories","urlParts","extractUrlParts","baseUrlParts","diff","hostPart","directories","urlPartsRegex","returner","rawDirectories","rawPath","fileUrl","AbstractPluginLoader","require","evalPlugin","pluginOptions","loader","pluginObj","localModule","shortname","FileManager","trySetOptions","registerPlugin","validatePlugin","minVersion","compareVersion","addPlugin","plugin","setOptions","version","versionToString","aVersion","bVersion","versionString","printUsage","plugins","_visitArgs","visitDeeper","_hasIndexed","_noop","indexNodeTypes","ticker","child","typeIndex","Visitor","implementation","_implementation","_visitInCache","_visitOutCache","nodeTypeIndex","fnName","impl","funcOut","visitArgs","newNode","isReplacing","cnt","nonReplacing","out","evald","flatten","nestedCnt","nestedItem","ImportSequencer","onSequencerEmpty","variableImports","_onSequencerEmpty","_currentDepth","addImport","importSequencer","importItem","isReady","tryRun","addVariableImport","variableImport","ImportVisitor","importer","finish","_visitor","_importer","_finish","importCount","onceFileDetectionMap","recursionDetector","_sequencer","run","isFinished","visitImport","importNode","inlineCSS","importParent","processImportNode","evaldImportNode","multiple","importMultiple","onImported","sequencedOnImported","importedAtRoot","fullPath","importVisitor","isOptional","optional","duplicateImport","oldContext","visitDeclaration","declNode","visitDeclarationOut","visitAtRule","atRuleNode","visitAtRuleOut","visitMixinDefinition","mixinDefinitionNode","visitMixinDefinitionOut","visitRuleset","rulesetNode","visitRulesetOut","visitMedia","mediaNode","visitMediaOut","SetTreeVisibilityVisitor","visible","ExtendFinderVisitor","allExtendsStack","allExtends","allSelectorsExtendList","extendOnEveryPath","selectorPath","selExtendList","allSelectorsExtend","foundExtends","firstExtendOnThisSelectorPath","ProcessExtendsVisitor","extendFinder","extendIndices","doExtendChaining","newRoot","checkExtendsForNonMatched","indices","hasFoundMatches","extendsList","extendsListTarget","iterationCount","extendIndex","targetExtendIndex","matches","targetExtend","newExtend","extendsToAdd","extendVisitor","findMatch","selfSelector","extendSelector","extendChainCount","selectorOne","selectorTwo","ruleNode","visitSelector","selectorNode","pathIndex","selectorsToAdd","extendedSelectors","haystackSelectorPath","haystackSelectorIndex","hackstackSelector","hackstackElementIndex","haystackElement","targetCombinator","potentialMatch","needleElements","potentialMatches","matched","initialCombinator","isElementValuesEqual","finished","endPathIndex","endPathElementIndex","elementValue1","elementValue2","matchIndex","firstElement","newElements","currentSelectorPathIndex","currentSelectorPathElementIndex","currentValue","derived","newAllExtends","lastIndex","JoinSelectorVisitor","CSSVisitorUtils","_context","containsSilentNonBlockedChild","bodyRules","keepOnlyVisibleChilds","owner","thing","hasVisibleSelector","resolveVisibility","originalRules","compiledRulesBody","isVisibleRuleset","mixinNode","visitExtend","extendNode","visitComment","commentNode","visitAtRuleWithBody","visitAtRuleWithoutBody","visitAnonymous","anonymousNode","hasFakeRuleset","getBodyRules","nodeRules","charset","comment","checkValidNodes","isRoot","_compileRulesetPaths","nodeRuleCnt","_removeDuplicateRules","ruleList","ruleCache","ruleCSS","groups","groupsArr","result_1","space_1","comma_1","MarkVisibleSelectorsVisitor","ExtendVisitor","chunker","fail","lastOpening","lastOpeningParen","lastMultiComment","lastMultiCommentEndBrace","chunkerCurrentIndex","currentChunkStartIndex","cc","cc2","level","parenLevel","chunks","emitFrom","emitChunk","force","charCodeAt","fromCharCode","getParserInput","furthest","furthestPossibleErrorMessage","current","currentPos","saveStack","parserInput","CHARCODE_SPACE","CHARCODE_TAB","CHARCODE_LF","CHARCODE_CR","CHARCODE_PLUS","CHARCODE_COMMA","CHARCODE_FORWARD_SLASH","CHARCODE_9","skipWhitespace","nextChar","oldi","oldj","curr","endIndex","mem","inp","autoCommentAbsorb","nextNewLine","text","commentStore","nextStarSlash","save","restore","possibleErrorMessage","state","forget","isWhitespace","offset","pos","code","$re","tok","$char","$str","tokLength","$quoted","startChar","currentPosition","$parseUntil","testChar","returnVal","inComment","blockDepth","blockStack","parseGroups","startPos","lastPos","loop","char","expected","peek","peekChar","currentChar","prevChar","getInput","peekNotNumeric","start","chunkInput","failFunction","end","furthestReachedEnd","furthestChar","Parser","parsers","expect","expectChar","getDebugInfo","parseList","currentIndex","returnNodes","parser","endInfo","additionalData","ignored","preText","disablePluginRule","dir","serializeVars","preProcessors","getPreProcessors","process","banner","contentsIgnoredChars","primary","processImports","extendRule","definition","declaration","variableCall","entities","atrule","foundSemiColon","mixinLookup","quoted","forceEscaped","isEscaped","customFuncCall","stop","ieAlpha","boolean","prevArgs","isSemiColonSeparated","argsComma","argsSemiColon","assignment","literal","dimension","unicodeDescriptor","entity","ch","variableCurly","curly","propertyCurly","colorKeyword","ud","javascript","js","escape","jsQuote","parsedName","inValue","ruleLookups","isRule","getLookup","hasParens","elem","elemIndex","re","isCall","expressionContainsNamed","nameLoop","expressions","hasSep","cond","argInfo","conditions","block","lookupValue","attribute","slashedCombinator","isLess","when","blockRuleset","hasDR","ruleProperty","permissiveValue","anonymousValue","untilTokens","done","testCurrentChar","importOptions","mediaFeatures","o","optionName","importOption","mediaFeature","pluginArgs","nonVendorSpecificName","hasIdentifier","hasExpression","hasUnknown","hasBlock","sub","addition","multiplication","operation","operand","needsParens","logical","next","or","conditionAnd","insideCondition","negatedCondition","parenthesisCondition","atomicCondition","and","tryConditionFollowedByParenthesis","me","body","delim","simpleProperty","If","trueValue","falseValue","isdefined","colorFunctions","boolean$1","clamp","hsla","origColor","hsl","number$1","scaled","size","rgba","m1_1","m2_1","hue","hsv","hsva","floor","vs","perm","saturation","lightness","hsvhue","hsvsaturation","hsvvalue","red","green","blue","luminance","saturate","amount","desaturate","lighten","darken","fadein","fadeout","fade","spin","mix","color1","color2","weight","w","w1","w2","greyscale","contrast","dark","light","threshold","t","argb","tint","shade","colorBlend","mode","cb","cs","cr","ab","as","colorBlendModeFunctions","multiply","screen","overlay","softlight","sqrt","hardlight","difference","abs","exclusion","average","negation","f$1","dataUri","fallback","functionThis","mimetypeNode","filePathNode","mimetype","filePath","entryPath","fragmentStart","rawBuffer","useBase64","mimeLookup","charsetLookup","fileSync","loadFileSync","buf","encodeBase64","encodeURIComponent","uri","getItemsFromNode","items","list","_SELF","expr","_i","values","range","step","stepValue","each","rs","iterator","tryEval","valueName","keyName","indexName","MathHelper","fn","mathFunctions","ceil","tan","sin","cos","atan","asin","acos","fraction","num","minMax","isMin","currentUnified","referenceUnified","unitStatic","unitClone","order","number","convert","pi","mod","y","percentage","evaluated","encodeURI","pattern","flags","_loop_1","token","svg","direction","stops","gradientDirectionSvg","position","positionValue","gradientType","rectangleDimension","renderEnv","directionValue","throwArgumentDescriptor","isa","Type","isunit","types","isruleset","iscolor","isnumber","isstring","iskeyword","isurl","ispixel","ispercentage","isem","transformTree","evaldRoot","evalEnv","visitorIterator","visitors$1","preEvalVisitors","first","isPreEvalVisitor","isPreVisitor","pm","PluginManager","postProcessors","installedPlugins","pluginCache","Loader","PluginLoader","addPlugins","install","addVisitor","addPreProcessor","preProcessor","priority","indexToInsertAt","addPostProcessor","postProcessor","manager","getPostProcessors","getVisitors","PluginManagerFactory","newFactory","SourceMapOutput","_css","_rootNode","_contentsMap","contentsMap","_contentsIgnoredCharsMap","contentsIgnoredCharsMap","sourceMapFilename","_sourceMapFilename","_outputFilename","outputFilename","sourceMapURL","sourceMapBasepath","_sourceMapBasepath","sourceMapRootpath","_sourceMapRootpath","_outputSourceFiles","outputSourceFiles","_sourceMapGeneratorConstructor","getSourceMapGenerator","_lineNumber","_column","removeBasepath","normalizeFilename","sourceLines","columns","sourceColumns","inputSource","_sourceMapGenerator","addMapping","generated","source","file","sourceRoot","setSourceContent","sourceMapContent","stringify","toJSON","sourceMap","SourceMapBuilder","sourceMapOutput","sourceMapOutputFilename","sourceMapGenerator","sourceMapFileInline","disableSourcemapAnnotation","sourceMapInputFilename","getCSSAppendage","getExternalSourceMap","setExternalSourceMap","isInline","getSourceMapURL","getOutputFilename","getInputFilename","ParseTree","sourceMapBuilder","toCSSOptions","files","rootFilename","ImportManager","rootFileInfo","mime","queue","importManager","pluginLoader","fileParsedFunc","importedEqualsRoot","newFileInfo","loadedFile","promise","loadFileCallback","resolvedFilename","newEnv","syncImport","loadPluginSync","loadPlugin","loadFile","then","self_1","resolve","context_1","pluginManager_1","reUsePluginManager","imports_1","evalResult","fileContent","Render","render","parseTree","parseNodeVersion","res","major","minor","patch","pre","build","options$1","logger","parseNodeVersion_1","lessRoot","initial","ctor","api","fileCache","doXHR","errback","xhr","XMLHttpRequest","handleResponse","status","responseText","getResponseHeader","overrideMimeType","open","setRequestHeader","send","onreadystatechange","readyState","supports","clearFileCache","hrefParts","lessText","webInfo","lastModified","Date","FM","log","fulfill","catch","LogListener","logLevel_debug","logLevel_info","logLevel_warn","logLevel_error","logLevel","loggers","console","ErrorReporting","errorHTML","rootHref","timer","template","errors","filenameNoPath","className","errorline","classname","innerHTML","style","setInterval","replaceChild","clearInterval","removeErrorHTML","removeError","errorReporting","errorConsole","remove","Cache","cache","localStorage","setCSS","setItem","getCSS","getItem","timestamp","valueOf","ImageSize","imageSize","imageFunctions","typePattern","thisArg","curryArgs","loadStyles","instanceOptions","loadStyleSheet","reload","remaining","loadInitialFileCallback","local","loadStyleSheets","sheets","initRunningMode","watchTimer","watchMode","watch","unwatch","registerStylesheetsImmediately","links","rel","registerStylesheets","record","refresh","startTime","endTime","totalMilliseconds","remainingSheets","refreshStyles","LESS_PLUGINS","resolveOrReject","pageLoadFinished"],"sourceRoot":""}